{"ast":null,"code":"var _jsxFileName = \"/Users/nicole/rrrr/crm/src/pages/CallCenter/Dispatchers/List.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport classNames from \"classnames\";\nimport { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { BaseLink, useRoute } from \"react-router5\";\nimport Checkbox from \"../../../components/Checkbox\";\nimport Icon from \"../../../components/Icon\";\nimport ReportFilters from \"../../../components/reports/Filters\";\nimport ReportTableControls from \"../../../components/reports/TableControls\";\nimport ReportTableField from \"../../../components/reports/TableField\";\nimport { httpClient, nError } from \"../../../funcs/base\";\nimport { mapDispatchToProps, mapStateToProps } from \"../../../store\";\nimport \"../../../styles/pages/common/report-list.sass\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CallCenter_DispatchersPage_List = connect(mapStateToProps, mapDispatchToProps)(_s(function (props) {\n  _s();\n\n  const $router = useRoute();\n  const [$updater, $setUpdater] = useState(Math.random());\n  const [reportData, setReportData] = useState(null);\n  const [localInterface, setLocalInterface] = useState({\n    search: '',\n    page: 1,\n    filter_words: {\n      phone: [],\n      softphone: [],\n      active: []\n    },\n    sort: {\n      field: 'name',\n      direction: 'up'\n    },\n    sortFields: [{\n      span: 'Name',\n      value: 'name'\n    }, {\n      span: 'User',\n      value: 'user'\n    }, {\n      span: 'Phone',\n      value: 'phone'\n    }, {\n      span: 'Phone',\n      value: 'is_phone'\n    }, {\n      span: 'Softphone',\n      value: 'is_softphone'\n    }, {\n      span: 'Groups',\n      value: 'groups'\n    }, {\n      span: 'Active',\n      value: 'active'\n    }]\n  }); // Load dispatchers function\n\n  async function loadDispatchers() {\n    httpClient.defaults.headers['Authorization'] = `Bearer ${props.store.accessToken}`;\n    let activeFilters = { ...localInterface.filter_words\n    };\n    Object.keys(localInterface.filter_words).forEach(key => !activeFilters[key].length && delete activeFilters[key]);\n\n    try {\n      const {\n        data: dipsatchersReport\n      } = await axios.get('/json/call_center_dispatchers.json');\n      setReportData(dipsatchersReport);\n    } catch (error) {\n      nError(error);\n    }\n  } // Load clients on page mount\n\n\n  useEffect(() => {\n    loadDispatchers();\n  }, [$updater, localInterface.page]); // Is filter selected function\n\n  function isFilterSelected(field, value) {\n    return localInterface.filter_words[field].includes(value);\n  }\n\n  function isAllFiltersSelected(field) {\n    return localInterface.filter_words[field].length === 0;\n  }\n\n  function switchFilter(field, value, toggle) {\n    let _arr = [...localInterface.filter_words[field]];\n\n    if (toggle && value === \"All\") {\n      _arr = [];\n    } else if (!toggle) {\n      while (true) {\n        let i = _arr.findIndex(filter => filter === value);\n\n        if (i === -1) break;\n\n        _arr.splice(i, 1);\n      }\n    } else {\n      if (reportData !== null && reportData !== void 0 && reportData.interface.filter_words[field].every(option => _arr.concat([value]).includes(option))) _arr = [];else if (_arr.findIndex(filter => filter === value) === -1) _arr.push(value);\n    }\n\n    setLocalInterface({ ...localInterface,\n      filter_words: { ...localInterface.filter_words,\n        [field]: _arr\n      }\n    });\n  } // Render function\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: reportData ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"CallCenter_DispatchersPage_List\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top-nav\",\n        children: [/*#__PURE__*/_jsxDEV(BaseLink, {\n          router: $router.router,\n          routeName: \"call_center.phoneNumbers\",\n          className: classNames({\n            _active: $router.route.name === \"call_center.phoneNumbers\"\n          }),\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            icon: \"phone-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Phone Numbers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BaseLink, {\n          router: $router.router,\n          routeName: \"call_center.dispatchers\",\n          className: classNames({\n            _active: $router.route.name === \"call_center.dispatchers\"\n          }),\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            icon: \"user-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Dispatchers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BaseLink, {\n          router: $router.router,\n          routeName: \"call_center.groups\",\n          className: classNames({\n            _active: $router.route.name === \"call_center.groups\"\n          }),\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            icon: \"user-29\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Groups\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BaseLink, {\n          router: $router.router,\n          routeName: \"call_center.callFlows\",\n          className: classNames({\n            _active: $router.route.name === \"call_center.callFlows\"\n          }),\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            icon: \"share-7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Call Flows\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BaseLink, {\n          router: $router.router,\n          routeName: \"call_center.settings\",\n          className: classNames({\n            _active: $router.route.name === \"call_center.settings\"\n          }),\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            icon: \"gear-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReportFilters, {\n        onSearchInputChange: value => setLocalInterface({ ...localInterface,\n          search: value\n        }),\n        onUpdate: () => loadDispatchers()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReportTableControls, {\n        zIndex: 5,\n        onMaxRowsChange: () => $setUpdater(Math.random()),\n        amount: {\n          total: reportData.interface.rows_all,\n          start: reportData.interface.rows_start,\n          end: reportData.interface.rows_end\n        },\n        page: localInterface.page,\n        maxPages: reportData.interface.max_pages,\n        onPagesStart: () => setLocalInterface({ ...localInterface,\n          page: 1\n        }),\n        onPrevPage: () => setLocalInterface({ ...localInterface,\n          page: localInterface.page - 1\n        }),\n        onNextPage: () => setLocalInterface({ ...localInterface,\n          page: localInterface.page + 1\n        }),\n        onPagesEnd: () => setLocalInterface({ ...localInterface,\n          page: reportData.interface.max_pages\n        }),\n        sort: localInterface.sort,\n        sortFields: localInterface.sortFields,\n        onSortFieldChange: value => setLocalInterface({ ...localInterface,\n          sort: { ...localInterface.sort,\n            field: value\n          }\n        }),\n        onSortDirectionChange: value => setLocalInterface({ ...localInterface,\n          sort: { ...localInterface.sort,\n            direction: value\n          }\n        }),\n        onSortFire: () => $setUpdater(Math.random()),\n        addButton: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-button-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"_iconed _rounded add-button\",\n            onClick: () => $router.router.navigate('call_center.dispatchers.new', {}, {\n              reload: true\n            }),\n            children: [/*#__PURE__*/_jsxDEV(Icon, {\n              icon: \"plus-thin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Add Dispatcher\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Icon, {\n              icon: \"user-1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contents\",\n        children: [/*#__PURE__*/_jsxDEV(\"table\", {\n          className: classNames('table', '__show-on-wide', {\n            __respectAsidePanel: props.store.navActive.is\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(ReportTableField, {\n              contents: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 28\n              }, this),\n              sortDirection: localInterface.sort.field === 'name' ? localInterface.sort.direction : undefined,\n              onSortDirectionChange: value => setLocalInterface({ ...localInterface,\n                sort: {\n                  field: 'name',\n                  direction: value\n                }\n              }),\n              onFilterFire: () => $setUpdater(Math.random())\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ReportTableField, {\n              contents: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"User\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 28\n              }, this),\n              sortDirection: localInterface.sort.field === 'user' ? localInterface.sort.direction : undefined,\n              onSortDirectionChange: value => setLocalInterface({ ...localInterface,\n                sort: {\n                  field: 'user',\n                  direction: value\n                }\n              }),\n              onFilterFire: () => $setUpdater(Math.random())\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ReportTableField, {\n              contents: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Phone\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 28\n              }, this),\n              sortDirection: localInterface.sort.field === 'phone' ? localInterface.sort.direction : undefined,\n              onSortDirectionChange: value => setLocalInterface({ ...localInterface,\n                sort: {\n                  field: 'phone',\n                  direction: value\n                }\n              }),\n              onFilterFire: () => $setUpdater(Math.random())\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ReportTableField, {\n              contents: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Phone\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 28\n              }, this),\n              allFiltersSelected: isAllFiltersSelected(\"phone\"),\n              onAllFiltersChange: value => switchFilter(\"phone\", \"All\", value),\n              filterWords: reportData.interface.filter_words.phone.map(filterWord => ({\n                word: filterWord,\n                selected: isFilterSelected(\"phone\", filterWord)\n              })),\n              onFilterChange: value => switchFilter(\"phone\", value.word, value.selected),\n              sortDirection: localInterface.sort.field === 'is_phone' ? localInterface.sort.direction : undefined,\n              onSortDirectionChange: value => setLocalInterface({ ...localInterface,\n                sort: {\n                  field: 'is_phone',\n                  direction: value\n                }\n              }),\n              onFilterFire: () => $setUpdater(Math.random())\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ReportTableField, {\n              contents: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Softphone\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 28\n              }, this),\n              allFiltersSelected: isAllFiltersSelected(\"softphone\"),\n              onAllFiltersChange: value => switchFilter(\"softphone\", \"All\", value),\n              filterWords: reportData.interface.filter_words.softphone.map(filterWord => ({\n                word: filterWord,\n                selected: isFilterSelected(\"softphone\", filterWord)\n              })),\n              onFilterChange: value => switchFilter(\"softphone\", value.word, value.selected),\n              sortDirection: localInterface.sort.field === 'is_softphone' ? localInterface.sort.direction : undefined,\n              onSortDirectionChange: value => setLocalInterface({ ...localInterface,\n                sort: {\n                  field: 'is_softphone',\n                  direction: value\n                }\n              }),\n              onFilterFire: () => $setUpdater(Math.random())\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ReportTableField, {\n              contents: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Groups\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 28\n              }, this),\n              sortDirection: localInterface.sort.field === 'groups' ? localInterface.sort.direction : undefined,\n              onSortDirectionChange: value => setLocalInterface({ ...localInterface,\n                sort: {\n                  field: 'groups',\n                  direction: value\n                }\n              }),\n              onFilterFire: () => $setUpdater(Math.random())\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ReportTableField, {\n              contents: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Active\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 28\n              }, this),\n              allFiltersSelected: isAllFiltersSelected(\"active\"),\n              onAllFiltersChange: value => switchFilter(\"active\", \"All\", value),\n              filterWords: reportData.interface.filter_words.active.map(filterWord => ({\n                word: filterWord,\n                selected: isFilterSelected(\"active\", filterWord)\n              })),\n              onFilterChange: value => switchFilter(\"active\", value.word, value.selected),\n              sortDirection: localInterface.sort.field === 'active' ? localInterface.sort.direction : undefined,\n              onSortDirectionChange: value => setLocalInterface({ ...localInterface,\n                sort: {\n                  field: 'active',\n                  direction: value\n                }\n              }),\n              onFilterFire: () => $setUpdater(Math.random())\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this), reportData.dispatchers.map((dispatcher, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            onClick: () => $router.router.navigate('call_center.dispatchers.item', {}, {\n              reload: true\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: dispatcher.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: dispatcher.user\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: dispatcher.phone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                contents: \"\",\n                value: dispatcher.is_phone\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                contents: \"\",\n                value: dispatcher.is_softphone\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: dispatcher.groups\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: classNames({\n                'red-text': dispatcher.active === 'Off',\n                'green-text': dispatcher.active === 'On'\n              }),\n              children: dispatcher.active\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 17\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: classNames('table', '__hide-on-wide', '__hide-on-mobile', {\n            __respectAsidePanel: props.store.navActive.is\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 13\n          }, this), reportData.dispatchers.map((dispatcher, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            onClick: () => $router.router.navigate('call_center.dispatchers.item', {}, {\n              reload: true\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: dispatcher.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: dispatcher.user\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: dispatcher.phone\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"\\xA0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Phone:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 358,\n                  columnNumber: 51\n                }, this), \" \", /*#__PURE__*/_jsxDEV(Checkbox, {\n                  contents: \"\",\n                  value: dispatcher.is_phone\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 358,\n                  columnNumber: 71\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Softphone:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 359,\n                  columnNumber: 51\n                }, this), \" \", /*#__PURE__*/_jsxDEV(Checkbox, {\n                  contents: \"\",\n                  value: dispatcher.is_softphone\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 359,\n                  columnNumber: 75\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: dispatcher.groups\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classNames({\n                  'red-text': dispatcher.active === 'Inactive',\n                  'green-text': dispatcher.active === 'Active'\n                }),\n                children: dispatcher.active\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 17\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classNames('mobile-table-items', '__show-on-mobile', {\n            __respectAsidePanel: props.store.navActive.is\n          }),\n          children: reportData.dispatchers.map((dispatcher, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item\",\n            onClick: () => $router.router.navigate('call_center.dispatchers.item', {}, {\n              reload: true\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"__top\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"__left\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: dispatcher.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 383,\n                    columnNumber: 26\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 383,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: dispatcher.user\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 384,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"__right small\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classNames({\n                    'red-text': dispatcher.active === 'Inactive',\n                    'green-text': dispatcher.active === 'Active'\n                  }),\n                  children: dispatcher.active\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 390,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: dispatcher.phone\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 396,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 389,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"__bottom\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"__left\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex-container\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"gray\",\n                    children: \"Phone:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 406,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\" \", /*#__PURE__*/_jsxDEV(Checkbox, {\n                      contents: \"\",\n                      value: dispatcher.is_phone\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 407,\n                      columnNumber: 30\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 407,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 405,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex-container\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"gray\",\n                    children: \"Softphone:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 410,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\" \", /*#__PURE__*/_jsxDEV(Checkbox, {\n                      contents: \"\",\n                      value: dispatcher.is_softphone\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 411,\n                      columnNumber: 30\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 411,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 409,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"__right small\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: dispatcher.groups\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 417,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 416,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 17\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReportTableControls, {\n        isUnder: true,\n        onMaxRowsChange: () => $setUpdater(Math.random()),\n        amount: {\n          total: reportData.interface.rows_all,\n          start: reportData.interface.rows_start,\n          end: reportData.interface.rows_end\n        },\n        page: localInterface.page,\n        maxPages: reportData.interface.max_pages,\n        onPagesStart: () => setLocalInterface({ ...localInterface,\n          page: 1\n        }),\n        onPrevPage: () => setLocalInterface({ ...localInterface,\n          page: localInterface.page - 1\n        }),\n        onNextPage: () => setLocalInterface({ ...localInterface,\n          page: localInterface.page + 1\n        }),\n        onPagesEnd: () => setLocalInterface({ ...localInterface,\n          page: reportData.interface.max_pages\n        }),\n        sort: localInterface.sort,\n        sortFields: localInterface.sortFields,\n        onSortFieldChange: value => setLocalInterface({ ...localInterface,\n          sort: { ...localInterface.sort,\n            field: value\n          }\n        }),\n        onSortDirectionChange: value => setLocalInterface({ ...localInterface,\n          sort: { ...localInterface.sort,\n            direction: value\n          }\n        }),\n        onSortFire: () => $setUpdater(Math.random())\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this) : null\n  }, void 0, false);\n}, \"sSZaLkkgP20gyTwy6Am0S2bPksg=\", false, function () {\n  return [useRoute];\n}));\nexport default CallCenter_DispatchersPage_List;","map":{"version":3,"sources":["/Users/nicole/rrrr/crm/src/pages/CallCenter/Dispatchers/List.tsx"],"names":["axios","classNames","useEffect","useState","connect","BaseLink","useRoute","Checkbox","Icon","ReportFilters","ReportTableControls","ReportTableField","httpClient","nError","mapDispatchToProps","mapStateToProps","CallCenter_DispatchersPage_List","props","$router","$updater","$setUpdater","Math","random","reportData","setReportData","localInterface","setLocalInterface","search","page","filter_words","phone","softphone","active","sort","field","direction","sortFields","span","value","loadDispatchers","defaults","headers","store","accessToken","activeFilters","Object","keys","forEach","key","length","data","dipsatchersReport","get","error","isFilterSelected","includes","isAllFiltersSelected","switchFilter","toggle","_arr","i","findIndex","filter","splice","interface","every","option","concat","push","router","_active","route","name","total","rows_all","start","rows_start","end","rows_end","max_pages","navigate","reload","__respectAsidePanel","navActive","is","undefined","map","filterWord","word","selected","dispatchers","dispatcher","user","is_phone","is_softphone","groups"],"mappings":"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","sourcesContent":["import axios from \"axios\"\nimport classNames from \"classnames\"\nimport { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { BaseLink, useRoute } from \"react-router5\"\nimport Checkbox from \"../../../components/Checkbox\"\nimport Icon from \"../../../components/Icon\"\nimport ReportFilters from \"../../../components/reports/Filters\"\nimport ReportTableControls from \"../../../components/reports/TableControls\"\nimport ReportTableField from \"../../../components/reports/TableField\"\nimport { httpClient, nError } from \"../../../funcs/base\"\nimport { CallCenter_Dispatcher } from \"../../../models/CallCenter\"\nimport Client from \"../../../models/Client\"\nimport { StoreDispatch, StoreState, mapDispatchToProps, mapStateToProps } from \"../../../store\";\n\nimport \"../../../styles/pages/common/report-list.sass\"\n\ninterface Props {\n  store: StoreState,\n  dispatcher: StoreDispatch\n}\n\ntype FilterWord = 'phone' | 'softphone' | 'active'\n\ninterface DispatchersReport {\n\n  interface: {\n\n    filter_words: {\n\n      phone: string[],\n      softphone: string[],\n      active: string[],\n    },\n\n    max_pages: number,\n    rows_start: number,\n    rows_end: number,\n    rows_all: number,\n  },\n\n  permissions: {\n    show_dispatcher: boolean,\n    add_dispatcher: boolean\n  },\n\n  dispatchers: CallCenter_Dispatcher[]\n}\n\nconst CallCenter_DispatchersPage_List = connect(mapStateToProps, mapDispatchToProps)(function(props: Props) {\n\n  const $router = useRoute()\n\n  const [$updater, $setUpdater] = useState<any>(Math.random())\n\n  const [reportData, setReportData] = useState<DispatchersReport | null>(null)\n  const [localInterface, setLocalInterface] = useState({\n\n    search: '',\n\n    page: 1,\n\n    filter_words: {\n\n      phone: [] as string[],\n      softphone: [] as string[],\n      active: [] as string[],\n    },\n\n    sort: {\n      field: 'name',\n      direction: 'up' as 'up' | 'down'\n    },\n    sortFields: [{\n      span: 'Name',\n      value: 'name'\n    },{\n      span: 'User',\n      value: 'user'\n    },{\n      span: 'Phone',\n      value: 'phone'\n    },{\n      span: 'Phone',\n      value: 'is_phone'\n    },{\n      span: 'Softphone',\n      value: 'is_softphone'\n    },{\n      span: 'Groups',\n      value: 'groups'\n    },{\n      span: 'Active',\n      value: 'active'\n    }]\n\n  })\n\n  // Load dispatchers function\n  async function loadDispatchers() {\n\n    httpClient.defaults.headers['Authorization'] = `Bearer ${props.store.accessToken}`\n    \n    let activeFilters: any = {...localInterface.filter_words}\n    Object.keys(localInterface.filter_words).forEach((key: any) => !activeFilters[key].length && delete activeFilters[key])\n\n    try {\n      const { data: dipsatchersReport } = (await axios.get('/json/call_center_dispatchers.json')) as {data: DispatchersReport}\n\n      setReportData(dipsatchersReport)\n    }\n    catch (error) {\n      nError(error)\n    }\n  }\n\n  // Load clients on page mount\n  useEffect(() => { loadDispatchers() }, [\n    $updater,\n    localInterface.page,\n  ])\n\n  // Is filter selected function\n  function isFilterSelected(field: FilterWord, value: string) {\n    return localInterface.filter_words[field].includes(value)\n  }\n\n  function isAllFiltersSelected(field: FilterWord) {\n    return localInterface.filter_words[field].length === 0\n  }\n\n  function switchFilter(field: FilterWord, value: string, toggle: boolean) {\n\n    let _arr = [...localInterface.filter_words[field]]\n\n    if (toggle && value === \"All\") { _arr = [] }\n    \n    else if (!toggle) {\n\n      while (true) {\n        let i = _arr.findIndex((filter) => filter === value)\n        if(i === -1) break\n        _arr.splice(i, 1)\n      }\n    }\n      \n    else {\n\n      if (reportData?.interface.filter_words[field].every((option) => _arr.concat([value]).includes(option)))\n        _arr = []\n\n      else if(_arr.findIndex((filter) => filter === value) === -1)\n        _arr.push(value)\n    }\n\n    setLocalInterface({...localInterface, filter_words: {...localInterface.filter_words, [field]: _arr}})\n  }\n\n  // Render function\n  return (<>\n    {reportData ? (\n      <div className=\"CallCenter_DispatchersPage_List\" >\n\n        {/* Top navigation */}\n        <div className=\"top-nav\">\n          <BaseLink router={$router.router} routeName=\"call_center.phoneNumbers\" className={classNames({_active: $router.route.name === \"call_center.phoneNumbers\"})}>\n            <Icon icon=\"phone-1\" />\n            <span>Phone Numbers</span>\n          </BaseLink>\n\n          <BaseLink router={$router.router} routeName=\"call_center.dispatchers\" className={classNames({_active: $router.route.name === \"call_center.dispatchers\"})}>\n            <Icon icon=\"user-1\" />\n            <span>Dispatchers</span>\n          </BaseLink>\n\n          <BaseLink router={$router.router} routeName=\"call_center.groups\" className={classNames({_active: $router.route.name === \"call_center.groups\"})}>\n            <Icon icon=\"user-29\" />\n            <span>Groups</span>\n          </BaseLink>\n\n          <BaseLink router={$router.router} routeName=\"call_center.callFlows\" className={classNames({_active: $router.route.name === \"call_center.callFlows\"})}>\n            <Icon icon=\"share-7\" />\n            <span>Call Flows</span>\n          </BaseLink>\n\n          <BaseLink router={$router.router} routeName=\"call_center.settings\" className={classNames({_active: $router.route.name === \"call_center.settings\"})}>\n            <Icon icon=\"gear-1\" />\n            <span>Settings</span>\n          </BaseLink>\n        </div>\n\n        { /* List filters */}\n        <ReportFilters\n          onSearchInputChange={(value) => setLocalInterface({...localInterface, search: value})}\n\n          onUpdate={() => loadDispatchers()}\n        />\n\n        {/* Table controls */}\n        <ReportTableControls\n          zIndex={5}\n          \n          onMaxRowsChange={() => $setUpdater(Math.random())}\n\n          amount={{\n            total: reportData.interface.rows_all,\n            start: reportData.interface.rows_start,\n            end: reportData.interface.rows_end\n          }}\n\n          page={localInterface.page}\n          maxPages={reportData.interface.max_pages}\n          onPagesStart={() => setLocalInterface({...localInterface, page: 1})}\n          onPrevPage={() => setLocalInterface({...localInterface, page: localInterface.page-1})}\n          onNextPage={() => setLocalInterface({...localInterface, page: localInterface.page+1})}\n          onPagesEnd={() => setLocalInterface({...localInterface, page: reportData.interface.max_pages})}\n          \n          sort={localInterface.sort}\n          sortFields={localInterface.sortFields}\n          onSortFieldChange={(value) => setLocalInterface({...localInterface, sort: {...localInterface.sort, field: value}})}\n          onSortDirectionChange={(value) => setLocalInterface({...localInterface, sort: {...localInterface.sort, direction: value}})}\n          onSortFire={() => $setUpdater(Math.random())}\n\n          addButton={(\n            <div className=\"add-button-wrapper\">\n              <button className=\"_iconed _rounded add-button\" onClick={() => $router.router.navigate('call_center.dispatchers.new', {}, {reload: true})}>\n                <Icon icon=\"plus-thin\" />\n                <span>Add Dispatcher</span>\n                <Icon icon=\"user-1\" />\n              </button>\n            </div>\n          )}\n        />\n\n        <div className=\"contents\">\n\n          {/* Wide desktop table */}\n          <table className={classNames('table', '__show-on-wide', {\n            __respectAsidePanel: props.store.navActive.is\n          })}>\n            <tr>\n              <ReportTableField\n                contents={(<span>Name</span>)}\n\n                sortDirection={localInterface.sort.field === 'name' ? localInterface.sort.direction : undefined}\n                onSortDirectionChange={(value) => setLocalInterface({...localInterface, sort: {field: 'name', direction: value}})}\n\n                onFilterFire={() => $setUpdater(Math.random())}\n              />\n              <ReportTableField\n                contents={(<span>User</span>)}\n\n                sortDirection={localInterface.sort.field === 'user' ? localInterface.sort.direction : undefined}\n                onSortDirectionChange={(value) => setLocalInterface({...localInterface, sort: {field: 'user', direction: value}})}\n\n                onFilterFire={() => $setUpdater(Math.random())}\n              />\n              <ReportTableField\n                contents={(<span>Phone</span>)}\n\n                sortDirection={localInterface.sort.field === 'phone' ? localInterface.sort.direction : undefined}\n                onSortDirectionChange={(value) => setLocalInterface({...localInterface, sort: {field: 'phone', direction: value}})}\n\n                onFilterFire={() => $setUpdater(Math.random())}\n              />\n              <ReportTableField\n                contents={(<span>Phone</span>)}\n\n                allFiltersSelected={isAllFiltersSelected(\"phone\")}\n                onAllFiltersChange={(value) => switchFilter(\"phone\", \"All\", value)}\n\n                filterWords={reportData.interface.filter_words.phone.map((filterWord) => ({\n                  word: filterWord,\n                  selected: isFilterSelected(\"phone\", filterWord)\n                }))}\n                onFilterChange={(value) => switchFilter(\"phone\", value.word, value.selected)}\n\n                sortDirection={localInterface.sort.field === 'is_phone' ? localInterface.sort.direction : undefined}\n                onSortDirectionChange={(value) => setLocalInterface({...localInterface, sort: {field: 'is_phone', direction: value}})}\n\n                onFilterFire={() => $setUpdater(Math.random())}\n              />\n              <ReportTableField\n                contents={(<span>Softphone</span>)}\n\n                allFiltersSelected={isAllFiltersSelected(\"softphone\")}\n                onAllFiltersChange={(value) => switchFilter(\"softphone\", \"All\", value)}\n\n                filterWords={reportData.interface.filter_words.softphone.map((filterWord) => ({\n                  word: filterWord,\n                  selected: isFilterSelected(\"softphone\", filterWord)\n                }))}\n                onFilterChange={(value) => switchFilter(\"softphone\", value.word, value.selected)}\n\n                sortDirection={localInterface.sort.field === 'is_softphone' ? localInterface.sort.direction : undefined}\n                onSortDirectionChange={(value) => setLocalInterface({...localInterface, sort: {field: 'is_softphone', direction: value}})}\n\n                onFilterFire={() => $setUpdater(Math.random())}\n              />\n              <ReportTableField\n                contents={(<span>Groups</span>)}\n\n                sortDirection={localInterface.sort.field === 'groups' ? localInterface.sort.direction : undefined}\n                onSortDirectionChange={(value) => setLocalInterface({...localInterface, sort: {field: 'groups', direction: value}})}\n\n                onFilterFire={() => $setUpdater(Math.random())}\n              />\n              <ReportTableField\n                contents={(<span>Active</span>)}\n\n                allFiltersSelected={isAllFiltersSelected(\"active\")}\n                onAllFiltersChange={(value) => switchFilter(\"active\", \"All\", value)}\n\n                filterWords={reportData.interface.filter_words.active.map((filterWord) => ({\n                  word: filterWord,\n                  selected: isFilterSelected(\"active\", filterWord)\n                }))}\n                onFilterChange={(value) => switchFilter(\"active\", value.word, value.selected)}\n\n                sortDirection={localInterface.sort.field === 'active' ? localInterface.sort.direction : undefined}\n                onSortDirectionChange={(value) => setLocalInterface({...localInterface, sort: {field: 'active', direction: value}})}\n\n                onFilterFire={() => $setUpdater(Math.random())}\n              />\n            </tr>\n            {reportData.dispatchers.map((dispatcher, i) => (\n              <tr key={i} onClick={() => $router.router.navigate('call_center.dispatchers.item', {}, {reload: true})}>\n                <td>{dispatcher.name}</td>\n                <td>{dispatcher.user}</td>\n                <td>{dispatcher.phone}</td>\n                <td><Checkbox contents='' value={dispatcher.is_phone} /></td>\n                <td><Checkbox contents='' value={dispatcher.is_softphone} /></td>\n                <td>{dispatcher.groups}</td>\n                <td className={classNames({\n                  'red-text': dispatcher.active === 'Off',\n                  'green-text': dispatcher.active === 'On',\n                })}>{dispatcher.active}</td>\n              </tr>\n            ))}\n          </table>\n\n          {/* Medium screen table */}\n          <table className={classNames('table', '__hide-on-wide', '__hide-on-mobile', {\n            __respectAsidePanel: props.store.navActive.is\n          })}>\n            <tr></tr>\n            {reportData.dispatchers.map((dispatcher, i) => (\n              <tr key={i} onClick={() => $router.router.navigate('call_center.dispatchers.item', {}, {reload: true})}>\n                <td>\n                  <div>{dispatcher.name}</div>\n                  <div>{dispatcher.user}</div>\n                </td>\n                <td>\n                  <div>{dispatcher.phone}</div>\n                  <div>&nbsp;</div>\n                </td>\n                <td>\n                  <div className=\"flex-container\"><span>Phone:</span> <Checkbox contents='' value={dispatcher.is_phone} /></div>\n                  <div className=\"flex-container\"><span>Softphone:</span> <Checkbox contents='' value={dispatcher.is_softphone} /></div>\n                </td>\n                <td>\n                  <div>{dispatcher.groups}</div>\n                  <div className={classNames({\n                  'red-text': dispatcher.active === 'Inactive',\n                  'green-text': dispatcher.active === 'Active',\n                })}>{dispatcher.active}</div>\n                </td>\n              </tr>\n            ))}\n          </table>\n\n          {/* Mobile table items */}\n          <div className={classNames('mobile-table-items', '__show-on-mobile', {\n            __respectAsidePanel: props.store.navActive.is\n          })}>\n\n            {reportData.dispatchers.map((dispatcher, i: number) => (\n              <div className=\"item\" key={i} onClick={() => $router.router.navigate('call_center.dispatchers.item', {}, {reload: true})}>\n\n                <div className=\"__top\">\n\n                  <div className=\"__left\">\n                    <div><b>{dispatcher.name}</b></div>\n                    <div>\n                      {dispatcher.user}\n                    </div>\n                  </div>\n\n                  <div className=\"__right small\">\n                    <div className={classNames({\n                      'red-text': dispatcher.active === 'Inactive',\n                      'green-text': dispatcher.active === 'Active',\n                    })}>\n                      {dispatcher.active}\n                    </div>\n                    <div>\n                      {dispatcher.phone}\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"__bottom\">\n\n                  <div className=\"__left\">\n                    <div className=\"flex-container\">\n                      <span className=\"gray\">Phone:</span>\n                      <span> <Checkbox contents='' value={dispatcher.is_phone} /></span>\n                    </div>\n                    <div className=\"flex-container\">\n                      <span className=\"gray\">Softphone:</span>\n                      <span> <Checkbox contents='' value={dispatcher.is_softphone} /></span>\n                    </div>\n                  </div>\n\n                  <div className=\"__right small\">\n                    <div>\n                      <b>{dispatcher.groups}</b>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Table controls */}\n        <ReportTableControls\n          isUnder={true}\n\n          onMaxRowsChange={() => $setUpdater(Math.random())}\n\n          amount={{\n            total: reportData.interface.rows_all,\n            start: reportData.interface.rows_start,\n            end: reportData.interface.rows_end\n          }}\n\n          page={localInterface.page}\n          maxPages={reportData.interface.max_pages}\n          onPagesStart={() => setLocalInterface({...localInterface, page: 1})}\n          onPrevPage={() => setLocalInterface({...localInterface, page: localInterface.page-1})}\n          onNextPage={() => setLocalInterface({...localInterface, page: localInterface.page+1})}\n          onPagesEnd={() => setLocalInterface({...localInterface, page: reportData.interface.max_pages})}\n          \n          sort={localInterface.sort}\n          sortFields={localInterface.sortFields}\n          onSortFieldChange={(value) => setLocalInterface({...localInterface, sort: {...localInterface.sort, field: value}})}\n          onSortDirectionChange={(value) => setLocalInterface({...localInterface, sort: {...localInterface.sort, direction: value}})}\n          onSortFire={() => $setUpdater(Math.random())}\n        />\n      </div>\n    ) : null}\n  </>)\n})\nexport default CallCenter_DispatchersPage_List\n"]},"metadata":{},"sourceType":"module"}