{"ast":null,"code":"var _jsxFileName = \"/Users/nicole/rrrr/crm/src/pages/Accounts/List.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport classNames from \"classnames\";\nimport { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useRoute } from \"react-router5\";\nimport Icon from \"../../components/Icon\";\nimport ReportFilters from \"../../components/reports/Filters\";\nimport ReportTableControls from \"../../components/reports/TableControls\";\nimport ReportTableField from \"../../components/reports/TableField\";\nimport { nError } from \"../../funcs\";\nimport { mapDispatchToProps, mapStateToProps } from \"../../store\";\nimport \"../../styles/pages/common/report-list.sass\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AccountsPage_List = connect(mapStateToProps, mapDispatchToProps)(_s(function (props) {\n  _s();\n\n  const $router = useRoute();\n  const [$updater, $setUpdater] = useState(Math.random());\n  const [reportData, setReportData] = useState(null);\n  const [localInterface, setLocalInterface] = useState({\n    search: '',\n    page: 1,\n    filter_words: {\n      source: [],\n      status: []\n    },\n    sort: {\n      field: 'name',\n      direction: 'up'\n    },\n    sortFields: [{\n      span: 'Name',\n      value: 'name'\n    }, {\n      span: 'Email',\n      value: 'email'\n    }, {\n      span: 'Owner',\n      value: 'owner'\n    }, {\n      span: 'Date',\n      value: 'created_at'\n    }, {\n      span: 'Users',\n      value: 'users'\n    }, {\n      span: 'Phone Numbers',\n      value: 'phone_numbers'\n    }, {\n      span: 'Source',\n      value: 'source'\n    }, {\n      span: 'Status',\n      value: 'status'\n    }]\n  }); // Load accounts function\n\n  async function loadAccounts() {\n    try {\n      const {\n        data: accounts\n      } = await axios.get('/json/accounts.json');\n      setReportData(accounts);\n    } catch (error) {\n      nError(error);\n    }\n  } // Load accounts on page mount\n\n\n  useEffect(() => {\n    loadAccounts();\n  }, [$updater, localInterface.page]); // Is filter selected function\n\n  function isFilterSelected(field, value) {\n    return localInterface.filter_words[field].includes(value);\n  } // Is all filters selected function\n\n\n  function isAllFiltersSelected(field) {\n    return localInterface.filter_words[field].length === 0;\n  } // Filter switch function\n\n\n  function switchFilter(field, value, toggle) {\n    let _arr = [...localInterface.filter_words[field]];\n\n    if (toggle && value === \"All\") {\n      _arr = [];\n    } else if (!toggle) {\n      while (true) {\n        let i = _arr.findIndex(filter => filter === value);\n\n        if (i === -1) break;\n\n        _arr.splice(i, 1);\n      }\n    } else {\n      if (reportData !== null && reportData !== void 0 && reportData.interface.filter_words[field].every(option => _arr.concat([value]).includes(option))) _arr = [];else if (_arr.findIndex(filter => filter === value) === -1) _arr.push(value);\n    }\n\n    setLocalInterface({ ...localInterface,\n      filter_words: { ...localInterface.filter_words,\n        [field]: _arr\n      }\n    });\n  } // Render function\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: reportData ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"AccountsPage_List\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Accounts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReportFilters, {\n        onSearchInputChange: value => setLocalInterface({ ...localInterface,\n          search: value\n        }),\n        onUpdate: () => 2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReportTableControls, {\n        zIndex: 5,\n        onMaxRowsChange: () => $setUpdater(Math.random()),\n        amount: {\n          total: reportData.interface.rows_all,\n          start: reportData.interface.rows_start,\n          end: reportData.interface.rows_end\n        },\n        page: localInterface.page,\n        maxPages: reportData.interface.max_pages,\n        onPagesStart: () => setLocalInterface({ ...localInterface,\n          page: 1\n        }),\n        onPrevPage: () => setLocalInterface({ ...localInterface,\n          page: localInterface.page - 1\n        }),\n        onNextPage: () => setLocalInterface({ ...localInterface,\n          page: localInterface.page + 1\n        }),\n        onPagesEnd: () => setLocalInterface({ ...localInterface,\n          page: reportData.interface.max_pages\n        }),\n        sort: localInterface.sort,\n        sortFields: localInterface.sortFields,\n        onSortFieldChange: value => setLocalInterface({ ...localInterface,\n          sort: { ...localInterface.sort,\n            field: value\n          }\n        }),\n        onSortDirectionChange: value => setLocalInterface({ ...localInterface,\n          sort: { ...localInterface.sort,\n            direction: value\n          }\n        }),\n        onSortFire: () => 0,\n        addButton: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-button-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"_iconed _rounded add-button\",\n            onClick: () => $router.router.navigate('accounts.new'),\n            children: [/*#__PURE__*/_jsxDEV(Icon, {\n              icon: \"plus-thin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Add Account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Icon, {\n              icon: \"user-1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contents\",\n        children: [/*#__PURE__*/_jsxDEV(\"table\", {\n          className: classNames('table', '__show-on-wide', {\n            __respectAsidePanel: props.store.navActive.is\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(ReportTableField, {\n              contents: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 28\n              }, this),\n              sortDirection: localInterface.sort.field === 'name' ? localInterface.sort.direction : undefined,\n              onSortDirectionChange: value => setLocalInterface({ ...localInterface,\n                sort: {\n                  field: 'name',\n                  direction: value\n                }\n              }),\n              onFilterFire: () => $setUpdater(Math.random())\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ReportTableField, {\n              contents: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 28\n              }, this),\n              sortDirection: localInterface.sort.field === 'email' ? localInterface.sort.direction : undefined,\n              onSortDirectionChange: value => setLocalInterface({ ...localInterface,\n                sort: {\n                  field: 'email',\n                  direction: value\n                }\n              }),\n              onFilterFire: () => $setUpdater(Math.random())\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ReportTableField, {\n              contents: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Owner\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 28\n              }, this),\n              sortDirection: localInterface.sort.field === 'owner' ? localInterface.sort.direction : undefined,\n              onSortDirectionChange: value => setLocalInterface({ ...localInterface,\n                sort: {\n                  field: 'owner',\n                  direction: value\n                }\n              }),\n              onFilterFire: () => $setUpdater(Math.random())\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ReportTableField, {\n              contents: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 28\n              }, this),\n              sortDirection: localInterface.sort.field === 'created_at' ? localInterface.sort.direction : undefined,\n              onSortDirectionChange: value => setLocalInterface({ ...localInterface,\n                sort: {\n                  field: 'created_at',\n                  direction: value\n                }\n              }),\n              onFilterFire: () => $setUpdater(Math.random())\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ReportTableField, {\n              contents: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Users\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 28\n              }, this),\n              sortDirection: localInterface.sort.field === 'users' ? localInterface.sort.direction : undefined,\n              onSortDirectionChange: value => setLocalInterface({ ...localInterface,\n                sort: {\n                  field: 'users',\n                  direction: value\n                }\n              }),\n              onFilterFire: () => $setUpdater(Math.random())\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ReportTableField, {\n              contents: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Phone Numbers\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 28\n              }, this),\n              sortDirection: localInterface.sort.field === 'phone_numbers' ? localInterface.sort.direction : undefined,\n              onSortDirectionChange: value => setLocalInterface({ ...localInterface,\n                sort: {\n                  field: 'phone_numbers',\n                  direction: value\n                }\n              }),\n              onFilterFire: () => $setUpdater(Math.random())\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ReportTableField, {\n              contents: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Source\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 28\n              }, this),\n              allFiltersSelected: isAllFiltersSelected(\"source\"),\n              onAllFiltersChange: value => switchFilter(\"source\", \"All\", value),\n              filterWords: reportData.interface.filter_words.source.map(filterWord => ({\n                word: filterWord,\n                selected: isFilterSelected(\"source\", filterWord)\n              })),\n              onFilterChange: value => switchFilter(\"source\", value.word, value.selected),\n              sortDirection: localInterface.sort.field === 'source' ? localInterface.sort.direction : undefined,\n              onSortDirectionChange: value => setLocalInterface({ ...localInterface,\n                sort: {\n                  field: 'source',\n                  direction: value\n                }\n              }),\n              onFilterFire: () => $setUpdater(Math.random())\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ReportTableField, {\n              contents: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 28\n              }, this),\n              allFiltersSelected: isAllFiltersSelected(\"status\"),\n              onAllFiltersChange: value => switchFilter(\"status\", \"All\", value),\n              filterWords: reportData.interface.filter_words.status.map(filterWord => ({\n                word: filterWord,\n                selected: isFilterSelected(\"status\", filterWord)\n              })),\n              onFilterChange: value => switchFilter(\"status\", value.word, value.selected),\n              sortDirection: localInterface.sort.field === 'status' ? localInterface.sort.direction : undefined,\n              onSortDirectionChange: value => setLocalInterface({ ...localInterface,\n                sort: {\n                  field: 'status',\n                  direction: value\n                }\n              }),\n              onFilterFire: () => $setUpdater(Math.random())\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this), reportData.accounts.map((account, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            onClick: () => $router.router.navigate('accounts.item', {\n              accountId: account.account_id\n            }, {\n              reload: true\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: account.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: account.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: account.owner\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: account.created_at\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: account.users\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: account.phone_numbers\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: account.source\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: classNames({\n                'red-text': account.status === 'Inactive',\n                'green-text': account.status === 'Active',\n                'blue-text': !['Inactive', 'Active'].includes(account.status)\n              }),\n              children: account.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 17\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: classNames('table', '__hide-on-wide', '__hide-on-mobile', {\n            __respectAsidePanel: props.store.navActive.is\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 13\n          }, this), reportData.accounts.map((account, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            onClick: () => $router.router.navigate('accounts.item', {\n              accountId: account.account_id\n            }, {\n              reload: true\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: account.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: account.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: account.owner\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: account.created_at\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Users: \", account.users]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Phone Numbers: \", account.phone_numbers]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: account.source\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classNames({\n                  'red-text': account.status === 'Inactive',\n                  'green-text': account.status === 'Active',\n                  'blue-text': !['Inactive', 'Active'].includes(account.status)\n                }),\n                children: account.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 17\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classNames('mobile-table-items', '__show-on-mobile', {\n            __respectAsidePanel: props.store.navActive.is\n          }),\n          children: reportData.accounts.map((account, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item\",\n            onClick: () => $router.router.navigate('accounts.item', {\n              accountId: account.account_id\n            }, {\n              reload: true\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"__top\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"__left\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: account.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 379,\n                    columnNumber: 26\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 379,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: account.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 380,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"__right\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classNames({\n                    'red-text': account.status === 'Inactive',\n                    'green-text': account.status === 'Active',\n                    'blue-text': !['Inactive', 'Active'].includes(account.status)\n                  }),\n                  children: account.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 386,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: account.owner\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 393,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 385,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"__bottom\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"__left\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"gray\",\n                    children: \"Users:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 403,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\" \", account.users]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 404,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 402,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"gray\",\n                    children: \"Phone Numbers:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 407,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\" \", account.phone_numbers]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 408,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 406,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"__right small\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: account.source\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 414,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 413,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: account.created_at\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 417,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 416,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 412,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 17\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReportTableControls, {\n        isUnder: true,\n        onMaxRowsChange: () => $setUpdater(Math.random()),\n        amount: {\n          total: reportData.interface.rows_all,\n          start: reportData.interface.rows_start,\n          end: reportData.interface.rows_end\n        },\n        page: localInterface.page,\n        maxPages: reportData.interface.max_pages,\n        onPagesStart: () => setLocalInterface({ ...localInterface,\n          page: 1\n        }),\n        onPrevPage: () => setLocalInterface({ ...localInterface,\n          page: localInterface.page - 1\n        }),\n        onNextPage: () => setLocalInterface({ ...localInterface,\n          page: localInterface.page + 1\n        }),\n        onPagesEnd: () => setLocalInterface({ ...localInterface,\n          page: reportData.interface.max_pages\n        }),\n        sort: localInterface.sort,\n        sortFields: localInterface.sortFields,\n        onSortFieldChange: value => setLocalInterface({ ...localInterface,\n          sort: { ...localInterface.sort,\n            field: value\n          }\n        }),\n        onSortDirectionChange: value => setLocalInterface({ ...localInterface,\n          sort: { ...localInterface.sort,\n            direction: value\n          }\n        }),\n        onSortFire: () => 0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this) : null\n  }, void 0, false);\n}, \"22IcXhHRrrjVVtoTl019rAeu3RM=\", false, function () {\n  return [useRoute];\n}));\nexport default AccountsPage_List;","map":{"version":3,"sources":["/Users/nicole/rrrr/crm/src/pages/Accounts/List.tsx"],"names":["axios","classNames","useEffect","useState","connect","useRoute","Icon","ReportFilters","ReportTableControls","ReportTableField","nError","mapDispatchToProps","mapStateToProps","AccountsPage_List","props","$router","$updater","$setUpdater","Math","random","reportData","setReportData","localInterface","setLocalInterface","search","page","filter_words","source","status","sort","field","direction","sortFields","span","value","loadAccounts","data","accounts","get","error","isFilterSelected","includes","isAllFiltersSelected","length","switchFilter","toggle","_arr","i","findIndex","filter","splice","interface","every","option","concat","push","total","rows_all","start","rows_start","end","rows_end","max_pages","router","navigate","__respectAsidePanel","store","navActive","is","undefined","map","filterWord","word","selected","account","accountId","account_id","reload","name","email","owner","created_at","users","phone_numbers"],"mappings":"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","sourcesContent":["import axios from \"axios\"\nimport classNames from \"classnames\"\nimport { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useRoute } from \"react-router5\"\nimport Icon from \"../../components/Icon\"\nimport ReportFilters from \"../../components/reports/Filters\"\nimport ReportTableControls from \"../../components/reports/TableControls\"\nimport ReportTableField from \"../../components/reports/TableField\"\nimport { nError } from \"../../funcs\"\nimport Account from \"../../models/Account\"\nimport AccountCustom from \"../../models/AccountCustom\"\nimport { StoreDispatch, StoreState, mapDispatchToProps, mapStateToProps } from \"../../store\";\n\nimport \"../../styles/pages/common/report-list.sass\"\n\ninterface Props {\n  store: StoreState,\n  dispatcher: StoreDispatch\n}\n\ntype FilterWord = 'source' | 'status'\n\ninterface AccountsReport {\n\n  interface: {\n\n    filter_words: {\n\n      source: string[],\n      status: string[],\n    },\n\n    max_pages: number,\n    rows_start: number,\n    rows_end: number,\n    rows_all: number,\n  },\n\n  permissions: {\n    show_account: boolean,\n    add_account: boolean\n  },\n\n  accounts: AccountCustom[],\n\n  edit: {\n    status: string[],\n    owners: {\n      user_id: string,\n      user: string\n    }[],\n    source: string[],\n    time_zone: string[],\n    permissions: string[],\n    state: string[]\n  }\n}\n\nconst AccountsPage_List = connect(mapStateToProps, mapDispatchToProps)(function(props: Props) {\n\n  const $router = useRoute()\n\n  const [$updater, $setUpdater] = useState<any>(Math.random())\n\n  const [reportData, setReportData] = useState<AccountsReport | null>(null)\n  const [localInterface, setLocalInterface] = useState({\n\n    search: '',\n\n    page: 1,\n\n    filter_words: {\n\n      source: [] as string[],\n      status: [] as string[]\n    },\n\n    sort: {\n      field: 'name',\n      direction: 'up' as 'up' | 'down'\n    },\n    sortFields: [{\n      span: 'Name',\n      value: 'name'\n    },{\n      span: 'Email',\n      value: 'email'\n    },{\n      span: 'Owner',\n      value: 'owner'\n    },{\n      span: 'Date',\n      value: 'created_at'\n    },{\n      span: 'Users',\n      value: 'users'\n    },{\n      span: 'Phone Numbers',\n      value: 'phone_numbers'\n    },{\n      span: 'Source',\n      value: 'source'\n    },{\n      span: 'Status',\n      value: 'status'\n    }]\n\n  })\n\n  // Load accounts function\n  async function loadAccounts() {\n\n    try {\n      const { data: accounts } = (await axios.get('/json/accounts.json')) as {data: AccountsReport}\n\n      setReportData(accounts)\n    }\n    catch (error) {\n      nError(error)\n    }\n  }\n\n  // Load accounts on page mount\n  useEffect(() => { loadAccounts() }, [\n    $updater,\n    localInterface.page\n  ])\n\n  // Is filter selected function\n  function isFilterSelected(field: FilterWord, value: string) {\n    return localInterface.filter_words[field].includes(value)\n  }\n\n  // Is all filters selected function\n  function isAllFiltersSelected(field: FilterWord) {\n    return localInterface.filter_words[field].length === 0\n  }\n\n  // Filter switch function\n  function switchFilter(field: FilterWord, value: string, toggle: boolean) {\n\n    let _arr = [...localInterface.filter_words[field]]\n\n    if (toggle && value === \"All\") { _arr = [] }\n    \n    else if (!toggle) {\n\n      while (true) {\n        let i = _arr.findIndex((filter) => filter === value)\n        if(i === -1) break\n        _arr.splice(i, 1)\n      }\n    }\n      \n    else {\n\n      if (reportData?.interface.filter_words[field].every((option) => _arr.concat([value]).includes(option)))\n        _arr = []\n\n      else if(_arr.findIndex((filter) => filter === value) === -1)\n        _arr.push(value)\n    }\n\n    setLocalInterface({...localInterface, filter_words: {...localInterface.filter_words, [field]: _arr}})\n  }\n\n  // Render function\n  return (<>\n    {reportData ? (\n      <div className=\"AccountsPage_List\" >\n\n        { /* Page header */}\n        <div className=\"page-header\">\n          <h1>Accounts</h1>\n        </div>\n\n        { /* List filters */}\n        <ReportFilters\n          onSearchInputChange={(value) => setLocalInterface({...localInterface, search: value})}\n\n          onUpdate={() => 2}\n        />\n\n        {/* Table controls */}\n        <ReportTableControls\n          zIndex={5}\n\n          onMaxRowsChange={() => $setUpdater(Math.random())}\n\n          amount={{\n            total: reportData.interface.rows_all,\n            start: reportData.interface.rows_start,\n            end: reportData.interface.rows_end\n          }}\n\n          page={localInterface.page}\n          maxPages={reportData.interface.max_pages}\n          onPagesStart={() => setLocalInterface({...localInterface, page: 1})}\n          onPrevPage={() => setLocalInterface({...localInterface, page: localInterface.page-1})}\n          onNextPage={() => setLocalInterface({...localInterface, page: localInterface.page+1})}\n          onPagesEnd={() => setLocalInterface({...localInterface, page: reportData.interface.max_pages})}\n          \n          sort={localInterface.sort}\n          sortFields={localInterface.sortFields}\n          onSortFieldChange={(value) => setLocalInterface({...localInterface, sort: {...localInterface.sort, field: value}})}\n          onSortDirectionChange={(value) => setLocalInterface({ ...localInterface, sort: { ...localInterface.sort, direction: value } })}\n          onSortFire={() => 0}\n          \n          addButton={(\n            <div className=\"add-button-wrapper\">\n              <button className=\"_iconed _rounded add-button\" onClick={() => $router.router.navigate('accounts.new')}>\n                <Icon icon=\"plus-thin\" />\n                <span>Add Account</span>\n                <Icon icon=\"user-1\" />\n              </button>\n            </div>\n          )}\n        />\n\n        <div className=\"contents\">\n\n          {/* Wide desktop table */}\n          <table className={classNames('table', '__show-on-wide', {\n            __respectAsidePanel: props.store.navActive.is\n          })}>\n            <tr>\n              <ReportTableField\n                contents={(<span>Name</span>)}\n\n                sortDirection={localInterface.sort.field === 'name' ? localInterface.sort.direction : undefined}\n                onSortDirectionChange={(value) => setLocalInterface({...localInterface, sort: {field: 'name', direction: value}})}\n\n                onFilterFire={() => $setUpdater(Math.random())}\n              />\n              <ReportTableField\n                contents={(<span>Email</span>)}\n\n                sortDirection={localInterface.sort.field === 'email' ? localInterface.sort.direction : undefined}\n                onSortDirectionChange={(value) => setLocalInterface({...localInterface, sort: {field: 'email', direction: value}})}\n\n                onFilterFire={() => $setUpdater(Math.random())}\n              />\n              <ReportTableField\n                contents={(<span>Owner</span>)}\n\n                sortDirection={localInterface.sort.field === 'owner' ? localInterface.sort.direction : undefined}\n                onSortDirectionChange={(value) => setLocalInterface({...localInterface, sort: {field: 'owner', direction: value}})}\n\n                onFilterFire={() => $setUpdater(Math.random())}\n              />\n              <ReportTableField\n                contents={(<span>Date</span>)}\n\n                sortDirection={localInterface.sort.field === 'created_at' ? localInterface.sort.direction : undefined}\n                onSortDirectionChange={(value) => setLocalInterface({...localInterface, sort: {field: 'created_at', direction: value}})}\n\n                onFilterFire={() => $setUpdater(Math.random())}\n              />\n              <ReportTableField\n                contents={(<span>Users</span>)}\n\n                sortDirection={localInterface.sort.field === 'users' ? localInterface.sort.direction : undefined}\n                onSortDirectionChange={(value) => setLocalInterface({...localInterface, sort: {field: 'users', direction: value}})}\n\n                onFilterFire={() => $setUpdater(Math.random())}\n              />\n              <ReportTableField\n                contents={(<span>Phone Numbers</span>)}\n\n                sortDirection={localInterface.sort.field === 'phone_numbers' ? localInterface.sort.direction : undefined}\n                onSortDirectionChange={(value) => setLocalInterface({...localInterface, sort: {field: 'phone_numbers', direction: value}})}\n\n                onFilterFire={() => $setUpdater(Math.random())}\n              />\n              <ReportTableField\n                contents={(<span>Source</span>)}\n\n                allFiltersSelected={isAllFiltersSelected(\"source\")}\n                onAllFiltersChange={(value) => switchFilter(\"source\", \"All\", value)}\n\n                filterWords={reportData.interface.filter_words.source.map((filterWord) => ({\n                  word: filterWord,\n                  selected: isFilterSelected(\"source\", filterWord)\n                }))}\n                onFilterChange={(value) => switchFilter(\"source\", value.word, value.selected)}\n\n                sortDirection={localInterface.sort.field === 'source' ? localInterface.sort.direction : undefined}\n                onSortDirectionChange={(value) => setLocalInterface({...localInterface, sort: {field: 'source', direction: value}})}\n\n                onFilterFire={() => $setUpdater(Math.random())}\n              />\n              <ReportTableField\n                contents={(<span>Status</span>)}\n\n                allFiltersSelected={isAllFiltersSelected(\"status\")}\n                onAllFiltersChange={(value) => switchFilter(\"status\", \"All\", value)}\n\n                filterWords={reportData.interface.filter_words.status.map((filterWord) => ({\n                  word: filterWord,\n                  selected: isFilterSelected(\"status\", filterWord)\n                }))}\n                onFilterChange={(value) => switchFilter(\"status\", value.word, value.selected)}\n\n                sortDirection={localInterface.sort.field === 'status' ? localInterface.sort.direction : undefined}\n                onSortDirectionChange={(value) => setLocalInterface({...localInterface, sort: {field: 'status', direction: value}})}\n\n                onFilterFire={() => $setUpdater(Math.random())}\n              />\n            </tr>\n            {reportData.accounts.map((account, i) => (\n              <tr key={i} onClick={() => $router.router.navigate('accounts.item', {\n                accountId: account.account_id\n              }, {reload: true})}>\n                <td>{account.name}</td>\n                <td>{account.email}</td>\n                <td>{account.owner}</td>\n                <td>{account.created_at}</td>\n                <td>{account.users}</td>\n                <td>{account.phone_numbers}</td>\n                <td>{account.source}</td>\n                <td className={classNames({\n                  'red-text': account.status === 'Inactive',\n                  'green-text': account.status === 'Active',\n                  'blue-text': !['Inactive', 'Active'].includes(account.status),\n                })}>{account.status}</td>\n              </tr>\n            ))}\n          </table>\n\n          {/* Medium screen table */}\n          <table className={classNames('table', '__hide-on-wide', '__hide-on-mobile', {\n            __respectAsidePanel: props.store.navActive.is\n          })}>\n            <tr></tr>\n            {reportData.accounts.map((account, i) => (\n              <tr key={i} onClick={() => $router.router.navigate('accounts.item', {\n                accountId: account.account_id\n              }, {reload: true})}>\n                <td>\n                  <div>{account.name}</div>\n                  <div>{account.email}</div>\n                </td>\n                <td>\n                  <div>{account.owner}</div>\n                  <div>{account.created_at}</div>\n                </td>\n                <td>\n                  <div>Users: {account.users}</div>\n                  <div>Phone Numbers: {account.phone_numbers}</div>\n                </td>\n                <td>\n                  <div>{account.source}</div>\n                  <div className={classNames({\n                    'red-text': account.status === 'Inactive',\n                    'green-text': account.status === 'Active',\n                    'blue-text': !['Inactive', 'Active'].includes(account.status),\n                  })}>\n                    {account.status}\n                  </div>\n                </td>\n              </tr>\n            ))}\n          </table>\n\n          {/* Mobile table items */}\n          <div className={classNames('mobile-table-items', '__show-on-mobile', {\n            __respectAsidePanel: props.store.navActive.is\n          })}>\n\n            {reportData.accounts.map((account, i: number) => (\n              <div className=\"item\" key={i} onClick={() => $router.router.navigate('accounts.item', {\n                accountId: account.account_id\n              }, {reload: true})}>\n\n                <div className=\"__top\">\n\n                  <div className=\"__left\">\n                    <div><b>{account.name}</b></div>\n                    <div>\n                      {account.email}\n                    </div>\n                  </div>\n\n                  <div className=\"__right\">\n                    <div className={classNames({\n                      'red-text': account.status === 'Inactive',\n                      'green-text': account.status === 'Active',\n                      'blue-text': !['Inactive', 'Active'].includes(account.status),\n                    })}>\n                      {account.status}\n                    </div>\n                    <div>\n                      {account.owner}\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"__bottom\">\n\n                  <div className=\"__left\">\n                    <div>\n                      <span className=\"gray\">Users:</span>\n                      <span> {account.users}</span>\n                    </div>\n                    <div>\n                      <span className=\"gray\">Phone Numbers:</span>\n                      <span> {account.phone_numbers}</span>\n                    </div>\n                  </div>\n\n                  <div className=\"__right small\">\n                    <div>\n                      <b>{account.source}</b>\n                    </div>\n                    <div>\n                      <b>{account.created_at}</b>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Table controls */}\n        <ReportTableControls\n          isUnder={true}\n\n          onMaxRowsChange={() => $setUpdater(Math.random())}\n\n          amount={{\n            total: reportData.interface.rows_all,\n            start: reportData.interface.rows_start,\n            end: reportData.interface.rows_end\n          }}\n\n          page={localInterface.page}\n          maxPages={reportData.interface.max_pages}\n          onPagesStart={() => setLocalInterface({...localInterface, page: 1})}\n          onPrevPage={() => setLocalInterface({...localInterface, page: localInterface.page-1})}\n          onNextPage={() => setLocalInterface({...localInterface, page: localInterface.page+1})}\n          onPagesEnd={() => setLocalInterface({...localInterface, page: reportData.interface.max_pages})}\n          \n          sort={localInterface.sort}\n          sortFields={localInterface.sortFields}\n          onSortFieldChange={(value) => setLocalInterface({...localInterface, sort: {...localInterface.sort, field: value}})}\n          onSortDirectionChange={(value) => setLocalInterface({...localInterface, sort: {...localInterface.sort, direction: value}})}\n          onSortFire={() => 0}\n        />\n      </div>\n    ) : null}\n  </>)\n})\nexport default AccountsPage_List\n"]},"metadata":{},"sourceType":"module"}