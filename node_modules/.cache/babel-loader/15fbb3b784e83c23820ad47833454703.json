{"ast":null,"code":"var _jsxFileName = \"/Users/nicole/rrrr/crm/src/pages/AccountPermissions/New.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport Icon from \"../../components/Icon\";\nimport { nError } from \"../../funcs\";\nimport { mapDispatchToProps, mapStateToProps } from \"../../store\";\nimport \"../../styles/pages/common/entity-edit.sass\";\nimport Select from \"../../components/Select\";\nimport Checkbox from \"../../components/Checkbox\";\nimport { useRoute } from \"react-router5\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AccountPermissionsPage_New = connect(mapStateToProps, mapDispatchToProps)(_s(function (props) {\n  _s();\n\n  const [readyToSave, setReadyToSave] = useState(false);\n  const $router = useRoute();\n  const [actions, setActions] = useState(null);\n  const [availableActions, setAvailableActions] = useState([]);\n  const [selectedAction, setSelectedAction] = useState('');\n  const [newAccountPermissionData, setNewAccountPermissionData] = useState({\n    name: '',\n    actions: []\n  }); // Load info function\n\n  async function loadInfo() {\n    try {\n      const {\n        data: accountPermissionsData\n      } = await axios.get('/json/account_permissions.json');\n      setActions(accountPermissionsData.edit.actions);\n      setAvailableActions([''].concat(accountPermissionsData.edit.actions));\n      setSelectedAction(availableActions[0]);\n      setTimeout(() => setReadyToSave(false), 100);\n    } catch (error) {\n      nError(error);\n    }\n  } // Load accountPermission data\n\n\n  useEffect(() => {\n    loadInfo();\n  }, []); // Add action function\n\n  function addAction() {\n    if (!newAccountPermissionData.actions || !newAccountPermissionData) return;\n    setNewAccountPermissionData({ ...newAccountPermissionData,\n      actions: [...newAccountPermissionData.actions, selectedAction]\n    });\n    let _availableActions = [...availableActions];\n    _availableActions = _availableActions.filter(action => !newAccountPermissionData.actions.includes(action));\n\n    _availableActions.splice(_availableActions.findIndex(_action => selectedAction === _action), 1);\n\n    setAvailableActions([..._availableActions]);\n    setSelectedAction(_availableActions[0]);\n    setReadyToSave(true);\n  } // Remove action function\n\n\n  function removeAction(i) {\n    let _accountPermissionActions = [...newAccountPermissionData.actions];\n    let _action = _accountPermissionActions[i];\n\n    _accountPermissionActions.splice(i, 1);\n\n    setNewAccountPermissionData({ ...newAccountPermissionData,\n      actions: _accountPermissionActions\n    });\n    setAvailableActions([...availableActions, _action]);\n    setReadyToSave(true);\n  }\n\n  useEffect(() => setReadyToSave(true), [newAccountPermissionData]); // Render function\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: availableActions ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"AccountPermissionsPage_New entity-edit\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrapper flex-container sb\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"New Account`s Permission\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fieldset\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend\",\n          children: \"Main\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fields\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"__left\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                onChange: _ref => {\n                  let {\n                    target: {\n                      value\n                    }\n                  } = _ref;\n                  return setNewAccountPermissionData({ ...newAccountPermissionData,\n                    name: value\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fieldset\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-container sb wrap\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend\",\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-action-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Action:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(Select, {\n                options: availableActions.map(action => ({\n                  span: action,\n                  value: action\n                })),\n                selectedOption: selectedAction,\n                onChange: value => setSelectedAction(value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                disabled: !selectedAction,\n                className: \"_green\",\n                onClick: () => addAction(),\n                children: \"Add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table som\",\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                width: '100%'\n              },\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Allow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), newAccountPermissionData.actions.map((action, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: action\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                contents: '',\n                value: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"_zeroed _iconed _red\",\n                onClick: () => removeAction(i),\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  icon: \"x-mark-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 17\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrapper flex-container sb editing-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"_bordered _red\",\n            onClick: () => $router.router.navigate('accounts_permissions', {}, {\n              reload: true\n            }),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: !readyToSave,\n            className: \"_bordered _green\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this) : null\n  }, void 0, false);\n}, \"5cf4oz/vF7pnWGpBiFRb8QIHEn4=\", false, function () {\n  return [useRoute];\n}));\nexport default AccountPermissionsPage_New;","map":{"version":3,"sources":["/Users/nicole/rrrr/crm/src/pages/AccountPermissions/New.tsx"],"names":["axios","React","useEffect","useState","connect","Icon","nError","mapDispatchToProps","mapStateToProps","Select","Checkbox","useRoute","AccountPermissionsPage_New","props","readyToSave","setReadyToSave","$router","actions","setActions","availableActions","setAvailableActions","selectedAction","setSelectedAction","newAccountPermissionData","setNewAccountPermissionData","name","loadInfo","data","accountPermissionsData","get","edit","concat","setTimeout","error","addAction","_availableActions","filter","action","includes","splice","findIndex","_action","removeAction","i","_accountPermissionActions","target","value","map","span","width","router","navigate","reload"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,SAASC,MAAT,QAAuB,aAAvB;AAEA,SAAoCC,kBAApC,EAAwDC,eAAxD,QAA+E,aAA/E;AAGA,OAAO,4CAAP;AAEA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,SAASC,QAAT,QAAyB,eAAzB;;;AAOA,MAAMC,0BAA0B,GAAGR,OAAO,CAACI,eAAD,EAAkBD,kBAAlB,CAAP,IAA6C,UAASM,KAAT,EAAuB;AAAA;;AAErG,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,KAAD,CAA9C;AAEA,QAAMa,OAAO,GAAGL,QAAQ,EAAxB;AAEA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAkB,IAAlB,CAAtC;AACA,QAAM,CAACgB,gBAAD,EAAmBC,mBAAnB,IAA0CjB,QAAQ,CAAW,EAAX,CAAxD;AACA,QAAM,CAACkB,cAAD,EAAiBC,iBAAjB,IAAsCnB,QAAQ,CAAS,EAAT,CAApD;AACA,QAAM,CAACoB,wBAAD,EAA2BC,2BAA3B,IAA0DrB,QAAQ,CAAC;AACvEsB,IAAAA,IAAI,EAAE,EADiE;AAEvER,IAAAA,OAAO,EAAE;AAF8D,GAAD,CAAxE,CATqG,CAcrG;;AACA,iBAAeS,QAAf,GAA0B;AACxB,QAAI;AACF,YAAM;AAAEC,QAAAA,IAAI,EAAEC;AAAR,UAAoC,MAAM5B,KAAK,CAAC6B,GAAN,CAAU,gCAAV,CAAhD;AAEAX,MAAAA,UAAU,CAACU,sBAAsB,CAACE,IAAvB,CAA4Bb,OAA7B,CAAV;AACAG,MAAAA,mBAAmB,CAAC,CAAC,EAAD,EAAKW,MAAL,CAAYH,sBAAsB,CAACE,IAAvB,CAA4Bb,OAAxC,CAAD,CAAnB;AACAK,MAAAA,iBAAiB,CAACH,gBAAgB,CAAC,CAAD,CAAjB,CAAjB;AAEAa,MAAAA,UAAU,CAAC,MAAMjB,cAAc,CAAC,KAAD,CAArB,EAA8B,GAA9B,CAAV;AACD,KARD,CASA,OAAOkB,KAAP,EAAc;AACZ3B,MAAAA,MAAM,CAAC2B,KAAD,CAAN;AACD;AACF,GA5BoG,CA8BrG;;;AACA/B,EAAAA,SAAS,CAAC,MAAM;AACdwB,IAAAA,QAAQ;AACT,GAFQ,EAEN,EAFM,CAAT,CA/BqG,CAmCrG;;AACA,WAASQ,SAAT,GAAqB;AAEnB,QAAG,CAACX,wBAAwB,CAACN,OAA1B,IAAqC,CAACM,wBAAzC,EAAmE;AAEnEC,IAAAA,2BAA2B,CAAC,EAC1B,GAAGD,wBADuB;AAE1BN,MAAAA,OAAO,EAAE,CACP,GAAGM,wBAAwB,CAACN,OADrB,EAEPI,cAFO;AAFiB,KAAD,CAA3B;AAQA,QAAIc,iBAAiB,GAAG,CAAC,GAAGhB,gBAAJ,CAAxB;AAEAgB,IAAAA,iBAAiB,GAAGA,iBAAiB,CAACC,MAAlB,CAA0BC,MAAD,IAAY,CAAEd,wBAAwB,CAACN,OAA1B,CAA+CqB,QAA/C,CAAwDD,MAAxD,CAAtC,CAApB;;AACAF,IAAAA,iBAAiB,CAACI,MAAlB,CAAyBJ,iBAAiB,CAACK,SAAlB,CAA6BC,OAAD,IAAapB,cAAc,KAAKoB,OAA5D,CAAzB,EAA+F,CAA/F;;AAEArB,IAAAA,mBAAmB,CAAC,CAClB,GAAGe,iBADe,CAAD,CAAnB;AAIAb,IAAAA,iBAAiB,CAACa,iBAAiB,CAAC,CAAD,CAAlB,CAAjB;AAEApB,IAAAA,cAAc,CAAC,IAAD,CAAd;AACD,GA5DoG,CA8DrG;;;AACA,WAAS2B,YAAT,CAAsBC,CAAtB,EAAiC;AAE/B,QAAIC,yBAAyB,GAAG,CAAC,GAAIrB,wBAAwB,CAACN,OAA9B,CAAhC;AAEA,QAAIwB,OAAO,GAAGG,yBAAyB,CAACD,CAAD,CAAvC;;AAEAC,IAAAA,yBAAyB,CAACL,MAA1B,CAAiCI,CAAjC,EAAoC,CAApC;;AAEAnB,IAAAA,2BAA2B,CAAC,EAC1B,GAAGD,wBADuB;AAE1BN,MAAAA,OAAO,EAAE2B;AAFiB,KAAD,CAA3B;AAKAxB,IAAAA,mBAAmB,CAAC,CAClB,GAAGD,gBADe,EAElBsB,OAFkB,CAAD,CAAnB;AAKA1B,IAAAA,cAAc,CAAC,IAAD,CAAd;AACD;;AAEDb,EAAAA,SAAS,CAAC,MAAMa,cAAc,CAAC,IAAD,CAArB,EAA6B,CACpCQ,wBADoC,CAA7B,CAAT,CApFqG,CAwFrG;;AACA,sBAAQ;AAAA,cACLJ,gBAAgB,gBACf;AAAK,MAAA,SAAS,EAAC,wCAAf;AAAA,8BAEE;AAAK,QAAA,SAAS,EAAC,2BAAf;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF,eAME;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,gCAEE;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAIE;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA,iCAEE;AAAK,YAAA,SAAS,EAAC,QAAf;AAAA,mCACE;AAAK,cAAA,SAAS,EAAC,OAAf;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAO,gBAAA,IAAI,EAAC,MAAZ;AAAmB,gBAAA,QAAQ,EAAE;AAAA,sBAAC;AAAC0B,oBAAAA,MAAM,EAAE;AAACC,sBAAAA;AAAD;AAAT,mBAAD;AAAA,yBAAuBtB,2BAA2B,CAAC,EAAC,GAAGD,wBAAJ;AAA8BE,oBAAAA,IAAI,EAAEqB;AAApC,mBAAD,CAAlD;AAAA;AAA7B;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eAqBE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,gCAEE;AAAK,UAAA,SAAS,EAAC,wBAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAGE;AAAK,YAAA,SAAS,EAAC,uBAAf;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAK,cAAA,SAAS,EAAC,eAAf;AAAA,sCACE,QAAC,MAAD;AAAQ,gBAAA,OAAO,EAAE3B,gBAAgB,CAAC4B,GAAjB,CAAsBV,MAAD,KAAa;AACjDW,kBAAAA,IAAI,EAAEX,MAD2C;AAEjDS,kBAAAA,KAAK,EAAET;AAF0C,iBAAb,CAArB,CAAjB;AAGK,gBAAA,cAAc,EAAEhB,cAHrB;AAGqC,gBAAA,QAAQ,EAAGyB,KAAD,IAAWxB,iBAAiB,CAACwB,KAAD;AAH3E;AAAA;AAAA;AAAA;AAAA,sBADF,eAKE;AAAQ,gBAAA,QAAQ,EAAE,CAACzB,cAAnB;AAAmC,gBAAA,SAAS,EAAC,QAA7C;AAAsD,gBAAA,OAAO,EAAE,MAAMa,SAAS,EAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAmBE;AAAO,UAAA,SAAS,EAAC,WAAjB;AAAA,kCACE;AAAA,oCACE;AAAI,cAAA,KAAK,EAAE;AAACe,gBAAAA,KAAK,EAAE;AAAR,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAMI1B,wBAAwB,CAACN,OAA1B,CAA+C8B,GAA/C,CAAmD,CAACV,MAAD,EAASM,CAAT,kBAClD;AAAA,oCACE;AAAA,wBAAKN;AAAL;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA,qCACE,QAAC,QAAD;AAAU,gBAAA,QAAQ,EAAE,EAApB;AAAwB,gBAAA,KAAK,EAAE;AAA/B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAFF,eAKE;AAAA,qCACE;AAAQ,gBAAA,SAAS,EAAC,sBAAlB;AAAyC,gBAAA,OAAO,EAAE,MAAMK,YAAY,CAACC,CAAD,CAApE;AAAA,uCACE,QAAC,IAAD;AAAM,kBAAA,IAAI,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBALF;AAAA,aAASA,CAAT;AAAA;AAAA;AAAA;AAAA,kBADD,CANH;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,cArBF,eA8DE;AAAK,QAAA,SAAS,EAAC,2CAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,kCACE;AAAQ,YAAA,SAAS,EAAC,gBAAlB;AAAmC,YAAA,OAAO,EAAE,MAAM3B,OAAO,CAACkC,MAAR,CAAeC,QAAf,CAAwB,sBAAxB,EAAgD,EAAhD,EAAoD;AACpGC,cAAAA,MAAM,EAAE;AAD4F,aAApD,CAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAME;AAAQ,YAAA,QAAQ,EAAE,CAACtC,WAAnB;AAAgC,YAAA,SAAS,EAAC,kBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cA9DF;AAAA;AAAA;AAAA;AAAA;AAAA,YADe,GA6Eb;AA9EE,mBAAR;AAgFD,CAzKkC;AAAA,UAIjBH,QAJiB;AAAA,GAAnC;AA0KA,eAAeC,0BAAf","sourcesContent":["import axios from \"axios\"\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport Icon from \"../../components/Icon\"\nimport { nError } from \"../../funcs\"\nimport AccountPermission from \"../../models/AccountPermission\"\nimport { StoreDispatch, StoreState, mapDispatchToProps, mapStateToProps } from \"../../store\";\nimport Datetime from 'react-datetime'\n\nimport \"../../styles/pages/common/entity-edit.sass\"\nimport moment from \"moment\"\nimport Select from \"../../components/Select\"\nimport Checkbox from \"../../components/Checkbox\"\nimport { useRoute } from \"react-router5\"\n\ninterface Props {\n  store: StoreState,\n  dispatcher: StoreDispatch\n}\n\nconst AccountPermissionsPage_New = connect(mapStateToProps, mapDispatchToProps)(function(props: Props) {\n\n  const [readyToSave, setReadyToSave] = useState(false)\n\n  const $router = useRoute()\n\n  const [actions, setActions] = useState<string[] | null>(null)\n  const [availableActions, setAvailableActions] = useState<string[]>([])\n  const [selectedAction, setSelectedAction] = useState<string>('')\n  const [newAccountPermissionData, setNewAccountPermissionData] = useState({\n    name: '',\n    actions: [] as string[]\n  })\n  \n  // Load info function\n  async function loadInfo() {\n    try {\n      const { data: accountPermissionsData } = (await axios.get('/json/account_permissions.json'))\n\n      setActions(accountPermissionsData.edit.actions)\n      setAvailableActions([''].concat(accountPermissionsData.edit.actions))\n      setSelectedAction(availableActions[0])\n\n      setTimeout(() => setReadyToSave(false), 100)\n    }\n    catch (error) {\n      nError(error)\n    }\n  }\n\n  // Load accountPermission data\n  useEffect(() => {\n    loadInfo()\n  }, [])\n\n  // Add action function\n  function addAction() {\n\n    if(!newAccountPermissionData.actions || !newAccountPermissionData) return\n\n    setNewAccountPermissionData({\n      ...newAccountPermissionData,\n      actions: [\n        ...newAccountPermissionData.actions,\n        selectedAction\n      ]\n    })\n\n    let _availableActions = [...availableActions]\n\n    _availableActions = _availableActions.filter((action) => !(newAccountPermissionData.actions as string[]).includes(action))\n    _availableActions.splice(_availableActions.findIndex((_action) => selectedAction === _action), 1)\n\n    setAvailableActions([\n      ..._availableActions\n    ])\n\n    setSelectedAction(_availableActions[0])\n\n    setReadyToSave(true)\n  }\n\n  // Remove action function\n  function removeAction(i: number) {\n\n    let _accountPermissionActions = [...(newAccountPermissionData.actions as string[])]\n\n    let _action = _accountPermissionActions[i]\n    \n    _accountPermissionActions.splice(i, 1)\n\n    setNewAccountPermissionData({\n      ...newAccountPermissionData,\n      actions: _accountPermissionActions\n    })\n\n    setAvailableActions([\n      ...availableActions,\n      _action\n    ])\n\n    setReadyToSave(true)\n  }\n\n  useEffect(() => setReadyToSave(true), [\n    newAccountPermissionData\n  ])\n  \n  // Render function\n  return (<>\n    {availableActions ? (\n      <div className=\"AccountPermissionsPage_New entity-edit\">\n\n        <div className=\"wrapper flex-container sb\">\n          <h1>New Account`s Permission</h1>\n        </div>\n        \n        <div className=\"fieldset\">\n          \n          <div className=\"legend\">Main</div>\n\n          <div className=\"fields\">\n\n            <div className=\"__left\">\n              <div className=\"field\">\n                <span>Name:</span>\n                <input type=\"text\" onChange={({target: {value}}) => setNewAccountPermissionData({...newAccountPermissionData, name: value})} />\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"fieldset\">\n\n          <div className=\"flex-container sb wrap\">\n            <div className=\"legend\">Actions</div>\n\n            <div className=\"legend-action-wrapper\">\n              <label>Action:</label>\n              <div className=\"input-wrapper\">\n                <Select options={availableActions.map((action) => ({\n                  span: action,\n                  value: action\n                }))} selectedOption={selectedAction} onChange={(value) => setSelectedAction(value as string)}/>\n                <button disabled={!selectedAction} className=\"_green\" onClick={() => addAction()}>\n                  Add\n                </button>\n              </div>\n            </div>\n          </div>\n\n          <table className=\"table som\">\n            <tr>\n              <th style={{width: '100%'}}>Action</th>\n              <th>Allow</th>\n              <th></th>\n            </tr>\n            {(newAccountPermissionData.actions as string[]).map((action, i) => (\n              <tr key={i}>\n                <td>{action}</td>\n                <td>\n                  <Checkbox contents={''} value={true} />\n                </td>\n                <td>\n                  <button className=\"_zeroed _iconed _red\" onClick={() => removeAction(i)}>\n                    <Icon icon=\"x-mark-1\" />\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </table>\n        </div>\n\n        <div className=\"wrapper flex-container sb editing-buttons\">\n          <div />\n          <div className=\"buttons\">\n            <button className=\"_bordered _red\" onClick={() => $router.router.navigate('accounts_permissions', {}, {\n              reload: true\n            })}>\n              Cancel\n            </button>\n            <button disabled={!readyToSave} className=\"_bordered _green\">\n              Save\n            </button>\n          </div>\n        </div>\n      </div>\n    ) : null}\n  </>)\n})\nexport default AccountPermissionsPage_New\n"]},"metadata":{},"sourceType":"module"}