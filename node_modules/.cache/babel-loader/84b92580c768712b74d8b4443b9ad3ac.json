{"ast":null,"code":"import _objectSpread from\"/Users/nicole/rrrr/crm/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{createStore}from\"redux\";import{persistReducer,persistStore}from\"redux-persist\";import storage from\"redux-persist/lib/storage\";var persistConfig={key:\"root\",storage:storage,whitelist:['accessToken','navActive','reportsMaxRows']};export var mapStateToProps=function mapStateToProps(state){return{store:state};};export var mapDispatchToProps=function mapDispatchToProps(dispatch){return{dispatcher:{setAccessToken:function setAccessToken(accessToken){return dispatch({payload:accessToken,type:\"SET_ACCESS_TOKEN\"});},setAccounts:function setAccounts(accounts){return dispatch({payload:accounts,type:\"SET_ACCOUNTS\"});},setSelectedAccount:function setSelectedAccount(i){return dispatch({payload:i,type:\"SET_SELECTED_ACCOUNT\"});},setNavMode:function setNavMode(mode){return dispatch({payload:mode,type:\"SET_NAV_MODE\"});},setUser:function setUser(user){return dispatch({payload:user,type:\"SET_USER\"});},setMenus:function setMenus(menus){return dispatch({payload:menus,type:\"SET_MENUS\"});},setRedirectRoute:function setRedirectRoute(redirectRoute){return dispatch({payload:redirectRoute,type:\"SET_REDIRECT_ROUTE\"});},setNavActive:function setNavActive(navActive){return dispatch({payload:navActive,type:\"SET_NAV_ACTIVE\"});},setReportsMaxRows:function setReportsMaxRows(navActive){return dispatch({payload:navActive,type:\"SET_REPORTS_MAX_ROWS\"});}}};};var initialState={accessToken:null,accounts:[],selectedAccount:null,navMode:'main',user:null,menus:null,redirectRoute:null,navActive:{is:false,floating:false},reportsMaxRows:100};function rootReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;// Set access token case\nif(action.type===\"SET_ACCESS_TOKEN\"){state.accessToken=action.payload;return _objectSpread(_objectSpread({},state),{},{accessToken:action.payload});}// Set selected account case\nif(action.type===\"SET_SELECTED_ACCOUNT\"){state.selectedAccount=action.payload;return _objectSpread(_objectSpread({},state),{},{selectedAccount:action.payload});}// Set accounts case\nif(action.type===\"SET_ACCOUNTS\"){state.accounts=action.payload;return _objectSpread(_objectSpread({},state),{},{accounts:action.payload});}// Set nav mode\nif(action.type===\"SET_NAV_MODE\"){state.navMode=action.payload;return _objectSpread(_objectSpread({},state),{},{navMode:action.payload});}// Set user\nif(action.type===\"SET_USER\"){state.user=action.payload;return _objectSpread(_objectSpread({},state),{},{user:action.payload});}// Set menus\nif(action.type===\"SET_MENUS\"){state.menus=action.payload;return _objectSpread(_objectSpread({},state),{},{menus:action.payload});}// Set redirect route\nif(action.type===\"SET_REDIRECT_ROUTE\"){state.redirectRoute=action.payload;return _objectSpread(_objectSpread({},state),{},{redirectRoute:action.payload});}// Set nav active\nif(action.type===\"SET_NAV_ACTIVE\"){state.navActive=action.payload;return _objectSpread(_objectSpread({},state),{},{navActive:action.payload});}// Set nav active\nif(action.type===\"SET_REPORTS_MAX_ROWS\"){state.reportsMaxRows=action.payload;return _objectSpread(_objectSpread({},state),{},{reportsMaxRows:action.payload});}return state;}var persistedReducer=persistReducer(persistConfig,rootReducer);export var store=createStore(persistedReducer);export var persistor=persistStore(store);","map":{"version":3,"sources":["/Users/nicole/rrrr/crm/src/store.ts"],"names":["createStore","persistReducer","persistStore","storage","persistConfig","key","whitelist","mapStateToProps","state","store","mapDispatchToProps","dispatch","dispatcher","setAccessToken","accessToken","payload","type","setAccounts","accounts","setSelectedAccount","i","setNavMode","mode","setUser","user","setMenus","menus","setRedirectRoute","redirectRoute","setNavActive","navActive","setReportsMaxRows","initialState","selectedAccount","navMode","is","floating","reportsMaxRows","rootReducer","action","persistedReducer","persistor"],"mappings":"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","sourcesContent":["import { Dispatch, createStore } from \"redux\";\nimport { persistReducer, persistStore } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport Account from \"./models/Account\";\nimport Menus from \"./models/Menus\"\nimport User from \"./models/User\"\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  whitelist: ['accessToken', 'navActive', 'reportsMaxRows']\n};\n\nexport type NavMode = 'main' | 'settings'\n\nexport type NavActive = {\n  is: boolean,\n  floating: boolean\n}\n\nexport interface RedirectRoute {\n  name: string,\n  params: {\n    [key: string]: string\n  }\n}\n\nexport interface StoreState {\n  accessToken: string | null,\n  accounts: Account[],\n  selectedAccount: number | null,\n  user: User | null,\n  menus: Menus | null\n  navMode: NavMode,\n  redirectRoute: RedirectRoute | null,\n  navActive: NavActive,\n  reportsMaxRows: number\n}\n\nexport interface StoreDispatch {\n  setAccessToken(accessToken: string | null): void,\n  setSelectedAccount(i: number | null): void,\n  setAccounts(accounts: Account[]): void,\n  setNavMode(mode: NavMode): void,\n  setUser(user: User | null): void\n  setMenus(menus: Menus | null): void\n  setRedirectRoute(redirectRoute: RedirectRoute | null): void\n  setNavActive(navActive: NavActive): void\n  setReportsMaxRows(rows: number): void\n}\n\nexport interface StoreDispatchAction {\n  type: string,\n  payload: any\n}\n\nexport const mapStateToProps = (state: StoreState): {store: StoreState} => ({ store: state });\nexport const mapDispatchToProps = (dispatch: Dispatch): { dispatcher: StoreDispatch} => ({\n  dispatcher: {\n    setAccessToken: (accessToken) => dispatch({ payload: accessToken, type: \"SET_ACCESS_TOKEN\" }),\n    setAccounts: (accounts) => dispatch({ payload: accounts, type: \"SET_ACCOUNTS\" }),\n    setSelectedAccount: (i) => dispatch({ payload: i, type: \"SET_SELECTED_ACCOUNT\" }),\n    setNavMode: (mode) => dispatch({ payload: mode, type: \"SET_NAV_MODE\" }),\n    setUser: (user) => dispatch({ payload: user, type: \"SET_USER\" }),\n    setMenus: (menus) => dispatch({ payload: menus, type: \"SET_MENUS\" }),\n    setRedirectRoute: (redirectRoute) => dispatch({ payload: redirectRoute, type: \"SET_REDIRECT_ROUTE\" }),\n    setNavActive: (navActive) => dispatch({ payload: navActive, type: \"SET_NAV_ACTIVE\" }),\n    setReportsMaxRows: (navActive) => dispatch({ payload: navActive, type: \"SET_REPORTS_MAX_ROWS\" }),\n  }\n});\n\nconst initialState: StoreState = {\n  accessToken: null,\n  accounts: [],\n  selectedAccount: null,\n  navMode: 'main',\n  user: null,\n  menus: null,\n  redirectRoute: null,\n  navActive: {\n    is: false,\n    floating: false\n  },\n  reportsMaxRows: 100\n}\n\nfunction rootReducer(state = initialState, action: StoreDispatchAction) {\n\n  // Set access token case\n  if (action.type === \"SET_ACCESS_TOKEN\") {\n    state.accessToken = action.payload as string | null;\n    return {\n      ...state,\n      accessToken: action.payload as string | null\n    };\n  }\n\n  // Set selected account case\n  if (action.type === \"SET_SELECTED_ACCOUNT\") {\n    state.selectedAccount = action.payload as number | null;\n    return {\n      ...state,\n      selectedAccount: action.payload as number | null\n    };\n  }\n\n  // Set accounts case\n  if (action.type === \"SET_ACCOUNTS\") {\n    state.accounts = action.payload as Account[];\n    return {\n      ...state,\n      accounts: action.payload as Account[]\n    };\n  }\n\n  // Set nav mode\n  if (action.type === \"SET_NAV_MODE\") {\n    state.navMode = action.payload as NavMode;\n    return {\n      ...state,\n      navMode: action.payload as NavMode\n    };\n  }\n\n  // Set user\n  if (action.type === \"SET_USER\") {\n    state.user = action.payload as User | null;\n    return {\n      ...state,\n      user: action.payload as User | null\n    };\n  }\n\n  // Set menus\n  if (action.type === \"SET_MENUS\") {\n    state.menus = action.payload as Menus | null;\n    return {\n      ...state,\n      menus: action.payload as Menus | null\n    };\n  }\n\n  // Set redirect route\n  if (action.type === \"SET_REDIRECT_ROUTE\") {\n    state.redirectRoute = action.payload as RedirectRoute | null;\n    return {\n      ...state,\n      redirectRoute: action.payload as RedirectRoute | null\n    };\n  }\n\n  // Set nav active\n  if (action.type === \"SET_NAV_ACTIVE\") {\n    state.navActive = action.payload as NavActive;\n    return {\n      ...state,\n      navActive: action.payload as NavActive\n    };\n  }\n\n  // Set nav active\n  if (action.type === \"SET_REPORTS_MAX_ROWS\") {\n    state.reportsMaxRows = action.payload as number;\n    return {\n      ...state,\n      reportsMaxRows: action.payload as number\n    };\n  }\n\n  return state;\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = createStore(persistedReducer)\nexport const persistor = persistStore(store as any)\n"]},"metadata":{},"sourceType":"module"}