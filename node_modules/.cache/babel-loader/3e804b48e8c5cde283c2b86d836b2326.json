{"ast":null,"code":"var _jsxFileName = \"/Users/nicole/rrrr/crm/src/pages/Jobs/List.tsx\",\n    _s = $RefreshSig$();\n\nimport classNames from \"classnames\";\nimport { DateTime } from \"luxon\";\nimport moment from \"moment\";\nimport qs from \"qs\";\nimport { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useRoute } from \"react-router5\";\nimport ReportFilters from \"../../components/reports/Filters\";\nimport ReportTableControls from \"../../components/reports/TableControls\";\nimport ReportTableField from \"../../components/reports/TableField\";\nimport { httpClient, nError } from \"../../funcs/base\";\nimport { getDateRangeByPreset } from \"../../funcs/reports\";\nimport { mapDispatchToProps, mapStateToProps, store } from \"../../store\";\nimport \"../../styles/pages/common/report-list.sass\";\nimport { getActiveAccount } from \"../../funcs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst JobsPage_List = connect(mapStateToProps, mapDispatchToProps)(_s(function (props) {\n  _s();\n\n  const $router = useRoute();\n  const [$updater, $setUpdater] = useState(Math.random());\n  const activeAccount = getActiveAccount(props.store);\n  const [reportIsDeprecated, setReportIsDeprecated] = useState(false);\n  let user = store.getState().user;\n  let timeZone = user === null || user === void 0 ? void 0 : user.time_zone;\n  const [reportData, setReportData] = useState(null);\n  const [localInterface, setLocalInterface] = useState({\n    search: '',\n    jobSharePopup: false,\n    dateRangeCalendarShown: false,\n    dateRangePreset: \"custom\",\n    min_date: DateTime.now().setZone(timeZone).startOf('day').toJSDate(),\n    max_date: DateTime.now().setZone(timeZone).endOf('day').toJSDate(),\n    page: 1,\n    filter_words: {\n      source: [],\n      status: [],\n      property_type: [],\n      area: [],\n      created_by: [],\n      service_resource: []\n    },\n    sort: {\n      field: 'created_at',\n      direction: 'up'\n    },\n    sortFields: [{\n      span: 'Date',\n      value: 'created_at'\n    }, {\n      span: 'Name',\n      value: 'name'\n    }, {\n      span: 'Status',\n      value: 'name'\n    }, {\n      span: 'Property type',\n      value: 'property_type'\n    }, {\n      span: 'Area',\n      value: 'area'\n    }, {\n      span: 'Source',\n      value: 'source'\n    }, {\n      span: 'Status',\n      value: 'status'\n    }, {\n      span: 'Created by',\n      value: 'created_by'\n    }, {\n      span: 'Appointments',\n      value: 'appointments'\n    }, {\n      span: 'Service Resource',\n      value: 'service_resource'\n    }, {\n      span: 'Total',\n      value: 'total'\n    }, {\n      span: 'Paid',\n      value: 'paid'\n    }]\n  }); // Watch date range preset\n\n  useEffect(() => {\n    if (!reportData) return;\n    if (localInterface.dateRangePreset === 'custom') return;\n    setLocalInterface({ ...localInterface,\n      ...getDateRangeByPreset(localInterface.dateRangePreset, reportData === null || reportData === void 0 ? void 0 : reportData.interface.min_date, reportData === null || reportData === void 0 ? void 0 : reportData.interface.max_date)\n    });\n  }, [localInterface.dateRangePreset]); // Load jobs function\n\n  async function loadJobs() {\n    httpClient.defaults.headers['Authorization'] = `Bearer ${props.store.accessToken}`;\n    let activeFilters = { ...localInterface.filter_words\n    };\n    Object.keys(localInterface.filter_words).forEach(key => !activeFilters[key].length && delete activeFilters[key]);\n    let reqData = {\n      account_id: activeAccount.account_id,\n      limit_rows: props.store.reportsMaxRows,\n      page: localInterface.page,\n      date_start: localInterface.min_date.toISOString(),\n      date_end: localInterface.max_date.toISOString(),\n      sort_field: localInterface.sort.field,\n      sort_type: localInterface.sort.direction === 'up' ? 'asc' : 'desc',\n      filter_field: JSON.stringify(activeFilters),\n      ...(localInterface.search ? {\n        search: localInterface.search\n      } : {})\n    };\n\n    try {\n      const {\n        data: jobs\n      } = await httpClient.post('/jobs/report', qs.stringify(reqData), {\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n          'Accept': 'application/json'\n        }\n      });\n      setReportData({ ...jobs,\n        interface: { ...jobs.interface,\n          min_date: moment(jobs.interface.min_date).startOf('day').toDate(),\n          max_date: moment(jobs.interface.max_date).endOf('day').toDate()\n        }\n      });\n      setTimeout(() => {\n        setReportIsDeprecated(false);\n      }, 100);\n    } catch (error) {\n      nError(error);\n    }\n  } // Load jobs on page mount\n\n\n  useEffect(() => {\n    loadJobs();\n  }, [$updater, localInterface.page]); // Watch for deprecated\n\n  useEffect(() => {\n    if (!reportData) return;\n    setReportIsDeprecated(true);\n  }, [localInterface.min_date, localInterface.max_date]); // Is filter selected function\n\n  function isFilterSelected(field, value) {\n    return localInterface.filter_words[field].includes(value);\n  } // Is all filters selected function\n\n\n  function isAllFiltersSelected(field) {\n    return localInterface.filter_words[field].length === 0;\n  } // Filter switch function\n\n\n  function switchFilter(field, value, toggle) {\n    let _arr = [...localInterface.filter_words[field]];\n\n    if (toggle && value === \"All\") {\n      _arr = [];\n    } else if (!toggle) {\n      while (true) {\n        let i = _arr.findIndex(filter => filter === value);\n\n        if (i === -1) break;\n\n        _arr.splice(i, 1);\n      }\n    } else {\n      if (reportData !== null && reportData !== void 0 && reportData.interface.filter_words[field].every(option => _arr.concat([value]).includes(option))) _arr = [];else if (_arr.findIndex(filter => filter === value) === -1) _arr.push(value);\n    }\n\n    setLocalInterface({ ...localInterface,\n      filter_words: { ...localInterface.filter_words,\n        [field]: _arr\n      }\n    });\n  } // Render function\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: reportData ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"JobsPage_List\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reports-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cell\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"amount\",\n            children: reportData.dashboard.all\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend\",\n            children: \"All Jobs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cell\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"amount\",\n            children: reportData.dashboard.closed\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend\",\n            children: \"Closed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cell\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"amount\",\n            children: reportData.dashboard.in_progress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend\",\n            children: \"In progress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cell\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"amount\",\n            children: reportData.dashboard.canceled\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend\",\n            children: \"Canceled\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Jobs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReportFilters, {\n        onSearchInputChange: value => setLocalInterface({ ...localInterface,\n          search: value\n        }),\n        dateRangePreset: localInterface.dateRangePreset,\n        onDateRangePresetChange: value => setLocalInterface({ ...localInterface,\n          dateRangePreset: value\n        }),\n        minDate: localInterface.min_date,\n        onMinDateChange: value => setLocalInterface({ ...localInterface,\n          min_date: value,\n          dateRangePreset: 'custom'\n        }),\n        maxDate: localInterface.max_date,\n        onMaxDateChange: value => setLocalInterface({ ...localInterface,\n          max_date: value,\n          dateRangePreset: 'custom'\n        }),\n        updateButtonActive: reportIsDeprecated,\n        onUpdate: () => $setUpdater(Math.random())\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReportTableControls, {\n        zIndex: 5,\n        onMaxRowsChange: () => {\n          $setUpdater(Math.random());\n        },\n        amount: {\n          total: reportData.interface.rows_all,\n          start: reportData.interface.rows_start,\n          end: reportData.interface.rows_end\n        },\n        page: localInterface.page,\n        maxPages: reportData.interface.max_pages,\n        onPagesStart: () => setLocalInterface({ ...localInterface,\n          page: 1\n        }),\n        onPrevPage: () => setLocalInterface({ ...localInterface,\n          page: localInterface.page - 1\n        }),\n        onNextPage: () => setLocalInterface({ ...localInterface,\n          page: localInterface.page + 1\n        }),\n        onPagesEnd: () => setLocalInterface({ ...localInterface,\n          page: reportData.interface.max_pages\n        }),\n        sort: localInterface.sort,\n        sortFields: localInterface.sortFields,\n        onSortFieldChange: value => setLocalInterface({ ...localInterface,\n          sort: { ...localInterface.sort,\n            field: value\n          }\n        }),\n        onSortDirectionChange: value => setLocalInterface({ ...localInterface,\n          sort: { ...localInterface.sort,\n            direction: value\n          }\n        }),\n        onSortFire: () => $setUpdater(Math.random())\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contents\",\n        children: [/*#__PURE__*/_jsxDEV(\"table\", {\n          className: classNames('table', '__show-on-wide', {\n            __respectAsidePanel: props.store.navActive.is\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(ReportTableField, {\n              contents: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 28\n              }, this),\n              sortDirection: localInterface.sort.field === 'created_at' ? localInterface.sort.direction : undefined,\n              onSortDirectionChange: value => setLocalInterface({ ...localInterface,\n                sort: {\n                  field: 'created_at',\n                  direction: value\n                }\n              }),\n              onFilterFire: () => $setUpdater(Math.random())\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ReportTableField, {\n              contents: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 28\n              }, this),\n              sortDirection: localInterface.sort.field === 'name' ? localInterface.sort.direction : undefined,\n              onSortDirectionChange: value => setLocalInterface({ ...localInterface,\n                sort: {\n                  field: 'name',\n                  direction: value\n                }\n              }),\n              onFilterFire: () => $setUpdater(Math.random())\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ReportTableField, {\n              contents: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 28\n              }, this),\n              allFiltersSelected: isAllFiltersSelected(\"status\"),\n              onAllFiltersChange: value => switchFilter(\"status\", \"All\", value),\n              filterWords: reportData.interface.filter_words.status.map(filterWord => ({\n                word: filterWord,\n                selected: isFilterSelected(\"status\", filterWord)\n              })),\n              onFilterChange: value => switchFilter(\"status\", value.word, value.selected),\n              onFilterFire: () => $setUpdater(Math.random()),\n              sortDirection: localInterface.sort.field === 'status' ? localInterface.sort.direction : undefined,\n              onSortDirectionChange: value => setLocalInterface({ ...localInterface,\n                sort: {\n                  field: 'status',\n                  direction: value\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ReportTableField, {\n              contents: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Property type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 28\n              }, this),\n              allFiltersSelected: isAllFiltersSelected(\"property_type\"),\n              onAllFiltersChange: value => switchFilter(\"property_type\", \"All\", value),\n              filterWords: reportData.interface.filter_words.property_type.map(filterWord => ({\n                word: filterWord,\n                selected: isFilterSelected(\"property_type\", filterWord)\n              })),\n              onFilterChange: value => switchFilter(\"property_type\", value.word, value.selected),\n              onFilterFire: () => $setUpdater(Math.random()),\n              sortDirection: localInterface.sort.field === 'property_type' ? localInterface.sort.direction : undefined,\n              onSortDirectionChange: value => setLocalInterface({ ...localInterface,\n                sort: {\n                  field: 'property_type',\n                  direction: value\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ReportTableField, {\n              contents: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Area\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 28\n              }, this),\n              allFiltersSelected: isAllFiltersSelected(\"area\"),\n              onAllFiltersChange: value => switchFilter(\"area\", \"All\", value),\n              onFilterFire: () => $setUpdater(Math.random()),\n              filterWords: reportData.interface.filter_words.area.map(filterWord => ({\n                word: filterWord,\n                selected: isFilterSelected(\"area\", filterWord)\n              })),\n              onFilterChange: value => switchFilter(\"area\", value.word, value.selected),\n              sortDirection: localInterface.sort.field === 'area' ? localInterface.sort.direction : undefined,\n              onSortDirectionChange: value => setLocalInterface({ ...localInterface,\n                sort: {\n                  field: 'area',\n                  direction: value\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ReportTableField, {\n              contents: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Source\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 28\n              }, this),\n              allFiltersSelected: isAllFiltersSelected(\"source\"),\n              onAllFiltersChange: value => switchFilter(\"source\", \"All\", value),\n              filterWords: reportData.interface.filter_words.source.map(filterWord => ({\n                word: filterWord,\n                selected: isFilterSelected(\"source\", filterWord)\n              })),\n              onFilterChange: value => switchFilter(\"source\", value.word, value.selected),\n              onFilterFire: () => $setUpdater(Math.random()),\n              sortDirection: localInterface.sort.field === 'source' ? localInterface.sort.direction : undefined,\n              onSortDirectionChange: value => setLocalInterface({ ...localInterface,\n                sort: {\n                  field: 'source',\n                  direction: value\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ReportTableField, {\n              contents: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Created by\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 28\n              }, this),\n              allFiltersSelected: isAllFiltersSelected(\"created_by\"),\n              onAllFiltersChange: value => switchFilter(\"created_by\", \"All\", value),\n              filterWords: reportData.interface.filter_words.created_by.map(filterWord => ({\n                word: filterWord,\n                selected: isFilterSelected(\"created_by\", filterWord)\n              })),\n              onFilterChange: value => switchFilter(\"created_by\", value.word, value.selected),\n              onFilterFire: () => $setUpdater(Math.random()),\n              sortDirection: localInterface.sort.field === 'created_by' ? localInterface.sort.direction : undefined,\n              onSortDirectionChange: value => setLocalInterface({ ...localInterface,\n                sort: {\n                  field: 'created_by',\n                  direction: value\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ReportTableField, {\n              contents: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Appointments\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 28\n              }, this),\n              sortDirection: localInterface.sort.field === 'appointments' ? localInterface.sort.direction : undefined,\n              onSortDirectionChange: value => setLocalInterface({ ...localInterface,\n                sort: {\n                  field: 'appointments',\n                  direction: value\n                }\n              }),\n              onFilterFire: () => $setUpdater(Math.random())\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ReportTableField, {\n              contents: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Service resource\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 455,\n                columnNumber: 28\n              }, this),\n              allFiltersSelected: isAllFiltersSelected(\"service_resource\"),\n              onAllFiltersChange: value => switchFilter(\"service_resource\", \"All\", value),\n              filterWords: reportData.interface.filter_words.service_resource.map(filterWord => ({\n                word: filterWord,\n                selected: isFilterSelected(\"service_resource\", filterWord)\n              })),\n              onFilterChange: value => {\n                switchFilter(\"service_resource\", value.word, value.selected);\n              },\n              onFilterFire: () => $setUpdater(Math.random()),\n              sortDirection: localInterface.sort.field === 'service_resource' ? localInterface.sort.direction : undefined,\n              onSortDirectionChange: value => setLocalInterface({ ...localInterface,\n                sort: {\n                  field: 'service_resource',\n                  direction: value\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ReportTableField, {\n              contents: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Total\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 471,\n                columnNumber: 28\n              }, this),\n              sortDirection: localInterface.sort.field === 'total' ? localInterface.sort.direction : undefined,\n              onSortDirectionChange: value => setLocalInterface({ ...localInterface,\n                sort: {\n                  field: 'total',\n                  direction: value\n                }\n              }),\n              onFilterFire: () => $setUpdater(Math.random())\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ReportTableField, {\n              contents: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Paid\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 479,\n                columnNumber: 28\n              }, this),\n              sortDirection: localInterface.sort.field === 'paid' ? localInterface.sort.direction : undefined,\n              onSortDirectionChange: value => setLocalInterface({ ...localInterface,\n                sort: {\n                  field: 'paid',\n                  direction: value\n                }\n              }),\n              onFilterFire: () => $setUpdater(Math.random())\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 478,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 13\n          }, this), reportData.jobs.map((job, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            onClick: () => $router.router.navigate('jobs.item', {\n              jobId: job.job_id\n            }, {\n              reload: true\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: job.created_at\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 491,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: job.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: job.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 493,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: job.property_type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 494,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: job.area\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 495,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: job.source\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 496,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: job.created_by\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 497,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: job.appointments\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 498,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: job.service_resource\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 499,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: job.total\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 500,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: job.paid\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 501,\n              columnNumber: 17\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: classNames('table', '__hide-on-wide', '__hide-on-mobile', {\n            __respectAsidePanel: props.store.navActive.is\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 13\n          }, this), reportData.jobs.map((job, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            onClick: () => $router.router.navigate('jobs.item', {\n              jobId: job.job_id\n            }, {\n              reload: true\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: job.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 516,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: job.created_at\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 517,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: job.created_by\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 520,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: job.service_resource\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 521,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 519,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: job.area\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 524,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: job.source\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 525,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 523,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: job.property_type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 528,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: job.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 529,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 527,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Appointments: \", job.appointments]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 532,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"\\xA0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 533,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 531,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Total: \", job.total]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 536,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Paid: \", job.paid]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 537,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 535,\n              columnNumber: 17\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 512,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classNames('mobile-table-items', '__show-on-mobile', {\n            __respectAsidePanel: props.store.navActive.is\n          }),\n          children: reportData.jobs.map((job, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item\",\n            onClick: () => $router.router.navigate('jobs.item', {\n              jobId: job.job_id\n            }, {\n              reload: true\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"__top\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"__left\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: job.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 557,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 556,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"Appointments: \", job.appointments]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 559,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 555,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"__right\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"Paid: \", /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: job.paid\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 566,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 565,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"Total: \", /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: job.total\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 569,\n                    columnNumber: 30\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 568,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: job.property_type\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 571,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: job.status\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 575,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 574,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 564,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 553,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"__bottom\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"__left\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"gray\",\n                    children: \"Area:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 584,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\" \", job.area]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 585,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 583,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"gray\",\n                    children: \"Source:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 588,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\" \", job.source]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 589,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 587,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"gray\",\n                    children: \"Service Resourse:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 592,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\" \", job.service_resource]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 593,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 591,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 582,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"__right small\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: job.created_at\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 598,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"Created by \", job.created_by]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 601,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 597,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 580,\n              columnNumber: 17\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 549,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReportTableControls, {\n        isUnder: true,\n        onMaxRowsChange: () => $setUpdater(Math.random()),\n        amount: {\n          total: reportData.interface.rows_all,\n          start: reportData.interface.rows_start,\n          end: reportData.interface.rows_end\n        },\n        page: localInterface.page,\n        maxPages: reportData.interface.max_pages,\n        onPagesStart: () => setLocalInterface({ ...localInterface,\n          page: 1\n        }),\n        onPrevPage: () => setLocalInterface({ ...localInterface,\n          page: localInterface.page - 1\n        }),\n        onNextPage: () => setLocalInterface({ ...localInterface,\n          page: localInterface.page + 1\n        }),\n        onPagesEnd: () => setLocalInterface({ ...localInterface,\n          page: reportData.interface.max_pages\n        }),\n        sort: localInterface.sort,\n        sortFields: localInterface.sortFields,\n        onSortFieldChange: value => setLocalInterface({ ...localInterface,\n          sort: { ...localInterface.sort,\n            field: value\n          }\n        }),\n        onSortDirectionChange: value => setLocalInterface({ ...localInterface,\n          sort: { ...localInterface.sort,\n            direction: value\n          }\n        }),\n        onSortFire: () => $setUpdater(Math.random())\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 612,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this) : null\n  }, void 0, false);\n}, \"zEvLu3T4gpUkez7VLRgJEEWuzKc=\", false, function () {\n  return [useRoute];\n}));\nexport default JobsPage_List;","map":{"version":3,"sources":["/Users/nicole/rrrr/crm/src/pages/Jobs/List.tsx"],"names":["classNames","DateTime","moment","qs","useEffect","useState","connect","useRoute","ReportFilters","ReportTableControls","ReportTableField","httpClient","nError","getDateRangeByPreset","mapDispatchToProps","mapStateToProps","store","getActiveAccount","JobsPage_List","props","$router","$updater","$setUpdater","Math","random","activeAccount","reportIsDeprecated","setReportIsDeprecated","user","getState","timeZone","time_zone","reportData","setReportData","localInterface","setLocalInterface","search","jobSharePopup","dateRangeCalendarShown","dateRangePreset","min_date","now","setZone","startOf","toJSDate","max_date","endOf","page","filter_words","source","status","property_type","area","created_by","service_resource","sort","field","direction","sortFields","span","value","interface","loadJobs","defaults","headers","accessToken","activeFilters","Object","keys","forEach","key","length","reqData","account_id","limit_rows","reportsMaxRows","date_start","toISOString","date_end","sort_field","sort_type","filter_field","JSON","stringify","data","jobs","post","toDate","setTimeout","error","isFilterSelected","includes","isAllFiltersSelected","switchFilter","toggle","_arr","i","findIndex","filter","splice","every","option","concat","push","dashboard","all","closed","in_progress","canceled","total","rows_all","start","rows_start","end","rows_end","max_pages","__respectAsidePanel","navActive","is","undefined","map","filterWord","word","selected","job","router","navigate","jobId","job_id","reload","created_at","name","appointments","paid"],"mappings":"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","sourcesContent":["import axios from \"axios\"\nimport classNames from \"classnames\"\nimport { DateTime } from \"luxon\"\nimport moment from \"moment\"\nimport qs from \"qs\"\nimport { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useRoute } from \"react-router5\"\nimport ReportFilters from \"../../components/reports/Filters\"\nimport ReportTableControls from \"../../components/reports/TableControls\"\nimport ReportTableField from \"../../components/reports/TableField\"\nimport { httpClient, nError } from \"../../funcs/base\"\nimport {getDateRangeByPreset} from \"../../funcs/reports\"\nimport Job from \"../../models/Job\"\nimport { DateRangePreset } from \"../../models/Misc\"\nimport {StoreDispatch, StoreState, mapDispatchToProps, mapStateToProps, store} from \"../../store\";\n\nimport \"../../styles/pages/common/report-list.sass\"\nimport {getActiveAccount} from \"../../funcs\";\nimport Account from \"../../models/Account\";\n\ninterface Props {\n  store: StoreState,\n  dispatcher: StoreDispatch\n}\n\ntype FilterWord = 'status' | 'property_type' | 'area' | 'source' | 'created_by' | 'service_resource'\n\ninterface JobsReport {\n\n  interface: {\n\n    filter_words: {\n\n      status: string[],\n      property_type: string[],\n      area: string[],\n      source: string[],\n      created_by: string[],\n      service_resource: string[]\n    },\n\n    max_pages: number,\n    rows_start: number,\n    rows_end: number,\n    rows_all: number,\n    \n    min_date: Date,\n    max_date: Date\n  },\n\n  permissions: {\n    show_job: boolean\n  },\n\n  dashboard: {\n\n    all: string,\n    closed: string,\n    in_progress: string,\n    canceled: string\n  },\n\n  jobs: Job[]\n}\n\nconst JobsPage_List = connect(mapStateToProps, mapDispatchToProps)(function(props: Props) {\n\n  const $router = useRoute()\n\n  const [$updater, $setUpdater] = useState<any>(Math.random())\n  const activeAccount = getActiveAccount(props.store) as Account;\n  const [reportIsDeprecated, setReportIsDeprecated] = useState(false)\n  let user = store.getState().user;\n  let timeZone = user?.time_zone;\n  const [reportData, setReportData] = useState<JobsReport | null>(null)\n  const [localInterface, setLocalInterface] = useState(\n      {\n    search: '',\n\n    jobSharePopup: false,\n    \n    dateRangeCalendarShown: false,\n    dateRangePreset: \"custom\" as DateRangePreset,\n\n    min_date: DateTime.now().setZone(timeZone).startOf('day').toJSDate(),\n    max_date: DateTime.now().setZone(timeZone).endOf('day').toJSDate(),\n\n    page: 1,\n\n    filter_words: {\n\n      source: [] as string[],\n      status: [] as string[],\n      property_type: [] as string[],\n      area: [] as string[],\n      created_by: [] as string[],\n      service_resource: [] as string[]\n    },\n\n    sort: {\n      field: 'created_at',\n      direction: 'up' as 'up' | 'down'\n    },\n    sortFields: [{\n      span: 'Date',\n      value: 'created_at'\n    },{\n      span: 'Name',\n      value: 'name'\n    },{\n      span: 'Status',\n      value: 'name'\n    },{\n      span: 'Property type',\n      value: 'property_type'\n    },{\n      span: 'Area',\n      value: 'area'\n    },{\n      span: 'Source',\n      value: 'source'\n    },{\n      span: 'Status',\n      value: 'status'\n    },{\n      span: 'Created by',\n      value: 'created_by'\n    },{\n      span: 'Appointments',\n      value: 'appointments'\n    },{\n      span: 'Service Resource',\n      value: 'service_resource'\n    },{\n      span: 'Total',\n      value: 'total'\n    },{\n      span: 'Paid',\n      value: 'paid'\n    }]\n\n  })\n\n\n\n  // Watch date range preset\n  useEffect(() => {\n    if (!reportData) return\n    \n    if(localInterface.dateRangePreset === 'custom') return\n\n    setLocalInterface({\n      ...localInterface,\n      ...(getDateRangeByPreset(localInterface.dateRangePreset, reportData?.interface.min_date, reportData?.interface.max_date))\n    })\n\n  }, [localInterface.dateRangePreset])\n\n  // Load jobs function\n  async function loadJobs() {\n\n    httpClient.defaults.headers['Authorization'] = `Bearer ${props.store.accessToken}`\n\n    let activeFilters: any = {...localInterface.filter_words}\n    Object.keys(localInterface.filter_words).forEach((key: any) => !activeFilters[key].length && delete activeFilters[key])\n    let reqData = {\n      account_id: activeAccount.account_id,\n      limit_rows: props.store.reportsMaxRows,\n      page: localInterface.page,\n      date_start: localInterface.min_date.toISOString(),\n      date_end: localInterface.max_date.toISOString(),\n      sort_field: localInterface.sort.field,\n      sort_type: localInterface.sort.direction === 'up' ? 'asc' : 'desc',\n      filter_field: JSON.stringify(activeFilters),\n      ...(localInterface.search ? {search: localInterface.search} : {})\n    };\n    try {\n      const { data: jobs } = (await httpClient.post('/jobs/report', qs.stringify(reqData), {\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n          'Accept': 'application/json'\n        }\n      })) as { data: JobsReport }\n\n      setReportData({\n        ...jobs,\n\n        interface: {\n\n          ...jobs.interface,\n          min_date: moment(jobs.interface.min_date).startOf('day').toDate(),\n          max_date: moment(jobs.interface.max_date).endOf('day').toDate(),\n        }\n      })\n\n      setTimeout(() => {\n        setReportIsDeprecated(false)\n      }, 100)\n    }\n    catch (error) {\n      nError(error)\n    }\n  }\n\n  // Load jobs on page mount\n  useEffect(() => { loadJobs() }, [\n    $updater,\n    localInterface.page,\n  ])\n\n  // Watch for deprecated\n  useEffect(() => {\n    if(!reportData) return\n    setReportIsDeprecated(true)\n  }, [\n    localInterface.min_date,\n    localInterface.max_date\n  ])\n\n  // Is filter selected function\n  function isFilterSelected(field: FilterWord, value: string) {\n    return localInterface.filter_words[field].includes(value)\n  }\n\n  // Is all filters selected function\n  function isAllFiltersSelected(field: FilterWord) {\n    return localInterface.filter_words[field].length === 0\n  }\n\n  // Filter switch function\n  function switchFilter(field: FilterWord, value: string, toggle: boolean) {\n\n    let _arr = [...localInterface.filter_words[field]]\n\n    if (toggle && value === \"All\") { _arr = [] }\n    \n    else if (!toggle) {\n\n      while (true) {\n        let i = _arr.findIndex((filter) => filter === value)\n        if(i === -1) break\n        _arr.splice(i, 1)\n      }\n    }\n      \n    else {\n\n      if (reportData?.interface.filter_words[field].every((option) => _arr.concat([value]).includes(option)))\n        _arr = []\n\n      else if(_arr.findIndex((filter) => filter === value) === -1)\n        _arr.push(value)\n    }\n\n    setLocalInterface({...localInterface, filter_words: {...localInterface.filter_words, [field]: _arr}})\n  }\n\n  // Render function\n  return (<>\n    {reportData ? (\n      <div className=\"JobsPage_List\" >\n      \n        { /* Reports grid */}\n        <div className=\"reports-grid\">\n        \n          <div className=\"cell\">\n\n            <div className=\"amount\">{reportData.dashboard.all}</div>\n            <div className=\"legend\">All Jobs</div>\n          </div>\n\n          <div className=\"cell\">\n\n            <div className=\"amount\">{reportData.dashboard.closed}</div>\n            <div className=\"legend\">Closed</div>\n          </div>\n\n          <div className=\"cell\">\n\n            <div className=\"amount\">{reportData.dashboard.in_progress}</div>\n            <div className=\"legend\">In progress</div>\n          </div>\n\n          <div className=\"cell\">\n\n            <div className=\"amount\">{reportData.dashboard.canceled}</div>\n            <div className=\"legend\">Canceled</div>\n\n          </div>\n        </div>\n\n        { /* Page header */}\n        <div className=\"page-header\">\n          <h1>Jobs</h1>\n        </div>\n\n        { /* List filters */}\n        <ReportFilters\n          onSearchInputChange={(value) => setLocalInterface({...localInterface, search: value})}\n\n          dateRangePreset={localInterface.dateRangePreset}\n          onDateRangePresetChange={(value) => setLocalInterface({ ...localInterface, dateRangePreset: value })}\n\n          minDate={localInterface.min_date}\n          onMinDateChange={(value) => setLocalInterface({...localInterface, min_date: value, dateRangePreset: 'custom'})}\n\n          maxDate={localInterface.max_date}\n          onMaxDateChange={(value) => setLocalInterface({...localInterface, max_date: value, dateRangePreset: 'custom'})}\n\n          updateButtonActive={reportIsDeprecated}\n          onUpdate={() => $setUpdater(Math.random())}\n        />\n\n        {/* Table controls */}\n        <ReportTableControls\n          zIndex={5}\n\n          onMaxRowsChange={() => {\n            $setUpdater(Math.random());\n          }}\n\n          amount={{\n            total: reportData.interface.rows_all,\n            start: reportData.interface.rows_start,\n            end: reportData.interface.rows_end\n          }}\n\n          page={localInterface.page}\n          maxPages={reportData.interface.max_pages}\n          onPagesStart={() => setLocalInterface({...localInterface, page: 1})}\n          onPrevPage={() => setLocalInterface({...localInterface, page: localInterface.page-1})}\n          onNextPage={() => setLocalInterface({...localInterface, page: localInterface.page+1})}\n          onPagesEnd={() => setLocalInterface({...localInterface, page: reportData.interface.max_pages})}\n          \n          sort={localInterface.sort}\n          sortFields={localInterface.sortFields}\n          onSortFieldChange={(value) => setLocalInterface({...localInterface, sort: {...localInterface.sort, field: value}})}\n          onSortDirectionChange={(value) => setLocalInterface({...localInterface, sort: {...localInterface.sort, direction: value}})}\n          onSortFire={() => $setUpdater(Math.random())}\n        />\n\n        <div className=\"contents\">\n\n          {/* Wide desktop table */}\n          <table className={classNames('table', '__show-on-wide', {\n            __respectAsidePanel: props.store.navActive.is\n          })}>\n            <tr>\n              <ReportTableField\n                contents={(<span>Date</span>)}\n\n                sortDirection={localInterface.sort.field === 'created_at' ? localInterface.sort.direction : undefined}\n                onSortDirectionChange={(value) => setLocalInterface({...localInterface, sort: {field: 'created_at', direction: value}})}\n\n                onFilterFire={() => $setUpdater(Math.random())}\n              />\n              <ReportTableField\n                contents={(<span>Name</span>)}\n                \n                sortDirection={localInterface.sort.field === 'name' ? localInterface.sort.direction : undefined}\n                onSortDirectionChange={(value) => setLocalInterface({...localInterface, sort: {field: 'name', direction: value}})}\n\n                onFilterFire={() => $setUpdater(Math.random())}\n              />\n              <ReportTableField\n                contents={(<span>Status</span>)}\n\n                allFiltersSelected={isAllFiltersSelected(\"status\")}\n                onAllFiltersChange={(value) => switchFilter(\"status\", \"All\", value)}\n\n                filterWords={reportData.interface.filter_words.status.map((filterWord) => ({\n                  word: filterWord,\n                  selected: isFilterSelected(\"status\", filterWord)\n                }))}\n                onFilterChange={(value) => switchFilter(\"status\", value.word, value.selected)}\n                onFilterFire={() => $setUpdater(Math.random())}\n\n                sortDirection={localInterface.sort.field === 'status' ? localInterface.sort.direction : undefined}\n                onSortDirectionChange={(value) => setLocalInterface({...localInterface, sort: {field: 'status', direction: value}})}\n              />\n              <ReportTableField\n                contents={(<span>Property type</span>)}\n\n                allFiltersSelected={isAllFiltersSelected(\"property_type\")}\n                onAllFiltersChange={(value) => switchFilter(\"property_type\", \"All\", value)}\n\n                filterWords={reportData.interface.filter_words.property_type.map((filterWord) => ({\n                  word: filterWord,\n                  selected: isFilterSelected(\"property_type\", filterWord)\n                }))}\n                onFilterChange={(value) => switchFilter(\"property_type\", value.word, value.selected)}\n                onFilterFire={() => $setUpdater(Math.random())}\n\n                sortDirection={localInterface.sort.field === 'property_type' ? localInterface.sort.direction : undefined}\n                onSortDirectionChange={(value) => setLocalInterface({...localInterface, sort: {field: 'property_type', direction: value}})}\n              />\n              <ReportTableField\n                contents={(<span>Area</span>)}\n\n                allFiltersSelected={isAllFiltersSelected(\"area\")}\n                onAllFiltersChange={(value) => switchFilter(\"area\", \"All\", value)}\n                onFilterFire={() => $setUpdater(Math.random())}\n\n                filterWords={reportData.interface.filter_words.area.map((filterWord) => ({\n                  word: filterWord,\n                  selected: isFilterSelected(\"area\", filterWord)\n                }))}\n                onFilterChange={(value) => switchFilter(\"area\", value.word, value.selected)}\n\n                sortDirection={localInterface.sort.field === 'area' ? localInterface.sort.direction : undefined}\n                onSortDirectionChange={(value) => setLocalInterface({...localInterface, sort: {field: 'area', direction: value}})}\n              />\n              <ReportTableField\n                contents={(<span>Source</span>)}\n\n                allFiltersSelected={isAllFiltersSelected(\"source\")}\n                onAllFiltersChange={(value) => switchFilter(\"source\", \"All\", value)}\n\n                filterWords={reportData.interface.filter_words.source.map((filterWord) => ({\n                  word: filterWord,\n                  selected: isFilterSelected(\"source\", filterWord)\n                }))}\n                onFilterChange={(value) => switchFilter(\"source\", value.word, value.selected)}\n                onFilterFire={() => $setUpdater(Math.random())}\n\n                sortDirection={localInterface.sort.field === 'source' ? localInterface.sort.direction : undefined}\n                onSortDirectionChange={(value) => setLocalInterface({...localInterface, sort: {field: 'source', direction: value}})}\n              />\n              <ReportTableField\n                contents={(<span>Created by</span>)}\n\n                allFiltersSelected={isAllFiltersSelected(\"created_by\")}\n                onAllFiltersChange={(value) => switchFilter(\"created_by\", \"All\", value)}\n\n                filterWords={reportData.interface.filter_words.created_by.map((filterWord) => ({\n                  word: filterWord,\n                  selected: isFilterSelected(\"created_by\", filterWord)\n                }))}\n                onFilterChange={(value) => switchFilter(\"created_by\", value.word, value.selected)}\n                onFilterFire={() => $setUpdater(Math.random())}\n\n                sortDirection={localInterface.sort.field === 'created_by' ? localInterface.sort.direction : undefined}\n                onSortDirectionChange={(value) => setLocalInterface({...localInterface, sort: {field: 'created_by', direction: value}})}\n              />\n              <ReportTableField\n                contents={(<span>Appointments</span>)}\n\n                sortDirection={localInterface.sort.field === 'appointments' ? localInterface.sort.direction : undefined}\n                onSortDirectionChange={(value) => setLocalInterface({...localInterface, sort: {field: 'appointments', direction: value}})}\n\n                onFilterFire={() => $setUpdater(Math.random())}\n              />\n              <ReportTableField\n                contents={(<span>Service resource</span>)}\n\n                allFiltersSelected={isAllFiltersSelected(\"service_resource\")}\n                onAllFiltersChange={(value) => switchFilter(\"service_resource\", \"All\", value)}\n\n                filterWords={reportData.interface.filter_words.service_resource.map((filterWord) => ({\n                  word: filterWord,\n                  selected: isFilterSelected(\"service_resource\", filterWord)\n                }))}\n                onFilterChange={(value) => {switchFilter(\"service_resource\", value.word, value.selected) }}\n                onFilterFire={() => $setUpdater(Math.random())}\n\n                sortDirection={localInterface.sort.field === 'service_resource' ? localInterface.sort.direction : undefined}\n                onSortDirectionChange={(value) => setLocalInterface({...localInterface, sort: {field: 'service_resource', direction: value}})}\n              />\n              <ReportTableField\n                contents={(<span>Total</span>)}\n\n                sortDirection={localInterface.sort.field === 'total' ? localInterface.sort.direction : undefined}\n                onSortDirectionChange={(value) => setLocalInterface({...localInterface, sort: {field: 'total', direction: value}})}\n\n                onFilterFire={() => $setUpdater(Math.random())}\n              />\n              <ReportTableField\n                contents={(<span>Paid</span>)}\n\n                sortDirection={localInterface.sort.field === 'paid' ? localInterface.sort.direction : undefined}\n                onSortDirectionChange={(value) => setLocalInterface({...localInterface, sort: {field: 'paid', direction: value}})}\n\n                onFilterFire={() => $setUpdater(Math.random())}\n              />\n            </tr>\n            {reportData.jobs.map((job, i) => (\n              <tr key={i} onClick={() => $router.router.navigate('jobs.item', {\n                jobId: job.job_id\n              }, {reload: true})}>\n                <td>{job.created_at}</td>\n                <td>{job.name}</td>\n                <td>{job.status}</td>\n                <td>{job.property_type}</td>\n                <td>{job.area}</td>\n                <td>{job.source}</td>\n                <td>{job.created_by}</td>\n                <td>{job.appointments}</td>\n                <td>{job.service_resource}</td>\n                <td>{job.total}</td>\n                <td>{job.paid}</td>\n              </tr>\n            ))}\n          </table>\n\n          {/* Medum screen table */}\n          <table className={classNames('table', '__hide-on-wide', '__hide-on-mobile', {\n            __respectAsidePanel: props.store.navActive.is\n          })}>\n            <tr></tr>\n            {reportData.jobs.map((job, i) => (\n              <tr key={i} onClick={() => $router.router.navigate('jobs.item', {\n                jobId: job.job_id\n              }, {reload: true})}>\n                <td>\n                  <div>{job.name}</div>\n                  <div>{job.created_at}</div>\n                </td>\n                <td>\n                  <div>{job.created_by}</div>\n                  <div>{job.service_resource}</div>\n                </td>\n                <td>\n                  <div>{job.area}</div>\n                  <div>{job.source}</div>\n                </td>\n                <td>\n                  <div>{job.property_type}</div>\n                  <div>{job.status}</div>\n                </td>\n                <td>\n                  <div>Appointments: {job.appointments}</div>\n                  <div>&nbsp;</div>\n                </td>\n                <td>\n                  <div>Total: {job.total}</div>\n                  <div>Paid: {job.paid}</div>\n                </td>\n              </tr>\n            ))}\n          </table>\n\n          {/* Mobile table items */}\n          <div className={classNames('mobile-table-items', '__show-on-mobile', {\n            __respectAsidePanel: props.store.navActive.is\n          })}>\n\n            {reportData.jobs.map((job, i: number) => (\n              <div className=\"item\" key={i} onClick={() => $router.router.navigate('jobs.item', {\n                jobId: job.job_id\n              }, {reload: true})}>\n\n                <div className=\"__top\">\n\n                  <div className=\"__left\">\n                    <div>\n                      <strong>{job.name}</strong>\n                    </div>\n                    <div>\n                      Appointments: {job.appointments}\n                    </div>\n                  </div>\n\n                  <div className=\"__right\">\n                    <div>\n                      Paid: <b>{job.paid}</b>\n                    </div>\n                    <div>\n                      Total: <b>{job.total}</b>\n                    </div>\n                    <div>\n                      {job.property_type}\n                    </div>\n                    <div>\n                      <b>{job.status}</b>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"__bottom\">\n\n                  <div className=\"__left\">\n                    <div>\n                      <span className=\"gray\">Area:</span>\n                      <span> {job.area}</span>\n                    </div>\n                    <div>\n                      <span className=\"gray\">Source:</span>\n                      <span> {job.source}</span>\n                    </div>\n                    <div>\n                      <span className=\"gray\">Service Resourse:</span>\n                      <span> {job.service_resource}</span>\n                    </div>\n                  </div>\n\n                  <div className=\"__right small\">\n                    <div>\n                      {job.created_at}\n                    </div>\n                    <div>\n                      Created by {job.created_by}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Table controls */}\n        <ReportTableControls\n          isUnder={true}\n\n          onMaxRowsChange={() => $setUpdater(Math.random())}\n\n          amount={{\n            total: reportData.interface.rows_all,\n            start: reportData.interface.rows_start,\n            end: reportData.interface.rows_end\n          }}\n\n          page={localInterface.page}\n          maxPages={reportData.interface.max_pages}\n          onPagesStart={() => setLocalInterface({...localInterface, page: 1})}\n          onPrevPage={() => setLocalInterface({...localInterface, page: localInterface.page-1})}\n          onNextPage={() => setLocalInterface({...localInterface, page: localInterface.page+1})}\n          onPagesEnd={() => setLocalInterface({...localInterface, page: reportData.interface.max_pages})}\n          \n          sort={localInterface.sort}\n          sortFields={localInterface.sortFields}\n          onSortFieldChange={(value) => setLocalInterface({...localInterface, sort: {...localInterface.sort, field: value}})}\n          onSortDirectionChange={(value) => setLocalInterface({...localInterface, sort: {...localInterface.sort, direction: value}})}\n          onSortFire={() => $setUpdater(Math.random())}\n        />\n      </div>\n    ) : null}\n  </>)\n})\nexport default JobsPage_List\n"]},"metadata":{},"sourceType":"module"}