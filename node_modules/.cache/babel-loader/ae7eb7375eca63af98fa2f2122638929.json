{"ast":null,"code":"var _jsxFileName = \"/Users/nicole/rrrr/crm/src/pages/CallCenter/CallFlows/List.tsx\",\n    _s = $RefreshSig$();\n\nimport classNames from \"classnames\";\nimport { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { BaseLink, useRoute } from \"react-router5\";\nimport Icon from \"../../../components/Icon\";\nimport ReportFilters from \"../../../components/reports/Filters\";\nimport ReportTableControls from \"../../../components/reports/TableControls\";\nimport ReportTableField from \"../../../components/reports/TableField\";\nimport { httpClient, nError } from \"../../../funcs/base\";\nimport { mapDispatchToProps, mapStateToProps } from \"../../../store\";\nimport \"../../../styles/pages/common/report-list.sass\";\nimport qs from \"qs\";\nimport { getActiveAccount } from \"../../../funcs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CallCenter_CallFlowsPage_List = connect(mapStateToProps, mapDispatchToProps)(_s(function (props) {\n  _s();\n\n  const $router = useRoute();\n  const activeAccount = getActiveAccount(props.store);\n  const [$updater, $setUpdater] = useState(Math.random());\n  const [reportData, setReportData] = useState(null);\n  const [localInterface, setLocalInterface] = useState({\n    search: '',\n    page: 1,\n    sort: {\n      field: 'name',\n      direction: 'up'\n    },\n    sortFields: [{\n      span: 'Name',\n      value: 'name'\n    }, {\n      span: 'Groups',\n      value: 'call_groups'\n    }]\n  }); // Load callFlows function\n\n  async function loadCallFlows() {\n    httpClient.defaults.headers['Authorization'] = `Bearer ${props.store.accessToken}`;\n\n    try {\n      const {\n        data: dipsatchersReport\n      } = await httpClient.post('/callflows/report', qs.stringify({\n        account_id: activeAccount.account_id,\n        limit_rows: props.store.reportsMaxRows,\n        page: localInterface.page,\n        sort_field: localInterface.sort.field,\n        sort_type: localInterface.sort.direction === 'up' ? 'asc' : 'desc',\n        ...(localInterface.search ? {\n          search: localInterface.search\n        } : {})\n      }));\n      setReportData(dipsatchersReport);\n    } catch (error) {\n      nError(error);\n    }\n  } // Load clients on page mount\n\n\n  useEffect(() => {\n    loadCallFlows();\n  }, [$updater, localInterface.page]); // Render function\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: reportData ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"CallCenter_CallFlowsPage_List\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top-nav\",\n        children: [/*#__PURE__*/_jsxDEV(BaseLink, {\n          router: $router.router,\n          routeName: \"call_center.phoneNumbers\",\n          className: classNames({\n            _active: $router.route.name === \"call_center.phoneNumbers\"\n          }),\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            icon: \"phone-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Phone Numbers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BaseLink, {\n          router: $router.router,\n          routeName: \"call_center.dispatchers\",\n          className: classNames({\n            _active: $router.route.name === \"call_center.dispatchers\"\n          }),\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            icon: \"user-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Dispatchers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BaseLink, {\n          router: $router.router,\n          routeName: \"call_center.groups\",\n          className: classNames({\n            _active: $router.route.name === \"call_center.groups\"\n          }),\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            icon: \"user-29\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Groups\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BaseLink, {\n          router: $router.router,\n          routeName: \"call_center.callFlows\",\n          className: classNames({\n            _active: $router.route.name === \"call_center.callFlows\"\n          }),\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            icon: \"share-7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Call Flows\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BaseLink, {\n          router: $router.router,\n          routeName: \"call_center.settings\",\n          className: classNames({\n            _active: $router.route.name === \"call_center.settings\"\n          }),\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            icon: \"gear-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReportFilters, {\n        onSearchInputChange: value => setLocalInterface({ ...localInterface,\n          search: value\n        }),\n        onUpdate: () => $setUpdater(Math.random())\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReportTableControls, {\n        zIndex: 5,\n        onMaxRowsChange: () => {\n          $setUpdater(Math.random());\n        },\n        amount: {\n          total: reportData.interface.rows_all,\n          start: reportData.interface.rows_start,\n          end: reportData.interface.rows_end\n        },\n        page: localInterface.page,\n        maxPages: reportData.interface.max_pages,\n        onPagesStart: () => setLocalInterface({ ...localInterface,\n          page: 1\n        }),\n        onPrevPage: () => setLocalInterface({ ...localInterface,\n          page: localInterface.page - 1\n        }),\n        onNextPage: () => setLocalInterface({ ...localInterface,\n          page: localInterface.page + 1\n        }),\n        onPagesEnd: () => setLocalInterface({ ...localInterface,\n          page: reportData.interface.max_pages\n        }),\n        sort: localInterface.sort,\n        sortFields: localInterface.sortFields,\n        onSortFieldChange: value => setLocalInterface({ ...localInterface,\n          sort: { ...localInterface.sort,\n            field: value\n          }\n        }),\n        onSortDirectionChange: value => setLocalInterface({ ...localInterface,\n          sort: { ...localInterface.sort,\n            direction: value\n          }\n        }),\n        onSortFire: () => $setUpdater(Math.random()),\n        addButton: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-button-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"_iconed _rounded add-button\",\n            onClick: () => $router.router.navigate('call_center.callFlows.new', {}, {\n              reload: true\n            }),\n            children: [/*#__PURE__*/_jsxDEV(Icon, {\n              icon: \"plus-thin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Add Call Flow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Icon, {\n              icon: \"share-7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contents\",\n        children: [/*#__PURE__*/_jsxDEV(\"table\", {\n          className: classNames('table', '__show-on-wide', {\n            __respectAsidePanel: props.store.navActive.is\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(ReportTableField, {\n              contents: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 28\n              }, this),\n              sortDirection: localInterface.sort.field === 'name' ? localInterface.sort.direction : undefined,\n              onSortDirectionChange: value => setLocalInterface({ ...localInterface,\n                sort: {\n                  field: 'name',\n                  direction: value\n                }\n              }),\n              onFilterFire: () => $setUpdater(Math.random())\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ReportTableField, {\n              contents: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Groups\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 28\n              }, this),\n              sortDirection: localInterface.sort.field === 'call_groups' ? localInterface.sort.direction : undefined,\n              onSortDirectionChange: value => setLocalInterface({ ...localInterface,\n                sort: {\n                  field: 'call_groups',\n                  direction: value\n                }\n              }),\n              onFilterFire: () => $setUpdater(Math.random())\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this), reportData.call_flows.map((callFlow, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            onClick: () => $router.router.navigate('call_center.callFlows.item', {}, {\n              reload: true\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: callFlow.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: callFlow.call_groups\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 17\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: classNames('table', '__hide-on-wide', '__hide-on-mobile', {\n            __respectAsidePanel: props.store.navActive.is\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Groups\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this), reportData.call_flows.map((callFlow, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            onClick: () => $router.router.navigate('call_center.callFlows.item', {}, {\n              reload: true\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: callFlow.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: callFlow.call_groups\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 17\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classNames('mobile-table-items', '__show-on-mobile', {\n            __respectAsidePanel: props.store.navActive.is\n          }),\n          children: reportData.call_flows.map((callFlow, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item\",\n            onClick: () => $router.router.navigate('call_center.callFlows.item', {}, {\n              reload: true\n            }),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"__top\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"__left\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: callFlow.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 237,\n                    columnNumber: 26\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: callFlow.call_groups\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 17\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReportTableControls, {\n        isUnder: true,\n        onMaxRowsChange: () => $setUpdater(Math.random()),\n        amount: {\n          total: reportData.interface.rows_all,\n          start: reportData.interface.rows_start,\n          end: reportData.interface.rows_end\n        },\n        page: localInterface.page,\n        maxPages: reportData.interface.max_pages,\n        onPagesStart: () => setLocalInterface({ ...localInterface,\n          page: 1\n        }),\n        onPrevPage: () => setLocalInterface({ ...localInterface,\n          page: localInterface.page - 1\n        }),\n        onNextPage: () => setLocalInterface({ ...localInterface,\n          page: localInterface.page + 1\n        }),\n        onPagesEnd: () => setLocalInterface({ ...localInterface,\n          page: reportData.interface.max_pages\n        }),\n        sort: localInterface.sort,\n        sortFields: localInterface.sortFields,\n        onSortFieldChange: value => setLocalInterface({ ...localInterface,\n          sort: { ...localInterface.sort,\n            field: value\n          }\n        }),\n        onSortDirectionChange: value => setLocalInterface({ ...localInterface,\n          sort: { ...localInterface.sort,\n            direction: value\n          }\n        }),\n        onSortFire: () => $setUpdater(Math.random())\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this) : null\n  }, void 0, false);\n}, \"L7IUWJjVC7ngHNSJYsK1xcAI1m0=\", false, function () {\n  return [useRoute];\n}));\nexport default CallCenter_CallFlowsPage_List;","map":{"version":3,"sources":["/Users/nicole/rrrr/crm/src/pages/CallCenter/CallFlows/List.tsx"],"names":["classNames","useEffect","useState","connect","BaseLink","useRoute","Icon","ReportFilters","ReportTableControls","ReportTableField","httpClient","nError","mapDispatchToProps","mapStateToProps","qs","getActiveAccount","CallCenter_CallFlowsPage_List","props","$router","activeAccount","store","$updater","$setUpdater","Math","random","reportData","setReportData","localInterface","setLocalInterface","search","page","sort","field","direction","sortFields","span","value","loadCallFlows","defaults","headers","accessToken","data","dipsatchersReport","post","stringify","account_id","limit_rows","reportsMaxRows","sort_field","sort_type","error","router","_active","route","name","total","interface","rows_all","start","rows_start","end","rows_end","max_pages","navigate","reload","__respectAsidePanel","navActive","is","undefined","call_flows","map","callFlow","i","call_groups"],"mappings":"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","sourcesContent":["import axios from \"axios\"\nimport classNames from \"classnames\"\nimport { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { BaseLink, useRoute } from \"react-router5\"\nimport Checkbox from \"../../../components/Checkbox\"\nimport Icon from \"../../../components/Icon\"\nimport ReportFilters from \"../../../components/reports/Filters\"\nimport ReportTableControls from \"../../../components/reports/TableControls\"\nimport ReportTableField from \"../../../components/reports/TableField\"\nimport { httpClient, nError } from \"../../../funcs/base\"\nimport { CallCenter_CallFlow } from \"../../../models/CallCenter\"\nimport Client from \"../../../models/Client\"\nimport { StoreDispatch, StoreState, mapDispatchToProps, mapStateToProps } from \"../../../store\";\n\nimport \"../../../styles/pages/common/report-list.sass\"\nimport qs from \"qs\";\nimport {getActiveAccount} from \"../../../funcs\";\nimport Account from \"../../../models/Account\";\n\ninterface Props {\n  store: StoreState,\n  dispatcher: StoreDispatch\n}\n\ninterface CallFlowsReport {\n\n  interface: {\n\n    max_pages: number,\n    rows_start: number,\n    rows_end: number,\n    rows_all: number,\n  },\n\n  permissions: {\n    show_call_flow: boolean,\n    add_call_flow: boolean\n  },\n\n  call_flows: CallCenter_CallFlow[]\n}\n\nconst CallCenter_CallFlowsPage_List = connect(mapStateToProps, mapDispatchToProps)(function(props: Props) {\n\n  const $router = useRoute()\n\n  const activeAccount = getActiveAccount(props.store) as Account;\n  const [$updater, $setUpdater] = useState<any>(Math.random())\n\n  const [reportData, setReportData] = useState<CallFlowsReport | null>(null)\n  const [localInterface, setLocalInterface] = useState({\n\n    search: '',\n\n    page: 1,\n\n    sort: {\n      field: 'name',\n      direction: 'up' as 'up' | 'down'\n    },\n    sortFields: [{\n      span: 'Name',\n      value: 'name'\n    },{\n      span: 'Groups',\n      value: 'call_groups'\n    }]\n\n  })\n\n  // Load callFlows function\n  async function loadCallFlows() {\n\n    httpClient.defaults.headers['Authorization'] = `Bearer ${props.store.accessToken}`\n\n    try {\n      const { data: dipsatchersReport } = (await httpClient.post('/callflows/report', qs.stringify({\n        account_id: activeAccount.account_id,\n        limit_rows: props.store.reportsMaxRows,\n        page: localInterface.page,\n        sort_field: localInterface.sort.field,\n        sort_type: localInterface.sort.direction === 'up' ? 'asc' : 'desc',\n        ...(localInterface.search ? {search: localInterface.search} : {})\n      }))) as {data: CallFlowsReport}\n\n      setReportData(dipsatchersReport)\n    }\n    catch (error) {\n      nError(error)\n    }\n  }\n\n  // Load clients on page mount\n  useEffect(() => { loadCallFlows() }, [\n    $updater,\n    localInterface.page,\n  ])\n\n  // Render function\n  return (<>\n    {reportData ? (\n      <div className=\"CallCenter_CallFlowsPage_List\" >\n\n        {/* Top navigation */}\n        <div className=\"top-nav\">\n          <BaseLink router={$router.router} routeName=\"call_center.phoneNumbers\" className={classNames({_active: $router.route.name === \"call_center.phoneNumbers\"})}>\n            <Icon icon=\"phone-1\" />\n            <span>Phone Numbers</span>\n          </BaseLink>\n\n          <BaseLink router={$router.router} routeName=\"call_center.dispatchers\" className={classNames({_active: $router.route.name === \"call_center.dispatchers\"})}>\n            <Icon icon=\"user-1\" />\n            <span>Dispatchers</span>\n          </BaseLink>\n\n          <BaseLink router={$router.router} routeName=\"call_center.groups\" className={classNames({_active: $router.route.name === \"call_center.groups\"})}>\n            <Icon icon=\"user-29\" />\n            <span>Groups</span>\n          </BaseLink>\n\n          <BaseLink router={$router.router} routeName=\"call_center.callFlows\" className={classNames({_active: $router.route.name === \"call_center.callFlows\"})}>\n            <Icon icon=\"share-7\" />\n            <span>Call Flows</span>\n          </BaseLink>\n\n          <BaseLink router={$router.router} routeName=\"call_center.settings\" className={classNames({_active: $router.route.name === \"call_center.settings\"})}>\n            <Icon icon=\"gear-1\" />\n            <span>Settings</span>\n          </BaseLink>\n        </div>\n\n        { /* List filters */}\n        <ReportFilters\n          onSearchInputChange={(value) => setLocalInterface({...localInterface, search: value})}\n\n          onUpdate={() => $setUpdater(Math.random())}\n        />\n\n        {/* Table controls */}\n        <ReportTableControls\n          zIndex={5}\n\n          onMaxRowsChange={() => {\n            $setUpdater(Math.random())\n          }}\n\n          amount={{\n            total: reportData.interface.rows_all,\n            start: reportData.interface.rows_start,\n            end: reportData.interface.rows_end\n          }}\n\n          page={localInterface.page}\n          maxPages={reportData.interface.max_pages}\n          onPagesStart={() => setLocalInterface({...localInterface, page: 1})}\n          onPrevPage={() => setLocalInterface({...localInterface, page: localInterface.page-1})}\n          onNextPage={() => setLocalInterface({...localInterface, page: localInterface.page+1})}\n          onPagesEnd={() => setLocalInterface({...localInterface, page: reportData.interface.max_pages})}\n          \n          sort={localInterface.sort}\n          sortFields={localInterface.sortFields}\n          onSortFieldChange={(value) => setLocalInterface({...localInterface, sort: {...localInterface.sort, field: value}})}\n          onSortDirectionChange={(value) => setLocalInterface({...localInterface, sort: {...localInterface.sort, direction: value}})}\n          onSortFire={() => $setUpdater(Math.random())}\n\n          addButton={(\n            <div className=\"add-button-wrapper\">\n              <button className=\"_iconed _rounded add-button\" onClick={() => $router.router.navigate('call_center.callFlows.new', {}, {reload: true})}>\n                <Icon icon=\"plus-thin\" />\n                <span>Add Call Flow</span>\n                <Icon icon=\"share-7\" />\n              </button>\n            </div>\n          )}\n        />\n\n        <div className=\"contents\">\n\n          {/* Wide desktop table */}\n          <table className={classNames('table', '__show-on-wide', {\n            __respectAsidePanel: props.store.navActive.is\n          })}>\n            <tr>\n              <ReportTableField\n                contents={(<span>Name</span>)}\n\n                sortDirection={localInterface.sort.field === 'name' ? localInterface.sort.direction : undefined}\n                onSortDirectionChange={(value) => setLocalInterface({...localInterface, sort: {field: 'name', direction: value}})}\n\n                onFilterFire={() => $setUpdater(Math.random())}\n              />\n              <ReportTableField\n                contents={(<span>Groups</span>)}\n\n                sortDirection={localInterface.sort.field === 'call_groups' ? localInterface.sort.direction : undefined}\n                onSortDirectionChange={(value) => setLocalInterface({...localInterface, sort: {field: 'call_groups', direction: value}})}\n\n                onFilterFire={() => $setUpdater(Math.random())}\n              />\n            </tr>\n            {reportData.call_flows.map((callFlow, i) => (\n              <tr key={i} onClick={() => $router.router.navigate('call_center.callFlows.item', {}, {reload: true})}>\n                <td>{callFlow.name}</td>\n                <td>{callFlow.call_groups}</td>\n              </tr>\n            ))}\n          </table>\n\n          {/* Medium screen table */}\n          <table className={classNames('table', '__hide-on-wide', '__hide-on-mobile', {\n            __respectAsidePanel: props.store.navActive.is\n          })}>\n            <tr>\n              <th>Name</th>\n              <th>Groups</th>\n            </tr>\n            {reportData.call_flows.map((callFlow, i) => (\n              <tr key={i} onClick={() => $router.router.navigate('call_center.callFlows.item', {}, {reload: true})}>\n                <td>{callFlow.name}</td>\n                <td>{callFlow.call_groups}</td>\n              </tr>\n            ))}\n          </table>\n\n          {/* Mobile table items */}\n          <div className={classNames('mobile-table-items', '__show-on-mobile', {\n            __respectAsidePanel: props.store.navActive.is\n          })}>\n\n            {reportData.call_flows.map((callFlow, i: number) => (\n              <div className=\"item\" key={i} onClick={() => $router.router.navigate('call_center.callFlows.item', {}, {reload: true})}>\n\n                <div className=\"__top\">\n\n                  <div className=\"__left\">\n                    <div><b>{callFlow.name}</b></div>\n                    <div>\n                      {callFlow.call_groups}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Table controls */}\n        <ReportTableControls\n          isUnder={true}\n\n          onMaxRowsChange={() => $setUpdater(Math.random())}\n\n          amount={{\n            total: reportData.interface.rows_all,\n            start: reportData.interface.rows_start,\n            end: reportData.interface.rows_end\n          }}\n\n          page={localInterface.page}\n          maxPages={reportData.interface.max_pages}\n          onPagesStart={() => setLocalInterface({...localInterface, page: 1})}\n          onPrevPage={() => setLocalInterface({...localInterface, page: localInterface.page-1})}\n          onNextPage={() => setLocalInterface({...localInterface, page: localInterface.page+1})}\n          onPagesEnd={() => setLocalInterface({...localInterface, page: reportData.interface.max_pages})}\n          \n          sort={localInterface.sort}\n          sortFields={localInterface.sortFields}\n          onSortFieldChange={(value) => setLocalInterface({...localInterface, sort: {...localInterface.sort, field: value}})}\n          onSortDirectionChange={(value) => setLocalInterface({...localInterface, sort: {...localInterface.sort, direction: value}})}\n          onSortFire={() => $setUpdater(Math.random())}\n        />\n      </div>\n    ) : null}\n  </>)\n})\nexport default CallCenter_CallFlowsPage_List\n"]},"metadata":{},"sourceType":"module"}