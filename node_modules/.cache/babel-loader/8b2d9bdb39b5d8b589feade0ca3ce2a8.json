{"ast":null,"code":"var _jsxFileName = \"/Users/nicole/rrrr/crm/src/pages/Auth.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport Icon from \"../components/Icon\";\nimport { httpClient, nError } from \"../funcs\";\nimport businessAccountIconImg from \"../images/business-account_icon.svg\";\nimport logoImg from \"../images/logo.svg\";\nimport { mapDispatchToProps, mapStateToProps } from \"../store\";\nimport \"../styles/pages/auth.sass\";\nimport qs from \"qs\";\nimport { useRoute } from \"react-router5\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthPage = connect(mapStateToProps, mapDispatchToProps)(_s(function AuthPage(props) {\n  var _authData$accounts;\n\n  _s();\n\n  const $router = useRoute();\n  const [mode, setMode] = useState($router.route.params.mode);\n  const [errorText, setErrorText] = useState(null);\n  const [authData, setAuthData] = useState({\n    accessToken: null,\n    accounts: [],\n    selectedAccount: null,\n    user: null\n  });\n  const [authForm, setAuthForm] = useState({\n    email: \"\",\n    password: \"\"\n  }); // Auth function\n\n  async function auth() {\n    // Reset error text\n    setErrorText(null); // Fetch form data\n\n    const {\n      email,\n      password\n    } = authForm;\n    console.log(email);\n    console.log(password);\n    console.log(authForm);\n\n    try {\n      // Validate input data\n      const validationErrors = [{\n        displayFieldText: \"E-Mail\",\n        entity: email,\n        rule: \"email\"\n      }, {\n        displayFieldText: \"Password\",\n        entity: password,\n        rule: \"password\"\n      }]; // Perform autorization\n\n      const {\n        data: {\n          token: accessToken\n        }\n      } = await httpClient.post('/login', qs.stringify(authForm), {\n        headers: {\n          'Accept': 'application/json'\n        }\n      });\n      console.log(accessToken);\n      httpClient.defaults.headers['Authorization'] = `Bearer ${accessToken}`; // Get accounts list\n\n      const {\n        data: {\n          accounts\n        }\n      } = await httpClient.get('/accounts'); // Save info\n\n      setAuthData({\n        accessToken: accessToken,\n        accounts\n      }); // Show select account menu\n\n      $router.router.navigate('auth', {\n        mode: \"account-select\"\n      }, {\n        reload: true\n      });\n    } catch (error) {\n      console.log(error);\n      setErrorText(nError(error).content.errorText);\n    } finally {\n      setAuthForm({ ...authForm\n      });\n    }\n  } // Select account function\n\n\n  async function selectAccount(i) {\n    props.dispatcher.setAccessToken(authData.accessToken);\n    props.dispatcher.setAccounts(authData.accounts);\n    props.dispatcher.setSelectedAccount(i);\n    httpClient.defaults.headers['Authorization'] = `Bearer ${props.store.accessToken}`;\n  } // Handle mode\n\n\n  useEffect(() => {\n    setMode($router.route.params.mode);\n  }, [$router.route.params.mode]); // Handle account select on page mount\n\n  useEffect(() => {\n    if (props.store.accessToken) {\n      httpClient.get('/accounts').then(_ref => {\n        let {\n          data: {\n            accounts\n          }\n        } = _ref;\n        setAuthData({ ...authData,\n          accessToken: props.store.accessToken,\n          accounts\n        });\n      });\n    }\n  }, []); // Render function\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"AuthPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ProjectHeaders\",\n      onClick: () => mode != 'account-select' && $router.router.navigate('auth', {\n        mode: 'auth'\n      }, {\n        reload: true\n      }),\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logoImg,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"headers\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Expert @ FS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Manage your business!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-wrapper\",\n      children: [mode === \"auth\" ? /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n          auth();\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"__form-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"label\",\n            children: \"E-Mail:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: _ref2 => {\n              let {\n                target: {\n                  value\n                }\n              } = _ref2;\n              return setAuthForm({ ...authForm,\n                email: value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"__form-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"label\",\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            onChange: _ref3 => {\n              let {\n                target: {\n                  value\n                }\n              } = _ref3;\n              return setAuthForm({ ...authForm,\n                password: value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this), errorText ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"errorText\",\n          children: errorText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 15\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"_zeroed password-reset-link\",\n          onClick: () => $router.router.navigate('auth', {\n            mode: 'password-reset'\n          }, {\n            reload: true\n          }),\n          children: \"Forgot password?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"_wa __submit\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this) : null, mode === \"password-reset\" ? /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => e.preventDefault(),\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Enter your E-Mail and we will send the link:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"__form-field\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Your E-Mail...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"_wa __submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this) : null, mode === \"account-select\" ? /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => e.preventDefault(),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"account-select\",\n          children: (_authData$accounts = authData.accounts) === null || _authData$accounts === void 0 ? void 0 : _authData$accounts.map((account, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"account\",\n            onClick: () => selectAccount(i),\n            \"aria-hidden\": \"true\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: businessAccountIconImg,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: account.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stats-signs\",\n              children: [/*#__PURE__*/_jsxDEV(Icon, {\n                icon: \"bell-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Icon, {\n                icon: \"help-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 19\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n}, \"hvFaHmZYKiHYJJr4dPDLUB1gRA0=\", false, function () {\n  return [useRoute];\n}));\nexport default AuthPage;","map":{"version":3,"sources":["/Users/nicole/rrrr/crm/src/pages/Auth.tsx"],"names":["React","useEffect","useState","connect","Icon","httpClient","nError","mapDispatchToProps","mapStateToProps","qs","useRoute","AuthPage","props","$router","mode","setMode","route","params","errorText","setErrorText","authData","setAuthData","accessToken","accounts","selectedAccount","user","authForm","setAuthForm","email","password","auth","console","log","validationErrors","displayFieldText","entity","rule","data","token","post","stringify","headers","defaults","get","router","navigate","reload","error","content","selectAccount","i","dispatcher","setAccessToken","setAccounts","setSelectedAccount","store","then","logoImg","e","preventDefault","target","value","map","account","businessAccountIconImg","name"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport Icon from \"../components/Icon\"\nimport { httpClient, nError } from \"../funcs\"\nimport businessAccountIconImg from \"../images/business-account_icon.svg\"\n\nimport logoImg from \"../images/logo.svg\"\n\nimport Account from \"../models/Account\"\nimport { StoreDispatch, StoreState, mapDispatchToProps, mapStateToProps } from \"../store\";\n\nimport \"../styles/pages/auth.sass\"\nimport { validateMany } from \"../validate\"\n\nimport qs from \"qs\"\nimport { useRoute } from \"react-router5\"\nimport User from \"../models/User\"\nimport Menus from \"../models/Menus\"\n\n\ninterface Props {\n  store: StoreState,\n  dispatcher: StoreDispatch\n}\n\nconst AuthPage = connect(mapStateToProps, mapDispatchToProps)(function AuthPage(props: Props) {\n\n  const $router = useRoute()\n\n  const [mode, setMode] = useState<\"auth\" | \"password-reset\" | \"account-select\">($router.route.params.mode)\n  const [errorText, setErrorText] = useState<string | null>(null)\n  const [authData, setAuthData] = useState<Partial<StoreState>>({\n    accessToken: null,\n    accounts: [],\n    selectedAccount: null,\n    user: null\n  })\n  const [authForm, setAuthForm] = useState({\n\n\n    email: \"\",\n    password: \"\"\n  })\n\n  // Auth function\n  async function auth() {\n\n    // Reset error text\n    setErrorText(null)\n\n\n\n    // Fetch form data\n    const { email, password } = authForm\n    console.log(email)\n    console.log(password)\n    console.log(authForm)\n    try {\n\n      // Validate input data\n      const validationErrors = ([\n        { displayFieldText: \"E-Mail\", entity: email, rule: \"email\" },\n        { displayFieldText: \"Password\", entity: password, rule: \"password\" }\n      ])\n\n\n      // Perform autorization\n      const { data: { token: accessToken } } = await httpClient.post('/login', qs.stringify(authForm), {\n        headers: {\n          'Accept': 'application/json',\n        }\n      })\n      console.log(accessToken)\n      httpClient.defaults.headers['Authorization'] = `Bearer ${accessToken}`\n\n      // Get accounts list\n      const { data: { accounts }} = await httpClient.get('/accounts')\n\n      // Save info\n      setAuthData({\n        accessToken: accessToken,\n        accounts\n      })\n\n      // Show select account menu\n      $router.router.navigate('auth', {\n        mode: \"account-select\"\n      }, {reload: true})\n    }\n    catch (error) {\n      console.log(error)\n      setErrorText(nError(error).content.errorText)\n    }\n    finally {\n      setAuthForm({ ...authForm})\n    }\n  }\n\n  // Select account function\n  async function selectAccount(i: number) {\n\n    props.dispatcher.setAccessToken(authData.accessToken as string | null)\n    props.dispatcher.setAccounts(authData.accounts as Account[])\n    props.dispatcher.setSelectedAccount(i)\n\n    httpClient.defaults.headers['Authorization'] = `Bearer ${props.store.accessToken}`\n  }\n\n  // Handle mode\n  useEffect(() => {\n    setMode($router.route.params.mode)\n  }, [$router.route.params.mode])\n\n  // Handle account select on page mount\n  useEffect(() => {\n    \n    if (props.store.accessToken) {\n      httpClient.get('/accounts').then(({ data: { accounts }}) => {\n        setAuthData({\n          ...authData,\n          accessToken: props.store.accessToken,\n          accounts\n        })\n      })\n    }\n  }, [])\n\n  // Render function\n  return (\n    <div className=\"AuthPage\">\n      \n      { /* Project about */ }\n      <div className=\"ProjectHeaders\" onClick={ () => mode != 'account-select' && $router.router.navigate('auth', {mode: 'auth'}, {reload: true}) }>\n        <img src={ logoImg } alt=\"\" />\n\n        <div className=\"headers\">\n          <h1>Expert @ FS</h1>\n          <h2>Manage your business!</h2>\n        </div>\n      </div>\n\n      { /* Auth wrapper */ }\n      <div className=\"auth-wrapper\">\n\n        { /* Auth form */ }\n        { mode === \"auth\" ? (\n          <form onSubmit={ (e) => {e.preventDefault(); auth()} }>\n            <h2>Sign In</h2>\n\n            <div className=\"__form-field\">\n              <div className=\"label\">E-Mail:</div>\n              <input type=\"text\" onChange={ ({ target: { value } }) => setAuthForm({ ...authForm, email: value }) } />\n            </div>\n            <div className=\"__form-field\">\n              <div className=\"label\">Password:</div>\n              <input\n                type=\"password\"\n                onChange={ ({ target: { value } }) => setAuthForm({ ...authForm, password: value }) }\n              />\n            </div>\n\n            { errorText ? (\n              <div className=\"errorText\">{ errorText }</div>\n            ) : null }\n\n            <button\n              type=\"button\"\n              className=\"_zeroed password-reset-link\"\n              onClick={ () => $router.router.navigate('auth', {mode: 'password-reset'}, {reload: true}) }\n            >\n              Forgot password?\n            </button>\n\n            <button className=\"_wa __submit\" >\n              Sign In\n            </button>\n          </form>\n        ) : null }\n        \n        { /* Password reset form */ }\n        { mode === \"password-reset\" ? (\n          <form onSubmit={ (e) => e.preventDefault() }>\n            <h2>Reset Password</h2>\n\n            <p>\n              Enter your E-Mail and we will send the link:\n            </p>\n\n            <div className=\"__form-field\">\n              <input type=\"text\" placeholder=\"Your E-Mail...\" />\n            </div>\n\n            <button className=\"_wa __submit\">\n              Submit\n            </button>\n          </form>\n        ) : null }\n        \n        { /* Select account form */ }\n        { mode === \"account-select\" ? (\n          <form onSubmit={ (e) => e.preventDefault() }>\n\n            <div className=\"account-select\">\n\n              { authData.accounts?.map((account, i) => (\n                <div className=\"account\" key={ i } onClick={ () => selectAccount(i) } aria-hidden=\"true\">\n                  <img src={ businessAccountIconImg } alt=\"\" />\n                  <span>{ account.name }</span>\n\n                  <div className=\"stats-signs\">\n                    <Icon icon=\"bell-1\"/>\n                    <Icon icon=\"help-1\"/>\n                  </div>\n                </div>\n              )) }\n            </div>\n          </form>\n        ) : null }\n      </div>\n    </div>\n  )\n})\nexport default AuthPage\n"]},"metadata":{},"sourceType":"module"}