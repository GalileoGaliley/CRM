{"ast":null,"code":"var _jsxFileName = \"/Users/nicole/rrrr/crm/src/pages/AccountPermissions/Item.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport Icon from \"../../components/Icon\";\nimport { nError } from \"../../funcs\";\nimport { mapDispatchToProps, mapStateToProps } from \"../../store\";\nimport \"../../styles/pages/common/entity-edit.sass\";\nimport Select from \"../../components/Select\";\nimport Checkbox from \"../../components/Checkbox\";\nimport { useRoute } from \"react-router5\";\nimport classNames from \"classnames\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AccountPermissionsPage_Item = connect(mapStateToProps, mapDispatchToProps)(_s(function (props) {\n  _s();\n\n  const [readyToSave, setReadyToSave] = useState(false);\n  const $router = useRoute();\n  const [deleting, setDeleting] = useState(false);\n  const [readyToDelete, setReadyToDelete] = useState(false);\n  const [permissionData, setAccountPermissionData] = useState(null);\n  const [selectedAction, setSelectedAction] = useState('');\n  const [newAccountPermissionData, setNewAccountPermissionData] = useState({\n    name: '',\n    accounts: '',\n    actions: []\n  });\n  const [availableActions, setAvailableActions] = useState([]); // Load info function\n\n  async function loadInfo() {\n    try {\n      const {\n        data: permissionData\n      } = await axios.get('/json/account_permission.json');\n\n      let _availableActions = [''].concat(permissionData.edit.actions.filter(action => !permissionData.permission.actions.includes(action)));\n\n      setAccountPermissionData(permissionData);\n      setAvailableActions(_availableActions);\n      setSelectedAction(_availableActions[0]);\n      setNewAccountPermissionData({ ...newAccountPermissionData,\n        actions: permissionData.permission.actions\n      });\n      setTimeout(() => setReadyToSave(false), 100);\n    } catch (error) {\n      nError(error);\n    }\n  } // Load permission data\n\n\n  useEffect(() => {\n    loadInfo();\n  }, []); // Add action function\n\n  function addAction() {\n    if (!newAccountPermissionData.actions || !permissionData || !newAccountPermissionData) return;\n    setNewAccountPermissionData({ ...newAccountPermissionData,\n      actions: [...newAccountPermissionData.actions, selectedAction]\n    });\n    let _availableActions = [...(permissionData === null || permissionData === void 0 ? void 0 : permissionData.edit.actions)];\n    _availableActions = permissionData.edit.actions.filter(action => !newAccountPermissionData.actions.includes(action));\n\n    _availableActions.splice(_availableActions.findIndex(_action => selectedAction === _action), 1);\n\n    setAvailableActions([..._availableActions]);\n    setSelectedAction('');\n    setReadyToSave(true);\n  } // Remove action function\n\n\n  function removeAction(i) {\n    let _permissionActions = [...newAccountPermissionData.actions];\n    let _action = _permissionActions[i];\n\n    _permissionActions.splice(i, 1);\n\n    setNewAccountPermissionData({ ...newAccountPermissionData,\n      actions: _permissionActions\n    });\n    setAvailableActions([...availableActions, _action]);\n    setReadyToSave(true);\n  }\n\n  useEffect(() => setReadyToSave(true), [newAccountPermissionData]); // Render function\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: permissionData && newAccountPermissionData ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"AccountPermissionsPage_Item entity-edit\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrapper flex-container sb\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-container _gap-narrow\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Account`s Permission:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item-name\",\n            children: permissionData.permission.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fieldset\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend\",\n          children: \"Main\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fields\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"__left\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                defaultValue: permissionData.permission.name,\n                onChange: _ref => {\n                  let {\n                    target: {\n                      value\n                    }\n                  } = _ref;\n                  return setNewAccountPermissionData({ ...newAccountPermissionData,\n                    name: value\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fieldset\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-container sb wrap\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend\",\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-action-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Action:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(Select, {\n                options: availableActions.map(action => ({\n                  span: action,\n                  value: action\n                })),\n                selectedOption: selectedAction,\n                onChange: value => setSelectedAction(value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                disabled: !selectedAction,\n                className: \"_green\",\n                onClick: () => addAction(),\n                children: \"Add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table som\",\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                width: '100%'\n              },\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Allow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this), newAccountPermissionData.actions.map((action, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: action\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                contents: '',\n                value: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"_zeroed _iconed _red\",\n                onClick: () => removeAction(i),\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  icon: \"x-mark-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 17\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fieldset\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend\",\n          children: \"Info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fields\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"__left\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Date Created:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                defaultValue: newAccountPermissionData.created_at,\n                disabled: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Created by:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                defaultValue: newAccountPermissionData.created_by,\n                disabled: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"__right\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Last Edited:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                defaultValue: newAccountPermissionData.last_edited_at,\n                disabled: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Last Edited By:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                defaultValue: newAccountPermissionData.last_edited_by,\n                disabled: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fieldset\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend\",\n          children: \"Accounts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table\",\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Owner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this), permissionData.accounts.map((account, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: account.Name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: account.owner\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: classNames({\n                'red-text': account.status === 'Inactive',\n                'green-text': account.status === 'Active',\n                'blue-text': !['Inactive', 'Active'].includes(account.status)\n              }),\n              children: account.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 17\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrapper flex-container sb editing-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"_red\",\n            onClick: () => setDeleting(true),\n            children: \"Delete Account`s Permission\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"_bordered _red\",\n            onClick: () => $router.router.navigate('accounts_permissions', {}, {\n              reload: true\n            }),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: !readyToSave,\n            className: \"_bordered _green\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), deleting ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item-delete-popup\",\n        onClick: () => setDeleting(false),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wrapper\",\n          onClick: e => e.stopPropagation(),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title\",\n            children: \"Delete Account`s Permission\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"checkbox-wrapper\",\n            children: /*#__PURE__*/_jsxDEV(Checkbox, {\n              contents: \"I understand that after deleting the account`s permission it will not be possible to recover.\",\n              value: readyToDelete,\n              onChange: value => setReadyToDelete(value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"_bordered _green\",\n              onClick: () => setDeleting(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              disabled: !readyToDelete,\n              className: \"_bordered _red\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this) : null\n  }, void 0, false);\n}, \"y8rvEWBOhNyIJoC1xnQT5zr76xU=\", false, function () {\n  return [useRoute];\n}));\nexport default AccountPermissionsPage_Item;","map":{"version":3,"sources":["/Users/nicole/rrrr/crm/src/pages/AccountPermissions/Item.tsx"],"names":["axios","React","useEffect","useState","connect","Icon","nError","mapDispatchToProps","mapStateToProps","Select","Checkbox","useRoute","classNames","AccountPermissionsPage_Item","props","readyToSave","setReadyToSave","$router","deleting","setDeleting","readyToDelete","setReadyToDelete","permissionData","setAccountPermissionData","selectedAction","setSelectedAction","newAccountPermissionData","setNewAccountPermissionData","name","accounts","actions","availableActions","setAvailableActions","loadInfo","data","get","_availableActions","concat","edit","filter","action","permission","includes","setTimeout","error","addAction","splice","findIndex","_action","removeAction","i","_permissionActions","target","value","map","span","width","created_at","created_by","last_edited_at","last_edited_by","account","Name","owner","status","router","navigate","reload","e","stopPropagation"],"mappings":"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","sourcesContent":["import axios from \"axios\"\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport Icon from \"../../components/Icon\"\nimport { nError } from \"../../funcs\"\nimport AccountPermission from \"../../models/AccountPermission\"\nimport { StoreDispatch, StoreState, mapDispatchToProps, mapStateToProps } from \"../../store\";\nimport Datetime from 'react-datetime'\n\nimport \"../../styles/pages/common/entity-edit.sass\"\nimport moment from \"moment\"\nimport Select from \"../../components/Select\"\nimport Checkbox from \"../../components/Checkbox\"\nimport { useRoute } from \"react-router5\"\nimport PermissionAccount from \"../../models/PermissionAccount\"\nimport classNames from \"classnames\"\n\ninterface Props {\n  store: StoreState,\n  dispatcher: StoreDispatch\n}\n\ninterface AccountPermissionData {\n\n\tpermissions: {\n\t\tedit_account_permission: boolean,\n\t\tshow_account: boolean\n  },\n  \n  permission: AccountPermission,\n  \n  accounts: PermissionAccount[],\n  \n\tedit: {\n\t\tactions: string[]\n\t}\n}\n\nconst AccountPermissionsPage_Item = connect(mapStateToProps, mapDispatchToProps)(function(props: Props) {\n\n  const [readyToSave, setReadyToSave] = useState(false)\n\n  const $router = useRoute()\n\n  const [deleting, setDeleting] = useState(false)\n  const [readyToDelete, setReadyToDelete] = useState(false)\n  \n  const [permissionData, setAccountPermissionData] = useState<AccountPermissionData | null>(null)\n\n  const [selectedAction, setSelectedAction] = useState<string>('')\n\n  const [newAccountPermissionData, setNewAccountPermissionData] = useState<Partial<AccountPermission>>({\n    name: '',\n    accounts: '',\n    actions: [] as string[]\n  })\n\n  const [availableActions, setAvailableActions] = useState<string[]>([])\n\n  // Load info function\n  async function loadInfo() {\n    try {\n      const { data: permissionData } = (await axios.get('/json/account_permission.json')) as {data: AccountPermissionData}\n\n      let _availableActions = [''].concat(permissionData.edit.actions.filter((action) => !permissionData.permission.actions.includes(action)))\n\n      setAccountPermissionData(permissionData)\n      setAvailableActions(_availableActions)\n      setSelectedAction(_availableActions[0])\n      setNewAccountPermissionData({\n        ...newAccountPermissionData,\n        actions: permissionData.permission.actions\n      })\n\n      setTimeout(() => setReadyToSave(false), 100)\n    }\n    catch (error) {\n      nError(error)\n    }\n  }\n\n  // Load permission data\n  useEffect(() => {\n    loadInfo()\n  }, [])\n\n  // Add action function\n  function addAction() {\n\n    if(!newAccountPermissionData.actions || !permissionData || !newAccountPermissionData) return\n\n    setNewAccountPermissionData({\n      ...newAccountPermissionData,\n      actions: [\n        ...newAccountPermissionData.actions,\n        selectedAction\n      ]\n    })\n\n    let _availableActions = [...permissionData?.edit.actions]\n\n    _availableActions = permissionData.edit.actions.filter((action) => !(newAccountPermissionData.actions as string[]).includes(action))\n    _availableActions.splice(_availableActions.findIndex((_action) => selectedAction === _action), 1)\n\n    setAvailableActions([\n      ..._availableActions\n    ])\n\n    setSelectedAction('')\n\n    setReadyToSave(true)\n  }\n\n  // Remove action function\n  function removeAction(i: number) {\n\n    let _permissionActions = [...(newAccountPermissionData.actions as string[])]\n\n    let _action = _permissionActions[i]\n    \n    _permissionActions.splice(i, 1)\n\n    setNewAccountPermissionData({\n      ...newAccountPermissionData,\n      actions: _permissionActions\n    })\n\n    setAvailableActions([\n      ...availableActions,\n      _action\n    ])\n\n    setReadyToSave(true)\n  }\n\n  useEffect(() => setReadyToSave(true), [\n    newAccountPermissionData\n  ])\n  \n  // Render function\n  return (<>\n    {permissionData && newAccountPermissionData ? (\n      <div className=\"AccountPermissionsPage_Item entity-edit\">\n\n        <div className=\"wrapper flex-container sb\">\n          <div className=\"flex-container _gap-narrow\">\n            <h1>Account`s Permission:</h1>\n            <div className=\"item-name\">\n              {permissionData.permission.name}\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"fieldset\">\n          \n          <div className=\"legend\">Main</div>\n\n          <div className=\"fields\">\n\n            <div className=\"__left\">\n              <div className=\"field\">\n                <span>Name:</span>\n                <input type=\"text\" defaultValue={permissionData.permission.name} onChange={({target: {value}}) => setNewAccountPermissionData({...newAccountPermissionData, name: value})} />\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"fieldset\">\n\n          <div className=\"flex-container sb wrap\">\n            <div className=\"legend\">Actions</div>\n\n            <div className=\"legend-action-wrapper\">\n              <label>Action:</label>\n              <div className=\"input-wrapper\">\n                <Select options={availableActions.map((action) => ({\n                  span: action,\n                  value: action\n                }))} selectedOption={selectedAction} onChange={(value) => setSelectedAction(value as string)}/>\n                <button disabled={!selectedAction} className=\"_green\" onClick={() => addAction()}>\n                  Add\n                </button>\n              </div>\n            </div>\n          </div>\n\n          <table className=\"table som\">\n            <tr>\n              <th style={{width: '100%'}}>Action</th>\n              <th>Allow</th>\n              <th></th>\n            </tr>\n            {(newAccountPermissionData.actions as string[]).map((action, i) => (\n              <tr key={i}>\n                <td>{action}</td>\n                <td>\n                  <Checkbox contents={''} value={true} />\n                </td>\n                <td>\n                  <button className=\"_zeroed _iconed _red\" onClick={() => removeAction(i)}>\n                    <Icon icon=\"x-mark-1\" />\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </table>\n        </div>\n\n        <div className=\"fieldset\">\n          \n          <div className=\"legend\">Info</div>\n\n          <div className=\"fields\">\n\n            <div className=\"__left\">\n              <div className=\"field\">\n                <span>Date Created:</span>\n                <input type=\"text\" defaultValue={newAccountPermissionData.created_at} disabled={ true } />\n              </div>\n\n              <div className=\"field\">\n                <span>Created by:</span>\n                <input type=\"text\" defaultValue={newAccountPermissionData.created_by} disabled={ true } />\n              </div>\n            </div>\n\n            \n            <div className=\"__right\">\n\n              <div className=\"field\">\n                <span>Last Edited:</span>\n                <input type=\"text\" defaultValue={newAccountPermissionData.last_edited_at} disabled={ true } />\n              </div>\n\n              <div className=\"field\">\n                <span>Last Edited By:</span>\n                <input type=\"text\" defaultValue={newAccountPermissionData.last_edited_by} disabled={ true } />\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"fieldset\">\n\n          <div className=\"legend\">Accounts</div>\n\n          <table className=\"table\">\n            <tr>\n              <th>Name</th>\n              <th>Owner</th>\n              <th>Status</th>\n            </tr>\n            {permissionData.accounts.map((account, i) => (\n              <tr key={i}>\n                <td>{account.Name}</td>\n                <td>{account.owner}</td>\n                <td className={classNames({\n                  'red-text': account.status === 'Inactive',\n                  'green-text': account.status === 'Active',\n                  'blue-text': !['Inactive', 'Active'].includes(account.status)\n                })}>{account.status}</td>\n              </tr>\n            ))}\n          </table>\n        </div>\n\n        <div className=\"wrapper flex-container sb editing-buttons\">\n          <div>\n            <button className=\"_red\" onClick={() => setDeleting(true)}>Delete Account`s Permission</button>\n          </div>\n          <div className=\"buttons\">\n            <button className=\"_bordered _red\" onClick={() => $router.router.navigate('accounts_permissions', {}, {\n              reload: true\n            })}>\n              Cancel\n            </button>\n            <button disabled={!readyToSave} className=\"_bordered _green\">\n              Save\n            </button>\n          </div>\n        </div>\n\n        {/* Item delete popup */}\n        {deleting ? (\n          <div className=\"item-delete-popup\" onClick={() => setDeleting(false)}>\n\n            <div className=\"wrapper\" onClick={(e) => e.stopPropagation()}>\n            \n              <div className=\"title\">\n                Delete Account`s Permission\n              </div>\n\n              <div className=\"checkbox-wrapper\">\n                <Checkbox contents=\"I understand that after deleting the account`s permission it will not be possible to recover.\" value={readyToDelete} onChange={(value) => setReadyToDelete(value)} />\n              </div>\n\n              <div className=\"buttons\">\n\n                <button className=\"_bordered _green\" onClick={() => setDeleting(false)}>\n                  Cancel\n                </button>\n\n                <button disabled={!readyToDelete} className=\"_bordered _red\">\n                  Delete\n                </button>\n              </div>\n            </div>\n          </div>\n        ) : null}\n      </div>\n    ) : null}\n  </>)\n})\nexport default AccountPermissionsPage_Item\n"]},"metadata":{},"sourceType":"module"}