{"ast":null,"code":"var _jsxFileName = \"/Users/nicole/rrrr/crm/src/pages/Clients/List.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport classNames from \"classnames\";\nimport { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useRoute } from \"react-router5\";\nimport Icon from \"../../components/Icon\";\nimport ReportFilters from \"../../components/reports/Filters\";\nimport ReportTableControls from \"../../components/reports/TableControls\";\nimport ReportTableField from \"../../components/reports/TableField\";\nimport { nError } from \"../../funcs\";\nimport { mapDispatchToProps, mapStateToProps } from \"../../store\";\nimport \"../../styles/pages/common/report-list.sass\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ClientsPage_List = connect(mapStateToProps, mapDispatchToProps)(_s(function (props) {\n  _s();\n\n  const $router = useRoute();\n  const [$updater, $setUpdater] = useState(Math.random());\n  const [reportData, setReportData] = useState(null);\n  const [localInterface, setLocalInterface] = useState({\n    search: '',\n    page: 1,\n    max_rows: 100,\n    filter_words: {\n      source: []\n    },\n    sort: {\n      field: 'name',\n      direction: 'up'\n    },\n    sortFields: [{\n      span: 'Name',\n      value: 'name'\n    }, {\n      span: 'Main Phone',\n      value: 'main_phone'\n    }, {\n      span: 'Source',\n      value: 'source'\n    }, {\n      span: 'Jobs',\n      value: 'jobs'\n    }, {\n      span: 'Appointments',\n      value: 'appointments'\n    }, {\n      span: 'Recalls',\n      value: 'recalls'\n    }, {\n      span: 'Total',\n      value: 'total'\n    }, {\n      span: 'Paid',\n      value: 'paid'\n    }, {\n      span: 'Unpaid',\n      value: 'unpaid'\n    }]\n  }); // Load clients function\n\n  async function loadClients() {\n    try {\n      const {\n        data: clients\n      } = await axios.get('/json/clients.json');\n      setReportData(clients);\n    } catch (error) {\n      nError(error);\n    }\n  } // Load clients on page mount\n\n\n  useEffect(() => {\n    loadClients();\n  }, [$updater, localInterface.page]); // Is filter selected function\n\n  function isFilterSelected(field, value) {\n    return localInterface.filter_words[field].includes(value);\n  }\n\n  function isAllFiltersSelected(field) {\n    return localInterface.filter_words[field].length === 0;\n  }\n\n  function switchFilter(field, value, toggle) {\n    let _arr = [...localInterface.filter_words[field]];\n\n    if (toggle && value === \"All\") {\n      _arr = [];\n    } else if (!toggle) {\n      while (true) {\n        let i = _arr.findIndex(filter => filter === value);\n\n        if (i === -1) break;\n\n        _arr.splice(i, 1);\n      }\n    } else {\n      if (reportData !== null && reportData !== void 0 && reportData.interface.filter_words[field].every(option => _arr.concat([value]).includes(option))) _arr = [];else if (_arr.findIndex(filter => filter === value) === -1) _arr.push(value);\n    }\n\n    setLocalInterface({ ...localInterface,\n      filter_words: { ...localInterface.filter_words,\n        [field]: _arr\n      }\n    });\n  } // Render function\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: reportData ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ClientsPage_List\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reports-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cell\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"amount\",\n            children: reportData.dashboard.all\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend\",\n            children: \"All Clients\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cell\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"amount\",\n            children: reportData.dashboard.unpaid\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend\",\n            children: \"Unpaid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cell\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"amount\",\n            children: reportData.dashboard.new_this_month\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend\",\n            children: \"New This Month\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cell\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"amount\",\n            children: reportData.dashboard.new_last_month\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend\",\n            children: \"New Last Month\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Clients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReportFilters, {\n        onSearchInputChange: value => setLocalInterface({ ...localInterface,\n          search: value\n        }),\n        onUpdate: () => 2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReportTableControls, {\n        zIndex: 5,\n        onMaxRowsChange: () => $setUpdater(Math.random()),\n        amount: {\n          total: reportData.interface.rows_all,\n          start: reportData.interface.rows_start,\n          end: reportData.interface.rows_end\n        },\n        page: localInterface.page,\n        maxPages: reportData.interface.max_pages,\n        onPagesStart: () => setLocalInterface({ ...localInterface,\n          page: 1\n        }),\n        onPrevPage: () => setLocalInterface({ ...localInterface,\n          page: localInterface.page - 1\n        }),\n        onNextPage: () => setLocalInterface({ ...localInterface,\n          page: localInterface.page + 1\n        }),\n        onPagesEnd: () => setLocalInterface({ ...localInterface,\n          page: reportData.interface.max_pages\n        }),\n        sort: localInterface.sort,\n        sortFields: localInterface.sortFields,\n        onSortFieldChange: value => setLocalInterface({ ...localInterface,\n          sort: { ...localInterface.sort,\n            field: value\n          }\n        }),\n        onSortDirectionChange: value => setLocalInterface({ ...localInterface,\n          sort: { ...localInterface.sort,\n            direction: value\n          }\n        }),\n        onSortFire: () => 0,\n        addButton: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-button-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"_iconed _rounded add-button\",\n            onClick: () => $router.router.navigate('clients.new', {}, {\n              reload: true\n            }),\n            children: [/*#__PURE__*/_jsxDEV(Icon, {\n              icon: \"plus-thin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Add Client\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Icon, {\n              icon: \"user-29\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contents\",\n        children: [/*#__PURE__*/_jsxDEV(\"table\", {\n          className: classNames('table', '__show-on-wide', {\n            __respectAsidePanel: props.store.navActive.is\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(ReportTableField, {\n              contents: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 28\n              }, this),\n              sortDirection: localInterface.sort.field === 'created_at' ? localInterface.sort.direction : undefined,\n              onSortDirectionChange: value => setLocalInterface({ ...localInterface,\n                sort: {\n                  field: 'created_at',\n                  direction: value\n                }\n              }),\n              onFilterFire: () => $setUpdater(Math.random())\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ReportTableField, {\n              contents: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Main phone\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 28\n              }, this),\n              sortDirection: localInterface.sort.field === 'main_phone' ? localInterface.sort.direction : undefined,\n              onSortDirectionChange: value => setLocalInterface({ ...localInterface,\n                sort: {\n                  field: 'main_phone',\n                  direction: value\n                }\n              }),\n              onFilterFire: () => $setUpdater(Math.random())\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ReportTableField, {\n              contents: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Source\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 28\n              }, this),\n              allFiltersSelected: isAllFiltersSelected(\"source\"),\n              onAllFiltersChange: value => switchFilter(\"source\", \"All\", value),\n              filterWords: reportData.interface.filter_words.source.map(filterWord => ({\n                word: filterWord,\n                selected: isFilterSelected(\"source\", filterWord)\n              })),\n              onFilterChange: value => switchFilter(\"source\", value.word, value.selected),\n              sortDirection: localInterface.sort.field === 'source' ? localInterface.sort.direction : undefined,\n              onSortDirectionChange: value => setLocalInterface({ ...localInterface,\n                sort: {\n                  field: 'source',\n                  direction: value\n                }\n              }),\n              onFilterFire: () => $setUpdater(Math.random())\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ReportTableField, {\n              contents: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Jobs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 28\n              }, this),\n              sortDirection: localInterface.sort.field === 'jobs' ? localInterface.sort.direction : undefined,\n              onSortDirectionChange: value => setLocalInterface({ ...localInterface,\n                sort: {\n                  field: 'jobs',\n                  direction: value\n                }\n              }),\n              onFilterFire: () => $setUpdater(Math.random())\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ReportTableField, {\n              contents: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Appointments\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 28\n              }, this),\n              sortDirection: localInterface.sort.field === 'appointments' ? localInterface.sort.direction : undefined,\n              onSortDirectionChange: value => setLocalInterface({ ...localInterface,\n                sort: {\n                  field: 'appointments',\n                  direction: value\n                }\n              }),\n              onFilterFire: () => $setUpdater(Math.random())\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ReportTableField, {\n              contents: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Recalls\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 28\n              }, this),\n              sortDirection: localInterface.sort.field === 'recalls' ? localInterface.sort.direction : undefined,\n              onSortDirectionChange: value => setLocalInterface({ ...localInterface,\n                sort: {\n                  field: 'recalls',\n                  direction: value\n                }\n              }),\n              onFilterFire: () => $setUpdater(Math.random())\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ReportTableField, {\n              contents: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Total\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 28\n              }, this),\n              sortDirection: localInterface.sort.field === 'total' ? localInterface.sort.direction : undefined,\n              onSortDirectionChange: value => setLocalInterface({ ...localInterface,\n                sort: {\n                  field: 'total',\n                  direction: value\n                }\n              }),\n              onFilterFire: () => $setUpdater(Math.random())\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ReportTableField, {\n              contents: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Paid\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 28\n              }, this),\n              sortDirection: localInterface.sort.field === 'paid' ? localInterface.sort.direction : undefined,\n              onSortDirectionChange: value => setLocalInterface({ ...localInterface,\n                sort: {\n                  field: 'paid',\n                  direction: value\n                }\n              }),\n              onFilterFire: () => $setUpdater(Math.random())\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ReportTableField, {\n              contents: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Unpaid\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 28\n              }, this),\n              sortDirection: localInterface.sort.field === 'unpaid' ? localInterface.sort.direction : undefined,\n              onSortDirectionChange: value => setLocalInterface({ ...localInterface,\n                sort: {\n                  field: 'unpaid',\n                  direction: value\n                }\n              }),\n              onFilterFire: () => $setUpdater(Math.random())\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this), reportData.clients.map((client, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            onClick: () => $router.router.navigate('clients.item', {\n              clientId: client.client_id\n            }, {\n              reload: true\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: client.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: client.main_phone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: client.source\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: client.jobs\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: client.appointments\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: client.recalls\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: client.total\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: client.paid\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: client.unpaid\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 17\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: classNames('table', '__hide-on-wide', '__hide-on-mobile', {\n            __respectAsidePanel: props.store.navActive.is\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 13\n          }, this), reportData.clients.map((client, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            onClick: () => $router.router.navigate('clients.item', {\n              clientId: client.client_id\n            }, {\n              reload: true\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: client.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: client.main_phone\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: client.source\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Jobs: \", client.jobs]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Appointments: \", client.appointments]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Recalls: \", client.recalls]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Total: \", client.total]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Paid: \", client.paid]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Unpaid: \", client.unpaid]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"\\xA0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 17\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classNames('mobile-table-items', '__show-on-mobile', {\n            __respectAsidePanel: props.store.navActive.is\n          }),\n          children: reportData.clients.map((client, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item\",\n            onClick: () => $router.router.navigate('clients.item', {\n              clientId: client.client_id\n            }, {\n              reload: true\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"__top\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"__left\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: client.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 395,\n                    columnNumber: 26\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 395,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: client.main_phone\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 396,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"__right\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"Total: \", /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: client.total\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 403,\n                    columnNumber: 30\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 402,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"Paid: \", /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: client.paid\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 406,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 405,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"Unpaid: \", /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: client.unpaid\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 409,\n                    columnNumber: 31\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 408,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"__bottom\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"__left\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"gray\",\n                    children: \"Jobs:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 418,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\" \", client.jobs]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 419,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 417,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"gray\",\n                    children: \"Recalls:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 422,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\" \", client.recalls]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 423,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 421,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"gray\",\n                    children: \"Appointments:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 426,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\" \", client.appointments]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 427,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 425,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 416,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"__right small\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: client.source\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 433,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 432,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 17\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReportTableControls, {\n        isUnder: true,\n        onMaxRowsChange: () => $setUpdater(Math.random()),\n        amount: {\n          total: reportData.interface.rows_all,\n          start: reportData.interface.rows_start,\n          end: reportData.interface.rows_end\n        },\n        page: localInterface.page,\n        maxPages: reportData.interface.max_pages,\n        onPagesStart: () => setLocalInterface({ ...localInterface,\n          page: 1\n        }),\n        onPrevPage: () => setLocalInterface({ ...localInterface,\n          page: localInterface.page - 1\n        }),\n        onNextPage: () => setLocalInterface({ ...localInterface,\n          page: localInterface.page + 1\n        }),\n        onPagesEnd: () => setLocalInterface({ ...localInterface,\n          page: reportData.interface.max_pages\n        }),\n        sort: localInterface.sort,\n        sortFields: localInterface.sortFields,\n        onSortFieldChange: value => setLocalInterface({ ...localInterface,\n          sort: { ...localInterface.sort,\n            field: value\n          }\n        }),\n        onSortDirectionChange: value => setLocalInterface({ ...localInterface,\n          sort: { ...localInterface.sort,\n            direction: value\n          }\n        }),\n        onSortFire: () => 0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this) : null\n  }, void 0, false);\n}, \"N/aEBBL8703v/Bc8MlCknD8DsNw=\", false, function () {\n  return [useRoute];\n}));\nexport default ClientsPage_List;","map":{"version":3,"sources":["/Users/nicole/rrrr/crm/src/pages/Clients/List.tsx"],"names":["axios","classNames","useEffect","useState","connect","useRoute","Icon","ReportFilters","ReportTableControls","ReportTableField","nError","mapDispatchToProps","mapStateToProps","ClientsPage_List","props","$router","$updater","$setUpdater","Math","random","reportData","setReportData","localInterface","setLocalInterface","search","page","max_rows","filter_words","source","sort","field","direction","sortFields","span","value","loadClients","data","clients","get","error","isFilterSelected","includes","isAllFiltersSelected","length","switchFilter","toggle","_arr","i","findIndex","filter","splice","interface","every","option","concat","push","dashboard","all","unpaid","new_this_month","new_last_month","total","rows_all","start","rows_start","end","rows_end","max_pages","router","navigate","reload","__respectAsidePanel","store","navActive","is","undefined","map","filterWord","word","selected","client","clientId","client_id","name","main_phone","jobs","appointments","recalls","paid"],"mappings":"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","sourcesContent":["import axios from \"axios\"\nimport classNames from \"classnames\"\nimport { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useRoute } from \"react-router5\"\nimport Icon from \"../../components/Icon\"\nimport ReportFilters from \"../../components/reports/Filters\"\nimport ReportTableControls from \"../../components/reports/TableControls\"\nimport ReportTableField from \"../../components/reports/TableField\"\nimport { nError } from \"../../funcs\"\nimport Client from \"../../models/Client\"\nimport { StoreDispatch, StoreState, mapDispatchToProps, mapStateToProps } from \"../../store\";\n\nimport \"../../styles/pages/common/report-list.sass\"\n\ninterface Props {\n  store: StoreState,\n  dispatcher: StoreDispatch\n}\n\ntype FilterWord = 'source'\n\ninterface ClientsReport {\n\n  interface: {\n\n    filter_words: {\n\n      source: string[],\n    },\n\n    max_pages: number,\n    rows_start: number,\n    rows_end: number,\n    rows_all: number,\n  },\n\n  permissions: {\n    show_client: boolean,\n  },\n\n  dashboard: {\n\n    all: string,\n    unpaid: string,\n    new_this_month: string,\n    new_last_month: string\n  },\n\n  clients: Client[]\n}\n\nconst ClientsPage_List = connect(mapStateToProps, mapDispatchToProps)(function(props: Props) {\n\n  const $router = useRoute()\n\n  const [$updater, $setUpdater] = useState<any>(Math.random())\n\n  const [reportData, setReportData] = useState<ClientsReport | null>(null)\n  const [localInterface, setLocalInterface] = useState({\n\n    search: '',\n\n    page: 1,\n    max_rows: 100 as 50 | 100 | 250 | 500,\n\n    filter_words: {\n\n      source: [] as string[],\n    },\n\n    sort: {\n      field: 'name',\n      direction: 'up' as 'up' | 'down'\n    },\n    sortFields: [{\n      span: 'Name',\n      value: 'name'\n    },{\n      span: 'Main Phone',\n      value: 'main_phone'\n    },{\n      span: 'Source',\n      value: 'source'\n    },{\n      span: 'Jobs',\n      value: 'jobs'\n    },{\n      span: 'Appointments',\n      value: 'appointments'\n    },{\n      span: 'Recalls',\n      value: 'recalls'\n    },{\n      span: 'Total',\n      value: 'total'\n    },{\n      span: 'Paid',\n      value: 'paid'\n    },{\n      span: 'Unpaid',\n      value: 'unpaid'\n    }]\n\n  })\n\n  // Load clients function\n  async function loadClients() {\n\n    try {\n      const { data: clients } = (await axios.get('/json/clients.json')) as {data: ClientsReport}\n\n      setReportData(clients)\n    }\n    catch (error) {\n      nError(error)\n    }\n  }\n\n  // Load clients on page mount\n  useEffect(() => { loadClients() }, [\n    $updater,\n    localInterface.page\n  ])\n\n  // Is filter selected function\n  function isFilterSelected(field: FilterWord, value: string) {\n    return localInterface.filter_words[field].includes(value)\n  }\n\n  function isAllFiltersSelected(field: \"source\") {\n    return localInterface.filter_words[field].length === 0\n  }\n\n  function switchFilter(field: FilterWord, value: string, toggle: boolean) {\n\n    let _arr = [...localInterface.filter_words[field]]\n\n    if (toggle && value === \"All\") { _arr = [] }\n    \n    else if (!toggle) {\n\n      while (true) {\n        let i = _arr.findIndex((filter) => filter === value)\n        if(i === -1) break\n        _arr.splice(i, 1)\n      }\n    }\n      \n    else {\n\n      if (reportData?.interface.filter_words[field].every((option) => _arr.concat([value]).includes(option)))\n        _arr = []\n\n      else if(_arr.findIndex((filter) => filter === value) === -1)\n        _arr.push(value)\n    }\n\n    setLocalInterface({...localInterface, filter_words: {...localInterface.filter_words, [field]: _arr}})\n  }\n\n  // Render function\n  return (<>\n    {reportData ? (\n      <div className=\"ClientsPage_List\" >\n      \n        { /* Reports grid */}\n        <div className=\"reports-grid\">\n        \n          <div className=\"cell\">\n\n            <div className=\"amount\">{reportData.dashboard.all}</div>\n            <div className=\"legend\">All Clients</div>\n          </div>\n\n          <div className=\"cell\">\n\n            <div className=\"amount\">{reportData.dashboard.unpaid}</div>\n            <div className=\"legend\">Unpaid</div>\n          </div>\n\n          <div className=\"cell\">\n\n            <div className=\"amount\">{reportData.dashboard.new_this_month}</div>\n            <div className=\"legend\">New This Month</div>\n          </div>\n\n          <div className=\"cell\">\n\n            <div className=\"amount\">{reportData.dashboard.new_last_month}</div>\n            <div className=\"legend\">New Last Month</div>\n          </div>\n        </div>\n\n        { /* Page header */}\n        <div className=\"page-header\">\n          <h1>Clients</h1>\n        </div>\n\n        { /* List filters */}\n        <ReportFilters\n          onSearchInputChange={(value) => setLocalInterface({...localInterface, search: value})}\n\n          onUpdate={() => 2}\n        />\n\n        {/* Table controls */}\n        <ReportTableControls\n          zIndex={5}\n          \n          onMaxRowsChange={() => $setUpdater(Math.random())}\n\n          amount={{\n            total: reportData.interface.rows_all,\n            start: reportData.interface.rows_start,\n            end: reportData.interface.rows_end\n          }}\n\n          page={localInterface.page}\n          maxPages={reportData.interface.max_pages}\n          onPagesStart={() => setLocalInterface({...localInterface, page: 1})}\n          onPrevPage={() => setLocalInterface({...localInterface, page: localInterface.page-1})}\n          onNextPage={() => setLocalInterface({...localInterface, page: localInterface.page+1})}\n          onPagesEnd={() => setLocalInterface({...localInterface, page: reportData.interface.max_pages})}\n          \n          sort={localInterface.sort}\n          sortFields={localInterface.sortFields}\n          onSortFieldChange={(value) => setLocalInterface({...localInterface, sort: {...localInterface.sort, field: value}})}\n          onSortDirectionChange={(value) => setLocalInterface({...localInterface, sort: {...localInterface.sort, direction: value}})}\n          onSortFire={() => 0}\n\n          addButton={(\n            <div className=\"add-button-wrapper\">\n              <button className=\"_iconed _rounded add-button\" onClick={() => $router.router.navigate('clients.new', {}, {reload: true})}>\n                <Icon icon=\"plus-thin\" />\n                <span>Add Client</span>\n                <Icon icon=\"user-29\" />\n              </button>\n            </div>\n          )}\n        />\n\n        <div className=\"contents\">\n\n          {/* Wide desktop table */}\n          <table className={classNames('table', '__show-on-wide', {\n            __respectAsidePanel: props.store.navActive.is\n          })}>\n            <tr>\n              <ReportTableField\n                contents={(<span>Date</span>)}\n\n                sortDirection={localInterface.sort.field === 'created_at' ? localInterface.sort.direction : undefined}\n                onSortDirectionChange={(value) => setLocalInterface({...localInterface, sort: {field: 'created_at', direction: value}})}\n\n                onFilterFire={() => $setUpdater(Math.random())}\n              />\n              <ReportTableField\n                contents={(<span>Main phone</span>)}\n\n                sortDirection={localInterface.sort.field === 'main_phone' ? localInterface.sort.direction : undefined}\n                onSortDirectionChange={(value) => setLocalInterface({...localInterface, sort: {field: 'main_phone', direction: value}})}\n\n                onFilterFire={() => $setUpdater(Math.random())}\n              />\n              <ReportTableField\n                contents={(<span>Source</span>)}\n\n                allFiltersSelected={isAllFiltersSelected(\"source\")}\n                onAllFiltersChange={(value) => switchFilter(\"source\", \"All\", value)}\n\n                filterWords={reportData.interface.filter_words.source.map((filterWord) => ({\n                  word: filterWord,\n                  selected: isFilterSelected(\"source\", filterWord)\n                }))}\n                onFilterChange={(value) => switchFilter(\"source\", value.word, value.selected)}\n\n                sortDirection={localInterface.sort.field === 'source' ? localInterface.sort.direction : undefined}\n                onSortDirectionChange={(value) => setLocalInterface({...localInterface, sort: {field: 'source', direction: value}})}\n\n                onFilterFire={() => $setUpdater(Math.random())}\n              />\n              <ReportTableField\n                contents={(<span>Jobs</span>)}\n\n                sortDirection={localInterface.sort.field === 'jobs' ? localInterface.sort.direction : undefined}\n                onSortDirectionChange={(value) => setLocalInterface({...localInterface, sort: {field: 'jobs', direction: value}})}\n\n                onFilterFire={() => $setUpdater(Math.random())}\n              />\n              <ReportTableField\n                contents={(<span>Appointments</span>)}\n\n                sortDirection={localInterface.sort.field === 'appointments' ? localInterface.sort.direction : undefined}\n                onSortDirectionChange={(value) => setLocalInterface({...localInterface, sort: {field: 'appointments', direction: value}})}\n\n                onFilterFire={() => $setUpdater(Math.random())}\n              />\n              <ReportTableField\n                contents={(<span>Recalls</span>)}\n\n                sortDirection={localInterface.sort.field === 'recalls' ? localInterface.sort.direction : undefined}\n                onSortDirectionChange={(value) => setLocalInterface({...localInterface, sort: {field: 'recalls', direction: value}})}\n\n                onFilterFire={() => $setUpdater(Math.random())}\n              />\n              <ReportTableField\n                contents={(<span>Total</span>)}\n\n                sortDirection={localInterface.sort.field === 'total' ? localInterface.sort.direction : undefined}\n                onSortDirectionChange={(value) => setLocalInterface({...localInterface, sort: {field: 'total', direction: value}})}\n\n                onFilterFire={() => $setUpdater(Math.random())}\n              />\n              <ReportTableField\n                contents={(<span>Paid</span>)}\n\n                sortDirection={localInterface.sort.field === 'paid' ? localInterface.sort.direction : undefined}\n                onSortDirectionChange={(value) => setLocalInterface({...localInterface, sort: {field: 'paid', direction: value}})}\n\n                onFilterFire={() => $setUpdater(Math.random())}\n              />\n              <ReportTableField\n                contents={(<span>Unpaid</span>)}\n\n                sortDirection={localInterface.sort.field === 'unpaid' ? localInterface.sort.direction : undefined}\n                onSortDirectionChange={(value) => setLocalInterface({...localInterface, sort: {field: 'unpaid', direction: value}})}\n\n                onFilterFire={() => $setUpdater(Math.random())}\n              />\n            </tr>\n            {reportData.clients.map((client, i) => (\n              <tr key={i} onClick={() => $router.router.navigate('clients.item', {\n                clientId: client.client_id\n              }, {reload: true})}>\n                <td>{client.name}</td>\n                <td>{client.main_phone}</td>\n                <td>{client.source}</td>\n                <td>{client.jobs}</td>\n                <td>{client.appointments}</td>\n                <td>{client.recalls}</td>\n                <td>{client.total}</td>\n                <td>{client.paid}</td>\n                <td>{client.unpaid}</td>\n              </tr>\n            ))}\n          </table>\n\n          {/* Medium screen table */}\n          <table className={classNames('table', '__hide-on-wide', '__hide-on-mobile', {\n            __respectAsidePanel: props.store.navActive.is\n          })}>\n            <tr></tr>\n            {reportData.clients.map((client, i) => (\n              <tr key={i} onClick={() => $router.router.navigate('clients.item', {\n                clientId: client.client_id\n              }, {reload: true})}>\n                <td>\n                  <div>{client.name}</div>\n                  <div>{client.main_phone}</div>\n                </td>\n                <td>\n                  <div>{client.source}</div>\n                  <div>Jobs: {client.jobs}</div>\n                </td>\n                <td>\n                  <div>Appointments: {client.appointments}</div>\n                  <div>Recalls: {client.recalls}</div>\n                </td>\n                <td>\n                  <div>Total: {client.total}</div>\n                  <div>Paid: {client.paid}</div>\n                </td>\n                <td>\n                  <div>Unpaid: {client.unpaid}</div>\n                  <div>&nbsp;</div>\n                </td>\n              </tr>\n            ))}\n          </table>\n\n          {/* Mobile table items */}\n          <div className={classNames('mobile-table-items', '__show-on-mobile', {\n            __respectAsidePanel: props.store.navActive.is\n          })}>\n\n            {reportData.clients.map((client, i: number) => (\n              <div className=\"item\" key={i} onClick={() => $router.router.navigate('clients.item', {\n                clientId: client.client_id\n              }, {reload: true})}>\n\n                <div className=\"__top\">\n\n                  <div className=\"__left\">\n                    <div><b>{client.name}</b></div>\n                    <div>\n                      {client.main_phone}\n                    </div>\n                  </div>\n\n                  <div className=\"__right\">\n                    <div>\n                      Total: <b>{client.total}</b>\n                    </div>\n                    <div>\n                      Paid: <b>{client.paid}</b>\n                    </div>\n                    <div>\n                      Unpaid: <b>{client.unpaid}</b>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"__bottom\">\n\n                  <div className=\"__left\">\n                    <div>\n                      <span className=\"gray\">Jobs:</span>\n                      <span> {client.jobs}</span>\n                    </div>\n                    <div>\n                      <span className=\"gray\">Recalls:</span>\n                      <span> {client.recalls}</span>\n                    </div>\n                    <div>\n                      <span className=\"gray\">Appointments:</span>\n                      <span> {client.appointments}</span>\n                    </div>\n                  </div>\n\n                  <div className=\"__right small\">\n                    <div>\n                      <b>{client.source}</b>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Table controls */}\n        <ReportTableControls\n          isUnder={true}\n\n          onMaxRowsChange={() => $setUpdater(Math.random())}\n\n          amount={{\n            total: reportData.interface.rows_all,\n            start: reportData.interface.rows_start,\n            end: reportData.interface.rows_end\n          }}\n\n          page={localInterface.page}\n          maxPages={reportData.interface.max_pages}\n          onPagesStart={() => setLocalInterface({...localInterface, page: 1})}\n          onPrevPage={() => setLocalInterface({...localInterface, page: localInterface.page-1})}\n          onNextPage={() => setLocalInterface({...localInterface, page: localInterface.page+1})}\n          onPagesEnd={() => setLocalInterface({...localInterface, page: reportData.interface.max_pages})}\n          \n          sort={localInterface.sort}\n          sortFields={localInterface.sortFields}\n          onSortFieldChange={(value) => setLocalInterface({...localInterface, sort: {...localInterface.sort, field: value}})}\n          onSortDirectionChange={(value) => setLocalInterface({...localInterface, sort: {...localInterface.sort, direction: value}})}\n          onSortFire={() => 0}\n        />\n      </div>\n    ) : null}\n  </>)\n})\nexport default ClientsPage_List\n"]},"metadata":{},"sourceType":"module"}