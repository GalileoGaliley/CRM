{"ast":null,"code":"var _jsxFileName = \"/Users/nicole/rrrr/crm/src/components/reports/Filters.tsx\",\n    _s = $RefreshSig$();\n\nimport classNames from \"classnames\";\nimport { DateTime } from \"luxon\";\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { mapDispatchToProps, mapStateToProps } from \"../../store\";\nimport DateRangeCalendar from \"../DateRangeCalendar\";\nimport Icon from \"../Icon\";\nimport Select from \"../Select\";\nimport \"../../styles/components/reports/filters.sass\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReportFilters = connect(mapStateToProps, mapDispatchToProps)(_s(function (props) {\n  _s();\n\n  const [dateRangeCalendarShown, setDateRangeCalendarShown] = useState(false); // Render function\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ReportFilters\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-container __left __hide-on-mobile\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-field __search-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"_rounded\",\n            onChange: _ref => {\n              let {\n                target: {\n                  value\n                }\n              } = _ref;\n              return props.onSearchInputChange(value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"_wa _white _iconed _rounded\",\n            onClick: () => props.onUpdate(),\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              icon: \"magnifier-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), props.childrenAfterSearch]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-container __right\",\n        children: [props.childrenBeforeDateType, true && props.dateRangeType && props.onDateRangeTypeChange ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            zeroed: true,\n            options: [{\n              span: \"Schedule date\",\n              value: \"schedule\"\n            }, {\n              span: \"Created date\",\n              value: \"created\"\n            }],\n            selectedOption: props.dateRangeType,\n            onChange: value => {\n              props.onDateRangeTypeChange(value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this) : null, true && props.dateRangePreset && props.onDateRangePresetChange ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            zeroed: true,\n            options: [{\n              span: \"Custom\",\n              value: \"custom\"\n            }, {\n              span: \"Tomorrow & Next\",\n              value: \"tomorrow_and_next\"\n            }, {\n              span: \"Tomorrow\",\n              value: \"tomorrow\"\n            }, {\n              span: \"Today\",\n              value: \"today\"\n            }, {\n              span: \"Yesterday\",\n              value: \"yesterday\"\n            }, {\n              span: \"This week (Sun - today)\",\n              value: \"this_week_sun_today\"\n            }, {\n              span: \"This week (Mon - today)\",\n              value: \"this_week_mon_today\"\n            }, {\n              span: \"Last 7 days\",\n              value: \"last_7_days\"\n            }, {\n              span: \"Last week (Sun - Sat)\",\n              value: \"last_week_sun_sat\"\n            }, {\n              span: \"Last week (Mon - Sun)\",\n              value: \"last_week_mon_sun\"\n            }, {\n              span: \"Last business week\",\n              value: \"last_business_week\"\n            }, {\n              span: \"Last 14 days\",\n              value: \"last_14_days\"\n            }, {\n              span: \"Last 30 days\",\n              value: \"last_30_days\"\n            }, {\n              span: \"This month\",\n              value: \"this_month\"\n            }, {\n              span: \"Last month\",\n              value: \"last_month\"\n            }, {\n              span: \"All\",\n              value: \"all\"\n            }],\n            selectedOption: props.dateRangePreset,\n            onChange: value => {\n              props.onDateRangePresetChange(value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this) : null, true && props.minDate && props.maxDate && props.onMinDateChange && props.onMaxDateChange ? /*#__PURE__*/_jsxDEV(\"div\", {\n          onFocus: () => setDateRangeCalendarShown(true),\n          onBlur: () => setDateRangeCalendarShown(false),\n          tabIndex: -1,\n          className: \"form-field date-range\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-field _iconed\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              readOnly: true,\n              value: DateTime.fromJSDate(props.minDate).toLocaleString(DateTime.DATE_SHORT)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"_zeroed _iconed __noclick\",\n              children: /*#__PURE__*/_jsxDEV(Icon, {\n                icon: \"calendar-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-between-text\",\n            children: \"to\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-field _iconed\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              readOnly: true,\n              value: DateTime.fromJSDate(props.maxDate).toLocaleString(DateTime.DATE_SHORT)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"_zeroed _iconed __noclick\",\n              children: /*#__PURE__*/_jsxDEV(Icon, {\n                icon: \"calendar-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classNames(\"date-range-wrapper\", {\n              _shown: dateRangeCalendarShown\n            }),\n            children: /*#__PURE__*/_jsxDEV(DateRangeCalendar, {\n              startDate: props.minDate,\n              endDate: props.maxDate,\n              onStartDateUpdate: date => {\n                props.onMinDateChange(date);\n              },\n              onEndDateUpdate: date => {\n                props.onMaxDateChange(date);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this) : null, true && props.minDate && props.maxDate ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: classNames(['_wa', '_rounded', '_iconed', 'update-button', '__hide-on-mobile', {\n            _blue: props.updateButtonActive\n          }]),\n          onClick: () => props.onUpdate(),\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            className: \"_mirrored-y\",\n            icon: \"refresh-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"__show-on-mobile flex-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-field __search-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"_rounded\",\n          onChange: _ref2 => {\n            let {\n              target: {\n                value\n              }\n            } = _ref2;\n            return props.onSearchInputChange(value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"_wa _white _iconed _rounded\",\n          onClick: () => props.onUpdate(),\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            icon: \"magnifier-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this), props.childrenAfterSearch, true && props.minDate && props.maxDate ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classNames(['_wa', '_rounded', '_iconed', 'update-button', {\n          _blue: props.updateButtonActive\n        }]),\n        onClick: () => props.onUpdate(),\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          className: \"_mirrored-y\",\n          icon: \"refresh-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 13\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}, \"ykUZI3IypSu1q9eMZ3V0OdSDz7Q=\"));\nexport default ReportFilters;","map":{"version":3,"sources":["/Users/nicole/rrrr/crm/src/components/reports/Filters.tsx"],"names":["classNames","DateTime","React","useState","connect","mapDispatchToProps","mapStateToProps","DateRangeCalendar","Icon","Select","ReportFilters","props","dateRangeCalendarShown","setDateRangeCalendarShown","target","value","onSearchInputChange","onUpdate","childrenAfterSearch","childrenBeforeDateType","dateRangeType","onDateRangeTypeChange","span","dateRangePreset","onDateRangePresetChange","minDate","maxDate","onMinDateChange","onMaxDateChange","fromJSDate","toLocaleString","DATE_SHORT","_shown","date","_blue","updateButtonActive"],"mappings":"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","sourcesContent":["import classNames from \"classnames\"\nimport { DateTime } from \"luxon\"\nimport React, { ReactChildren, ReactElement, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { DateRangePreset } from \"../../models/Misc\"\nimport { StoreDispatch, StoreState, mapDispatchToProps, mapStateToProps } from \"../../store\";\nimport DateRangeCalendar from \"../DateRangeCalendar\"\nimport Icon from \"../Icon\"\nimport Select from \"../Select\"\n\nimport \"../../styles/components/reports/filters.sass\"\n\ninterface Props {\n  store: StoreState,\n  dispatcher: StoreDispatch,\n\n  onSearchInputChange(value: string): void,\n\n  dateRangeType?: string,\n  onDateRangeTypeChange?(value: string): void,\n\n  dateRangePreset?: DateRangePreset,\n  onDateRangePresetChange?(value: DateRangePreset): void,\n\n  minDate?: Date,\n  onMinDateChange?(value: Date): void,\n  \n  maxDate?: Date,\n  onMaxDateChange?(value: Date): void,\n\n  updateButtonActive?: boolean,\n  onUpdate(): void,\n\n  childrenAfterSearch?: ReactElement,\n  childrenBeforeDateType?: ReactElement\n}\n\nconst ReportFilters = connect(mapStateToProps, mapDispatchToProps)(function(props: Props) {\n\n  const [dateRangeCalendarShown, setDateRangeCalendarShown] = useState(false)\n  \n  // Render function\n  return (\n    <div className=\"ReportFilters\">\n      \n      <div className=\"flex-container\">\n\n        <div className=\"flex-container __left __hide-on-mobile\">\n          \n          { /* Search field */}\n          <div className=\"form-field __search-form\">\n            <input type=\"text\" className=\"_rounded\" onChange={({target: {value}}) => props.onSearchInputChange(value)} />\n            <button className=\"_wa _white _iconed _rounded\" onClick={() => props.onUpdate()}>\n              <Icon icon=\"magnifier-5\" />\n            </button>\n          </div>\n\n          {props.childrenAfterSearch}\n        </div>\n\n        <div className=\"flex-container __right\">\n\n          {props.childrenBeforeDateType}\n\n          { /* Date range type selection */}\n          {(\n            true\n            && props.dateRangeType\n            && props.onDateRangeTypeChange\n          ) ? (\n            <div>\n              <Select zeroed={true} options={[{\n                span: \"Schedule date\",\n                value: \"schedule\"\n              }, {\n                span: \"Created date\",\n                value: \"created\"\n              }]} selectedOption={props.dateRangeType} onChange={(value: string) => {\n                (props.onDateRangeTypeChange as any)(value)\n              }} />\n            </div>\n          ) : null}\n\n          { /* Date range type selection */}\n          {(true\n            && props.dateRangePreset\n            && props.onDateRangePresetChange\n          ) ? (\n            <div>\n              <Select zeroed={true} options={[{\n                span: \"Custom\",\n                value: \"custom\"\n              }, {\n                span: \"Tomorrow & Next\",\n                value: \"tomorrow_and_next\"\n              }, {\n                span: \"Tomorrow\",\n                value: \"tomorrow\"\n              }, {\n                span: \"Today\",\n                value: \"today\"\n              }, {\n                span: \"Yesterday\",\n                value: \"yesterday\"\n              }, {\n                span: \"This week (Sun - today)\",\n                value: \"this_week_sun_today\"\n              }, {\n                span: \"This week (Mon - today)\",\n                value: \"this_week_mon_today\"\n              }, {\n                span: \"Last 7 days\",\n                value: \"last_7_days\"\n              }, {\n                span: \"Last week (Sun - Sat)\",\n                value: \"last_week_sun_sat\"\n              }, {\n                span: \"Last week (Mon - Sun)\",\n                value: \"last_week_mon_sun\"\n              }, {\n                span: \"Last business week\",\n                value: \"last_business_week\"\n              }, {\n                span: \"Last 14 days\",\n                value: \"last_14_days\"\n              }, {\n                span: \"Last 30 days\",\n                value: \"last_30_days\"\n              }, {\n                span: \"This month\",\n                value: \"this_month\"\n              }, {\n                span: \"Last month\",\n                value: \"last_month\"\n              }, {\n                span: \"All\",\n                value: \"all\"\n              }]} selectedOption={props.dateRangePreset} onChange={(value: string) => {\n                (props.onDateRangePresetChange as any)(value as DateRangePreset)\n              }} />\n            </div>\n          ) : null}\n\n          { /* Date range */}\n          {(true\n            && props.minDate\n            && props.maxDate\n            && props.onMinDateChange\n            && props.onMaxDateChange\n          ) ? (\n            <div onFocus={() => setDateRangeCalendarShown(true)} onBlur={() => setDateRangeCalendarShown(false)} tabIndex={-1} className=\"form-field date-range\">\n              <div className=\"form-field _iconed\">\n                <input type=\"text\" readOnly value={DateTime.fromJSDate(props.minDate).toLocaleString(DateTime.DATE_SHORT)} />\n                <button className=\"_zeroed _iconed __noclick\">\n                  <Icon icon=\"calendar-4\" />\n                </button>\n              </div>\n              <div className=\"input-between-text\">to</div>\n              <div className=\"form-field _iconed\">\n                <input type=\"text\" readOnly value={DateTime.fromJSDate(props.maxDate).toLocaleString(DateTime.DATE_SHORT)} />\n                <button className=\"_zeroed _iconed __noclick\">\n                  <Icon icon=\"calendar-4\" />\n                </button>\n              </div>\n\n              <div className={classNames(\"date-range-wrapper\", {_shown: dateRangeCalendarShown})}>\n                <DateRangeCalendar\n                  startDate={props.minDate}\n                  endDate={props.maxDate}\n                    \n                  onStartDateUpdate={(date) => { (props.onMinDateChange as any)(date);}}\n                  onEndDateUpdate={(date) => { (props.onMaxDateChange as any)(date);}}\n                />\n              </div>\n            </div>\n          ) : null}\n\n          { /* Refresh button */}\n          {(true\n            && props.minDate\n            && props.maxDate\n          ) ? (\n            <button\n              className={classNames(['_wa', '_rounded', '_iconed', 'update-button', '__hide-on-mobile', { _blue: props.updateButtonActive }])}\n              onClick={() => props.onUpdate()}\n            >\n              <Icon className=\"_mirrored-y\" icon=\"refresh-2\" />\n            </button>\n          ) : null}\n        </div>\n      </div>\n\n      <div className=\"__show-on-mobile flex-container\">\n\n          { /* Search field */}\n          <div className=\"form-field __search-form\">\n            <input type=\"text\" className=\"_rounded\" onChange={({target: {value}}) => props.onSearchInputChange(value)} />\n            <button className=\"_wa _white _iconed _rounded\" onClick={() => props.onUpdate()}>\n              <Icon icon=\"magnifier-5\" />\n            </button>\n          </div>\n        \n          {props.childrenAfterSearch}\n\n          { /* Refresh button */}\n          {(true\n            && props.minDate\n            && props.maxDate\n          ) ? (\n            <button\n              className={classNames(['_wa', '_rounded', '_iconed', 'update-button', { _blue: props.updateButtonActive }])}\n              onClick={() => props.onUpdate()}\n            >\n              <Icon className=\"_mirrored-y\" icon=\"refresh-2\" />\n            </button>\n          ) : null}\n        </div>\n    </div>\n  )\n})\nexport default ReportFilters\n"]},"metadata":{},"sourceType":"module"}