{"ast":null,"code":"import _objectSpread from\"/Users/nicole/rrrr/crm/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _asyncToGenerator from\"/Users/nicole/rrrr/crm/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/nicole/rrrr/crm/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/Users/nicole/rrrr/crm/node_modules/@babel/runtime/regenerator/index.js\";import axios from\"axios\";import React,{useEffect,useState}from\"react\";import{connect}from\"react-redux\";import Icon from\"../../components/Icon\";import{nError}from\"../../funcs\";import{mapDispatchToProps,mapStateToProps}from\"../../store\";import\"../../styles/pages/common/entity-edit.sass\";import{BaseLink,useRoute}from\"react-router5\";import Switcher from\"../../components/Switcher\";import classNames from\"classnames\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var CallCenter_SettingsPage_Item=connect(mapStateToProps,mapDispatchToProps)(function(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),readyToSave=_useState2[0],setReadyToSave=_useState2[1];var $router=useRoute();var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),settingsData=_useState4[0],setSettingsData=_useState4[1];var _useState5=useState({}),_useState6=_slicedToArray(_useState5,2),newSettingsData=_useState6[0],setNewSettingsData=_useState6[1];var _useState7=useState({twilio_account_sid:'password',twilio_call_token:'password',twilio_token:'password'}),_useState8=_slicedToArray(_useState7,2),inputTypes=_useState8[0],setInputTypes=_useState8[1];// Load info function\nfunction loadInfo(){return _loadInfo.apply(this,arguments);}// Load setting data\nfunction _loadInfo(){_loadInfo=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _ref4,_settingsData;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return axios.get('/json/call_center_settings.json');case 3:_ref4=_context.sent;_settingsData=_ref4.data;setSettingsData(_settingsData);setNewSettingsData(_objectSpread(_objectSpread({},newSettingsData),_settingsData.call_settings));setTimeout(function(){return setReadyToSave(false);},100);_context.next=13;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](0);nError(_context.t0);case 13:case\"end\":return _context.stop();}}},_callee,null,[[0,10]]);}));return _loadInfo.apply(this,arguments);}useEffect(function(){loadInfo();},[]);// Watch changes\nuseEffect(function(){setReadyToSave(true);},[newSettingsData]);// Render function\nreturn/*#__PURE__*/_jsx(_Fragment,{children:newSettingsData?/*#__PURE__*/_jsxs(\"div\",{className:\"CallCenter_SettingsPage_Item entity-edit\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"top-nav\",children:[/*#__PURE__*/_jsxs(BaseLink,{router:$router.router,routeName:\"call_center.phoneNumbers\",className:classNames({_active:$router.route.name===\"call_center.phoneNumbers\"}),children:[/*#__PURE__*/_jsx(Icon,{icon:\"phone-1\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Phone Numbers\"})]}),/*#__PURE__*/_jsxs(BaseLink,{router:$router.router,routeName:\"call_center.dispatchers\",className:classNames({_active:$router.route.name===\"call_center.dispatchers\"}),children:[/*#__PURE__*/_jsx(Icon,{icon:\"user-1\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Dispatchers\"})]}),/*#__PURE__*/_jsxs(BaseLink,{router:$router.router,routeName:\"call_center.groups\",className:classNames({_active:$router.route.name===\"call_center.groups\"}),children:[/*#__PURE__*/_jsx(Icon,{icon:\"user-29\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Groups\"})]}),/*#__PURE__*/_jsxs(BaseLink,{router:$router.router,routeName:\"call_center.callFlows\",className:classNames({_active:$router.route.name===\"call_center.callFlows\"}),children:[/*#__PURE__*/_jsx(Icon,{icon:\"share-7\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Call Flows\"})]}),/*#__PURE__*/_jsxs(BaseLink,{router:$router.router,routeName:\"call_center.settings\",className:classNames({_active:$router.route.name===\"call_center.settings\"}),children:[/*#__PURE__*/_jsx(Icon,{icon:\"gear-1\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Settings\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"fieldset\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"legend\",children:\"Main\"}),/*#__PURE__*/_jsx(\"div\",{className:\"fields\",children:/*#__PURE__*/_jsx(\"div\",{className:\"__left\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"field\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Call center:\"}),/*#__PURE__*/_jsx(Switcher,{checked:newSettingsData.active,onChange:function onChange(value){return setNewSettingsData(_objectSpread(_objectSpread({},newSettingsData),{},{active:value}));}})]})})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"fieldset\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"legend\",children:\"Twilio\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"fields\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"__left\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"field\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Account SID:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-field _iconed\",children:[/*#__PURE__*/_jsx(\"input\",{type:inputTypes.twilio_account_sid,readOnly:inputTypes.twilio_account_sid!=='text',defaultValue:newSettingsData.twilio_account_sid,onChange:function onChange(_ref){var value=_ref.target.value;return setNewSettingsData(_objectSpread(_objectSpread({},newSettingsData),{},{twilio_account_sid:value}));}}),/*#__PURE__*/_jsx(\"button\",{className:\"_zeroed _iconed\",onClick:function onClick(){return setInputTypes(_objectSpread(_objectSpread({},inputTypes),{},{twilio_account_sid:inputTypes.twilio_account_sid==='text'?'password':'text'}));},children:/*#__PURE__*/_jsx(Icon,{icon:\"eye-4\"})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"field\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Call Token:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-field _iconed\",children:[/*#__PURE__*/_jsx(\"input\",{type:inputTypes.twilio_call_token,readOnly:inputTypes.twilio_call_token!=='text',defaultValue:newSettingsData.twilio_call_token,onChange:function onChange(_ref2){var value=_ref2.target.value;return setNewSettingsData(_objectSpread(_objectSpread({},newSettingsData),{},{twilio_call_token:value}));}}),/*#__PURE__*/_jsx(\"button\",{className:\"_zeroed _iconed\",onClick:function onClick(){return setInputTypes(_objectSpread(_objectSpread({},inputTypes),{},{twilio_call_token:inputTypes.twilio_call_token==='text'?'password':'text'}));},children:/*#__PURE__*/_jsx(Icon,{icon:\"eye-4\"})})]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"__right\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"field\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Token:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-field _iconed\",children:[/*#__PURE__*/_jsx(\"input\",{type:inputTypes.twilio_token,readOnly:inputTypes.twilio_token!=='text',defaultValue:newSettingsData.twilio_token,onChange:function onChange(_ref3){var value=_ref3.target.value;return setNewSettingsData(_objectSpread(_objectSpread({},newSettingsData),{},{twilio_token:value}));}}),/*#__PURE__*/_jsx(\"button\",{className:\"_zeroed _iconed\",onClick:function onClick(){return setInputTypes(_objectSpread(_objectSpread({},inputTypes),{},{twilio_token:inputTypes.twilio_token==='text'?'password':'text'}));},children:/*#__PURE__*/_jsx(Icon,{icon:\"eye-4\"})})]})]})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"fieldset\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"legend\",children:\"Info\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"fields\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"__left\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"field\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Last Edited:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",defaultValue:newSettingsData.last_edited_at,disabled:true})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"__right\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"field\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Last Edited By:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",defaultValue:newSettingsData.last_edited_by,disabled:true})]})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"wrapper flex-container sb editing-buttons\",children:[/*#__PURE__*/_jsx(\"div\",{}),/*#__PURE__*/_jsxs(\"div\",{className:\"buttons\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"_bordered _red\",onClick:function onClick(){return $router.router.navigate('call_center',{},{reload:true});},children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{disabled:!readyToSave,className:\"_bordered _green\",children:\"Save\"})]})]})]}):null});});export default CallCenter_SettingsPage_Item;","map":{"version":3,"sources":["/Users/nicole/rrrr/crm/src/pages/CallCenter/Settings.tsx"],"names":["axios","React","useEffect","useState","connect","Icon","nError","mapDispatchToProps","mapStateToProps","BaseLink","useRoute","Switcher","classNames","CallCenter_SettingsPage_Item","props","readyToSave","setReadyToSave","$router","settingsData","setSettingsData","newSettingsData","setNewSettingsData","twilio_account_sid","twilio_call_token","twilio_token","inputTypes","setInputTypes","loadInfo","get","data","call_settings","setTimeout","router","_active","route","name","active","value","target","last_edited_at","last_edited_by","navigate","reload"],"mappings":"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","sourcesContent":["import axios from \"axios\"\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport Icon from \"../../components/Icon\"\nimport { nError } from \"../../funcs\"\nimport { StoreDispatch, StoreState, mapDispatchToProps, mapStateToProps } from \"../../store\";\nimport Datetime from 'react-datetime'\n\nimport \"../../styles/pages/common/entity-edit.sass\"\nimport moment from \"moment\"\nimport Select from \"../../components/Select\"\nimport Checkbox from \"../../components/Checkbox\"\nimport { BaseLink, useRoute } from \"react-router5\"\nimport Switcher from \"../../components/Switcher\"\nimport classNames from \"classnames\"\n\ninterface Props {\n  store: StoreState,\n  dispatcher: StoreDispatch\n}\n\ninterface SettingsData {\n\tpermissions: {\n\t\tedit_call_settings: boolean\n\t},\n  call_settings: {\n    \n    active: boolean,\n    twilio_account_sid: string,\n    twilio_call_token: string,\n    twilio_token: string,\n\n    created_at: string,\n    created_by: string,\n    last_edited_at: string,\n    last_edited_by: string\n  }\n}\n\nconst CallCenter_SettingsPage_Item = connect(mapStateToProps, mapDispatchToProps)(function(props: Props) {\n\n  const [readyToSave, setReadyToSave] = useState(false)\n\n  const $router = useRoute()\n  \n  const [settingsData, setSettingsData] = useState<SettingsData | null>(null)\n\n  const [newSettingsData, setNewSettingsData] = useState<{[key: string]: any}>({\n    \n  })\n\n  const [inputTypes, setInputTypes] = useState({\n\n    twilio_account_sid: 'password' as 'text' | 'password',\n    twilio_call_token: 'password' as 'text' | 'password',\n    twilio_token: 'password' as 'text' | 'password',\n  })\n\n  // Load info function\n  async function loadInfo() {\n    try {\n      const { data: settingsData } = (await axios.get('/json/call_center_settings.json')) as {data: SettingsData}\n\n      setSettingsData(settingsData)\n      setNewSettingsData({\n        ...newSettingsData,\n        ...settingsData.call_settings\n      })\n\n      setTimeout(() => setReadyToSave(false), 100)\n    }\n    catch (error) {\n      nError(error)\n    }\n  }\n\n  // Load setting data\n  useEffect(() => {\n    loadInfo()\n  }, [])\n\n  // Watch changes\n  useEffect(() => {\n    setReadyToSave(true)\n  }, [\n    newSettingsData\n  ])\n  \n  // Render function\n  return (<>\n    {newSettingsData ? (\n      <div className=\"CallCenter_SettingsPage_Item entity-edit\">\n\n        {/* Top navigation */}\n        <div className=\"top-nav\">\n          <BaseLink router={$router.router} routeName=\"call_center.phoneNumbers\" className={classNames({_active: $router.route.name === \"call_center.phoneNumbers\"})}>\n            <Icon icon=\"phone-1\" />\n            <span>Phone Numbers</span>\n          </BaseLink>\n\n          <BaseLink router={$router.router} routeName=\"call_center.dispatchers\" className={classNames({_active: $router.route.name === \"call_center.dispatchers\"})}>\n            <Icon icon=\"user-1\" />\n            <span>Dispatchers</span>\n          </BaseLink>\n\n          <BaseLink router={$router.router} routeName=\"call_center.groups\" className={classNames({_active: $router.route.name === \"call_center.groups\"})}>\n            <Icon icon=\"user-29\" />\n            <span>Groups</span>\n          </BaseLink>\n\n          <BaseLink router={$router.router} routeName=\"call_center.callFlows\" className={classNames({_active: $router.route.name === \"call_center.callFlows\"})}>\n            <Icon icon=\"share-7\" />\n            <span>Call Flows</span>\n          </BaseLink>\n\n          <BaseLink router={$router.router} routeName=\"call_center.settings\" className={classNames({_active: $router.route.name === \"call_center.settings\"})}>\n            <Icon icon=\"gear-1\" />\n            <span>Settings</span>\n          </BaseLink>\n        </div>\n        \n        <div className=\"fieldset\">\n          \n          <div className=\"legend\">Main</div>\n\n          <div className=\"fields\">\n\n            <div className=\"__left\">\n              <div className=\"field\">\n                <span>Call center:</span>\n                <Switcher checked={newSettingsData.active} onChange={(value) => setNewSettingsData({...newSettingsData, active: value})} />\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"fieldset\">\n          \n          <div className=\"legend\">Twilio</div>\n\n          <div className=\"fields\">\n\n            <div className=\"__left\">\n              <div className=\"field\">\n                <span>Account SID:</span>\n                <div className=\"form-field _iconed\">\n                  <input type={inputTypes.twilio_account_sid} readOnly={inputTypes.twilio_account_sid !== 'text'} defaultValue={newSettingsData.twilio_account_sid} onChange={({target: {value}}) => setNewSettingsData({...newSettingsData, twilio_account_sid: value})} />\n                  <button className=\"_zeroed _iconed\" onClick={() => setInputTypes({...inputTypes, twilio_account_sid: inputTypes.twilio_account_sid === 'text' ? 'password' : 'text'})}>\n                    <Icon icon=\"eye-4\"/>\n                  </button>\n                </div>\n              </div>\n\n              <div className=\"field\">\n                <span>Call Token:</span>\n                <div className=\"form-field _iconed\">\n                  <input type={inputTypes.twilio_call_token} readOnly={inputTypes.twilio_call_token !== 'text'} defaultValue={newSettingsData.twilio_call_token} onChange={({target: {value}}) => setNewSettingsData({...newSettingsData, twilio_call_token: value})} />\n                  <button className=\"_zeroed _iconed\" onClick={() => setInputTypes({...inputTypes, twilio_call_token: inputTypes.twilio_call_token === 'text' ? 'password' : 'text'})}>\n                    <Icon icon=\"eye-4\"/>\n                  </button>\n                </div>\n              </div>\n            </div>\n\n            \n            <div className=\"__right\">\n\n              <div className=\"field\">\n                <span>Token:</span>\n                <div className=\"form-field _iconed\">\n                  <input type={inputTypes.twilio_token} readOnly={inputTypes.twilio_token !== 'text'} defaultValue={newSettingsData.twilio_token} onChange={({target: {value}}) => setNewSettingsData({...newSettingsData, twilio_token: value})} />\n                  <button className=\"_zeroed _iconed\" onClick={() => setInputTypes({...inputTypes, twilio_token: inputTypes.twilio_token === 'text' ? 'password' : 'text'})}>\n                    <Icon icon=\"eye-4\"/>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"fieldset\">\n          \n          <div className=\"legend\">Info</div>\n\n          <div className=\"fields\">\n\n            <div className=\"__left\">\n\n              <div className=\"field\">\n                <span>Last Edited:</span>\n                <input type=\"text\" defaultValue={newSettingsData.last_edited_at} disabled={ true } />\n              </div>\n            </div>\n\n            \n            <div className=\"__right\">\n\n              <div className=\"field\">\n                <span>Last Edited By:</span>\n                <input type=\"text\" defaultValue={newSettingsData.last_edited_by} disabled={ true } />\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"wrapper flex-container sb editing-buttons\">\n          <div />\n          <div className=\"buttons\">\n            <button className=\"_bordered _red\" onClick={() => $router.router.navigate('call_center', {}, {\n              reload: true\n            })}>\n              Cancel\n            </button>\n            <button disabled={!readyToSave} className=\"_bordered _green\">\n              Save\n            </button>\n          </div>\n        </div>\n      </div>\n    ) : null}\n  </>)\n})\nexport default CallCenter_SettingsPage_Item\n"]},"metadata":{},"sourceType":"module"}