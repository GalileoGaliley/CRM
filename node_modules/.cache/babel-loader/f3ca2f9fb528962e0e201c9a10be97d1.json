{"ast":null,"code":"var _jsxFileName = \"/Users/nicole/rrrr/crm/src/pages/Accounts/Item.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport Icon from \"../../components/Icon\";\nimport { nError } from \"../../funcs\";\nimport { mapDispatchToProps, mapStateToProps } from \"../../store\";\nimport \"../../styles/pages/common/entity-edit.sass\";\nimport Select from \"../../components/Select\";\nimport Checkbox from \"../../components/Checkbox\";\nimport { useRoute } from \"react-router5\";\nimport ReactCrop from \"react-image-crop\";\nimport Switcher from \"../../components/Switcher\";\nimport ReactInputMask from \"react-input-mask\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AccountsPage_Item = connect(mapStateToProps, mapDispatchToProps)(_s(function (props) {\n  _s();\n\n  const [readyToSave, setReadyToSave] = useState(false);\n  const $router = useRoute();\n  const [editing, setEditing] = useState(false);\n  const [inputTypes, setInputTypes] = useState({\n    twilio_account_sid: 'password',\n    twilio_call_token: 'password',\n    twilio_token: 'password'\n  });\n  const [deleting, setDeleting] = useState(false);\n  const [readyToDelete, setReadyToDelete] = useState(false);\n  const [accountData, setAccountData] = useState(null);\n  const [avatarPopup, setAvatarPopup] = useState(false);\n  const [avatarImageSrc, setAvatarImageSrc] = useState('');\n  const [avatarCrop, setAvatarCrop] = useState({\n    unit: '%',\n    width: 30,\n    aspect: 1\n  });\n  const [editions, setEditions] = useState(null);\n  const [newAccountData, setNewAccountData] = useState({}); // Load info function\n\n  async function loadInfo() {\n    try {\n      const {\n        data: accountData\n      } = await axios.get('/json/account.json');\n      setAccountData(accountData);\n      setEditions(accountData.edit);\n      setNewAccountData(accountData.account);\n      setTimeout(() => setReadyToSave(false), 100);\n    } catch (error) {\n      nError(error);\n    }\n  } // Load account data\n\n\n  useEffect(() => {\n    loadInfo();\n  }, []); // On select file function\n\n  function onSelectFile(e) {\n    if (e.target.files && e.target.files.length > 0) {\n      const reader = new FileReader();\n      reader.addEventListener('load', () => setAvatarImageSrc(reader.result));\n      reader.readAsDataURL(e.target.files[0]);\n    }\n  }\n\n  useEffect(() => setReadyToSave(true), [newAccountData]); // Render function\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: accountData && editions && newAccountData.time_zone ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"AccountsPage_Item entity-edit\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrapper flex-container sb\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-container _gap-narrow\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Account:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item-name\",\n            children: accountData.account.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), accountData !== null && accountData !== void 0 && accountData.permissions.edit_account && !editing ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"_wa _green\",\n          onClick: () => setEditing(true),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fieldset\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend\",\n          children: \"Main\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fields\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"__left\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                disabled: !editing,\n                defaultValue: accountData.account.name,\n                onChange: _ref => {\n                  let {\n                    target: {\n                      value\n                    }\n                  } = _ref;\n                  return setNewAccountData({ ...newAccountData,\n                    name: value\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Owner:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                disabled: !editing,\n                options: editions.owners.map(owner => ({\n                  span: owner.user,\n                  value: owner.user_id\n                })),\n                selectedOption: newAccountData.owner,\n                onChange: value => setNewAccountData({ ...newAccountData,\n                  owner: value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Phone:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ReactInputMask, {\n                disabled: !editing,\n                type: \"text\",\n                mask: \"+1 (999) 999-9999\",\n                defaultValue: newAccountData.phone,\n                onChange: _ref2 => {\n                  let {\n                    target: {\n                      value\n                    }\n                  } = _ref2;\n                  return setNewAccountData({ ...newAccountData,\n                    phone: value\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"__right\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              style: {\n                zIndex: 5\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Status:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                disabled: !editing,\n                options: editions.status.map(status => ({\n                  span: status,\n                  value: status\n                })),\n                selectedOption: newAccountData.status,\n                onChange: value => setNewAccountData({ ...newAccountData,\n                  status: value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Email:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                defaultValue: accountData.account.email,\n                disabled: !editing\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Source:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                disabled: !editing,\n                options: editions.source.map(source => ({\n                  span: source,\n                  value: source\n                })),\n                selectedOption: newAccountData.source,\n                onChange: value => setNewAccountData({ ...newAccountData,\n                  source: value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"avatar-editing\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"_zeroed _iconed\",\n              onClick: () => editing && setAvatarPopup(true),\n              children: /*#__PURE__*/_jsxDEV(Icon, {\n                icon: \"user-20\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fieldset\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend\",\n          children: \"Statistics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fields\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"__left\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Users:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                disabled: true,\n                defaultValue: accountData.account.users,\n                onChange: _ref3 => {\n                  let {\n                    target: {\n                      value\n                    }\n                  } = _ref3;\n                  return setNewAccountData({ ...newAccountData,\n                    users: value\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"__right\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Phone Numbers:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                disabled: true,\n                defaultValue: accountData.account.phone_numbers,\n                onChange: _ref4 => {\n                  let {\n                    target: {\n                      value\n                    }\n                  } = _ref4;\n                  return setNewAccountData({ ...newAccountData,\n                    phone_numbers: value\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fieldset\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend\",\n          children: \"Twilio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fields\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"__left\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Account SID:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-field _iconed\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  disabled: !editing,\n                  type: inputTypes.twilio_account_sid,\n                  readOnly: inputTypes.twilio_account_sid !== 'text',\n                  defaultValue: newAccountData.twilio_account_sid,\n                  onChange: _ref5 => {\n                    let {\n                      target: {\n                        value\n                      }\n                    } = _ref5;\n                    return setNewAccountData({ ...newAccountData,\n                      twilio_account_sid: value\n                    });\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"_zeroed _iconed\",\n                  onClick: () => setInputTypes({ ...inputTypes,\n                    twilio_account_sid: inputTypes.twilio_account_sid === 'text' ? 'password' : 'text'\n                  }),\n                  children: /*#__PURE__*/_jsxDEV(Icon, {\n                    icon: \"eye-4\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 237,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Call Token:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-field _iconed\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  disabled: !editing,\n                  type: inputTypes.twilio_call_token,\n                  readOnly: inputTypes.twilio_call_token !== 'text',\n                  defaultValue: newAccountData.twilio_call_token,\n                  onChange: _ref6 => {\n                    let {\n                      target: {\n                        value\n                      }\n                    } = _ref6;\n                    return setNewAccountData({ ...newAccountData,\n                      twilio_call_token: value\n                    });\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"_zeroed _iconed\",\n                  onClick: () => setInputTypes({ ...inputTypes,\n                    twilio_call_token: inputTypes.twilio_call_token === 'text' ? 'password' : 'text'\n                  }),\n                  children: /*#__PURE__*/_jsxDEV(Icon, {\n                    icon: \"eye-4\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 247,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"__right\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Token:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-field _iconed\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  disabled: !editing,\n                  type: inputTypes.twilio_token,\n                  readOnly: inputTypes.twilio_token !== 'text',\n                  defaultValue: newAccountData.twilio_token,\n                  onChange: _ref7 => {\n                    let {\n                      target: {\n                        value\n                      }\n                    } = _ref7;\n                    return setNewAccountData({ ...newAccountData,\n                      twilio_token: value\n                    });\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"_zeroed _iconed\",\n                  onClick: () => setInputTypes({ ...inputTypes,\n                    twilio_token: inputTypes.twilio_token === 'text' ? 'password' : 'text'\n                  }),\n                  children: /*#__PURE__*/_jsxDEV(Icon, {\n                    icon: \"eye-4\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 261,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fieldset\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend\",\n          children: \"Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fields\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"__left\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Permission:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                disabled: !editing,\n                options: editions.permissions.map(permission => ({\n                  span: permission,\n                  value: permission\n                })),\n                selectedOption: newAccountData.permission,\n                onChange: value => setNewAccountData({ ...newAccountData,\n                  permission: value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Slack Url:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                disabled: !editing,\n                defaultValue: accountData.account.slack_url,\n                onChange: _ref8 => {\n                  let {\n                    target: {\n                      value\n                    }\n                  } = _ref8;\n                  return setNewAccountData({ ...newAccountData,\n                    slack_url: value\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"__right\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Time Zone:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                disabled: !editing,\n                options: editions.time_zone.map(time_zone => ({\n                  span: time_zone,\n                  value: time_zone\n                })),\n                selectedOption: newAccountData.time_zone,\n                onChange: value => setNewAccountData({ ...newAccountData,\n                  time_zone: value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Slack:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Switcher, {\n                disabled: !editing,\n                checked: newAccountData.slack_active,\n                onChange: value => setNewAccountData({ ...newAccountData,\n                  slack_active: value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fieldset\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend\",\n          children: \"Mailing Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fields\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"__left\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Street:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                disabled: !editing,\n                defaultValue: accountData.account.mailing_street,\n                onChange: _ref9 => {\n                  let {\n                    target: {\n                      value\n                    }\n                  } = _ref9;\n                  return setNewAccountData({ ...newAccountData,\n                    mailing_street: value\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Unit/Apt:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                disabled: !editing,\n                defaultValue: accountData.account.mailing_unit,\n                onChange: _ref10 => {\n                  let {\n                    target: {\n                      value\n                    }\n                  } = _ref10;\n                  return setNewAccountData({ ...newAccountData,\n                    mailing_unit: value\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"City:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                disabled: !editing,\n                defaultValue: accountData.account.mailing_city,\n                onChange: _ref11 => {\n                  let {\n                    target: {\n                      value\n                    }\n                  } = _ref11;\n                  return setNewAccountData({ ...newAccountData,\n                    mailing_city: value\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"__right\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"State:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                disabled: !editing,\n                options: editions.state.map(option => ({\n                  span: option,\n                  value: option\n                })),\n                selectedOption: newAccountData.mailing_state,\n                onChange: value => setNewAccountData({ ...newAccountData,\n                  mailing_state: value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Zip:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                disabled: !editing,\n                defaultValue: accountData.account.mailing_zip,\n                onChange: _ref12 => {\n                  let {\n                    target: {\n                      value\n                    }\n                  } = _ref12;\n                  return setNewAccountData({ ...newAccountData,\n                    mailing_zip: value\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fieldset\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-container sb wrap\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend\",\n            children: \"Billing Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 13\n          }, this), editing ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-action-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Same as Mailing Address:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-wrapper\",\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                contents: \"\",\n                value: newAccountData.same_address,\n                onChange: value => setNewAccountData({ ...newAccountData,\n                  same_address: value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 15\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }, this), !editing || !newAccountData.same_address ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fields\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"__left\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Street:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                disabled: !editing,\n                defaultValue: accountData.account.billing_street,\n                onChange: _ref13 => {\n                  let {\n                    target: {\n                      value\n                    }\n                  } = _ref13;\n                  return setNewAccountData({ ...newAccountData,\n                    billing_street: value\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Unit/Apt:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                disabled: !editing,\n                defaultValue: accountData.account.billing_unit,\n                onChange: _ref14 => {\n                  let {\n                    target: {\n                      value\n                    }\n                  } = _ref14;\n                  return setNewAccountData({ ...newAccountData,\n                    billing_unit: value\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"City:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                disabled: !editing,\n                defaultValue: accountData.account.billing_city,\n                onChange: _ref15 => {\n                  let {\n                    target: {\n                      value\n                    }\n                  } = _ref15;\n                  return setNewAccountData({ ...newAccountData,\n                    billing_city: value\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"__right\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"State:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 387,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                disabled: !editing,\n                options: editions.state.map(option => ({\n                  span: option,\n                  value: option\n                })),\n                selectedOption: newAccountData.billing_state,\n                onChange: value => setNewAccountData({ ...newAccountData,\n                  billing_state: value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 388,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Zip:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 395,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                disabled: !editing,\n                defaultValue: accountData.account.billing_zip,\n                onChange: _ref16 => {\n                  let {\n                    target: {\n                      value\n                    }\n                  } = _ref16;\n                  return setNewAccountData({ ...newAccountData,\n                    billing_zip: value\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fieldset\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend\",\n          children: \"Info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fields\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"__left\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Date Created:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                defaultValue: newAccountData.created_at,\n                disabled: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 412,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Created by:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 416,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                defaultValue: newAccountData.created_by,\n                disabled: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 417,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"__right\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Last Edited:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 425,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                defaultValue: newAccountData.last_edited_at,\n                disabled: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 426,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Last Edited By:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 430,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                defaultValue: newAccountData.last_edited_by,\n                disabled: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 9\n      }, this), editing ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrapper flex-container sb editing-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"_red\",\n            onClick: () => setDeleting(true),\n            children: \"Delete Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"_bordered _red\",\n            onClick: () => setEditing(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: !readyToSave,\n            className: \"_bordered _green\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 11\n      }, this) : null, avatarPopup ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup imageCrop\",\n        onClick: () => setAvatarPopup(false),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wrapper\",\n          onClick: e => e.stopPropagation(),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \"image/*\",\n              onChange: onSelectFile,\n              id: \"file-uploader\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 459,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"_wa _iconed _bordered _blue\",\n              onClick: () => {\n                var _document$getElementB;\n\n                return (_document$getElementB = document.getElementById('file-uploader')) === null || _document$getElementB === void 0 ? void 0 : _document$getElementB.click();\n              },\n              children: [/*#__PURE__*/_jsxDEV(Icon, {\n                icon: \"account-33\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 461,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Upload a File\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 462,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: avatarImageSrc && /*#__PURE__*/_jsxDEV(ReactCrop, {\n              src: avatarImageSrc,\n              crop: avatarCrop,\n              onChange: value => setAvatarCrop(value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 468,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 11\n      }, this) : null, deleting ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item-delete-popup\",\n        onClick: () => setDeleting(false),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wrapper\",\n          onClick: e => e.stopPropagation(),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title\",\n            children: \"Delete Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"checkbox-wrapper\",\n            children: /*#__PURE__*/_jsxDEV(Checkbox, {\n              contents: \"I understand that after deleting the account it will not be possible to recover.\",\n              value: readyToDelete,\n              onChange: value => setReadyToDelete(value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 490,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"_bordered _green\",\n              onClick: () => setDeleting(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 495,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              disabled: !readyToDelete,\n              className: \"_bordered _red\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 499,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this) : null\n  }, void 0, false);\n}, \"oRc2bq/TiQaAkGngu5RWNS4Nkfk=\", false, function () {\n  return [useRoute];\n}));\nexport default AccountsPage_Item;","map":{"version":3,"sources":["/Users/nicole/rrrr/crm/src/pages/Accounts/Item.tsx"],"names":["axios","React","useEffect","useState","connect","Icon","nError","mapDispatchToProps","mapStateToProps","Select","Checkbox","useRoute","ReactCrop","Switcher","ReactInputMask","AccountsPage_Item","props","readyToSave","setReadyToSave","$router","editing","setEditing","inputTypes","setInputTypes","twilio_account_sid","twilio_call_token","twilio_token","deleting","setDeleting","readyToDelete","setReadyToDelete","accountData","setAccountData","avatarPopup","setAvatarPopup","avatarImageSrc","setAvatarImageSrc","avatarCrop","setAvatarCrop","unit","width","aspect","editions","setEditions","newAccountData","setNewAccountData","loadInfo","data","get","edit","account","setTimeout","error","onSelectFile","e","target","files","length","reader","FileReader","addEventListener","result","readAsDataURL","time_zone","name","permissions","edit_account","value","owners","map","owner","span","user","user_id","phone","zIndex","status","email","source","users","phone_numbers","permission","slack_url","slack_active","mailing_street","mailing_unit","mailing_city","state","option","mailing_state","mailing_zip","same_address","billing_street","billing_unit","billing_city","billing_state","billing_zip","created_at","created_by","last_edited_at","last_edited_by","stopPropagation","document","getElementById","click"],"mappings":"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","sourcesContent":["import axios from \"axios\"\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport Icon from \"../../components/Icon\"\nimport { nError } from \"../../funcs\"\nimport Account from \"../../models/Account\"\nimport { StoreDispatch, StoreState, mapDispatchToProps, mapStateToProps } from \"../../store\";\nimport Datetime from 'react-datetime'\n\nimport \"../../styles/pages/common/entity-edit.sass\"\nimport moment from \"moment\"\nimport Select from \"../../components/Select\"\nimport Checkbox from \"../../components/Checkbox\"\nimport { useRoute } from \"react-router5\"\nimport AccountCustom from \"../../models/AccountCustom\"\nimport ReactCrop, { Crop } from \"react-image-crop\"\nimport Switcher from \"../../components/Switcher\"\nimport ReactInputMask from \"react-input-mask\"\n\ninterface Props {\n  store: StoreState,\n  dispatcher: StoreDispatch\n}\n\ninterface AccountData {\n\n\tpermissions: {\n\t\tedit_account: boolean,\n  },\n  \n  account: AccountCustom,\n  \n\tedit: {\n    status: string[],\n    owners: {\n      user_id: string,\n      user: string\n    }[],\n    source: string[],\n    time_zone: string[],\n    permissions: string[],\n    state: string[]\n\t}\n}\n\nconst AccountsPage_Item = connect(mapStateToProps, mapDispatchToProps)(function(props: Props) {\n\n  const [readyToSave, setReadyToSave] = useState(false)\n\n  const $router = useRoute()\n\n  const [editing, setEditing] = useState(false)\n\n  const [inputTypes, setInputTypes] = useState({\n\n    twilio_account_sid: 'password' as 'text' | 'password',\n    twilio_call_token: 'password' as 'text' | 'password',\n    twilio_token: 'password' as 'text' | 'password',\n  })\n\n  const [deleting, setDeleting] = useState(false)\n  const [readyToDelete, setReadyToDelete] = useState(false)\n  \n  const [accountData, setAccountData] = useState<AccountData | null>(null)\n\n  const [avatarPopup, setAvatarPopup] = useState(false)\n  const [avatarImageSrc, setAvatarImageSrc] = useState('')\n  const [avatarCrop, setAvatarCrop] = useState<Partial<Crop>>({\n    unit: '%',\n    width: 30,\n    aspect: 1\n  })\n\n  const [editions, setEditions] = useState<{\n    time_zone: string[],\n    source: string[],\n    status: string[],\n    owners: {\n      user: string,\n      user_id: string\n    }[],\n    permissions: string[],\n    state: string[]\n  } | null>(null)\n\n  const [newAccountData, setNewAccountData] = useState<Partial<AccountCustom>>({\n    \n  })\n\n  // Load info function\n  async function loadInfo() {\n    try {\n      const { data: accountData } = (await axios.get('/json/account.json')) as {data: AccountData}\n\n      setAccountData(accountData)\n      setEditions(accountData.edit)\n      setNewAccountData(accountData.account)\n\n      setTimeout(() => setReadyToSave(false), 100)\n    }\n    catch (error) {\n      nError(error)\n    }\n  }\n\n  // Load account data\n  useEffect(() => {\n    loadInfo()\n  }, [])\n\n  // On select file function\n  function onSelectFile(e: any) {\n    if (e.target.files && e.target.files.length > 0) {\n      const reader = new FileReader();\n      reader.addEventListener('load', () =>\n        setAvatarImageSrc(reader.result as string)\n      );\n      reader.readAsDataURL(e.target.files[0]);\n    }\n  }\n\n  useEffect(() => setReadyToSave(true), [\n    newAccountData\n  ])\n  \n  // Render function\n  return (<>\n    {accountData && editions && newAccountData.time_zone ? (\n      <div className=\"AccountsPage_Item entity-edit\">\n\n        <div className=\"wrapper flex-container sb\">\n          <div className=\"flex-container _gap-narrow\">\n            <h1>Account:</h1>\n            <div className=\"item-name\">\n              {accountData.account.name}\n            </div>\n          </div>\n\n          {accountData?.permissions.edit_account && !editing ? (\n            <button className=\"_wa _green\" onClick={() => setEditing(true)}>\n              Edit\n            </button>\n          ) : null}\n        </div>\n        \n        <div className=\"fieldset\">\n          \n          <div className=\"legend\">Main</div>\n\n          <div className=\"fields\">\n\n            <div className=\"__left\">\n              <div className=\"field\">\n                <span>Name:</span>\n                <input type=\"text\" disabled={!editing} defaultValue={accountData.account.name} onChange={({target: {value}}) => setNewAccountData({...newAccountData, name: value})} />\n              </div>\n\n              <div className=\"field\">\n                <span>Owner:</span>\n                <Select disabled={!editing} options={editions.owners.map((owner) => ({\n                  span: owner.user,\n                  value: owner.user_id\n                }))} selectedOption={newAccountData.owner as string} onChange={(value: string) => setNewAccountData({...newAccountData, owner: value})}/>\n              </div>\n\n              <div className=\"field\">\n                <span>Phone:</span>\n                <ReactInputMask disabled={!editing} type=\"text\" mask=\"+1 (999) 999-9999\" defaultValue={newAccountData.phone} onChange={({target: {value}}) => setNewAccountData({...newAccountData, phone: value})} />\n              </div>\n            </div>\n\n            <div className=\"__right\">\n              <div className=\"field\" style={{zIndex: 5}}>\n                <span>Status:</span>\n                <Select disabled={!editing} options={editions.status.map((status) => ({\n                  span: status,\n                  value: status\n                }))} selectedOption={newAccountData.status as string} onChange={(value: string) => setNewAccountData({...newAccountData, status: value})}/>\n              </div>\n\n              <div className=\"field\">\n                <span>Email:</span>\n                <input type=\"text\" defaultValue={accountData.account.email} disabled={!editing} />\n              </div>\n\n              <div className=\"field\">\n                <span>Source:</span>\n                <Select disabled={!editing} options={editions.source.map((source) => ({\n                  span: source,\n                  value: source\n                }))} selectedOption={newAccountData.source as string} onChange={(value: string) => setNewAccountData({...newAccountData, source: value})}/>\n              </div>\n            </div>\n\n            <div className=\"avatar-editing\">\n              <button className=\"_zeroed _iconed\" onClick={() => editing && setAvatarPopup(true)}>\n                <Icon icon=\"user-20\" />\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"fieldset\">\n          \n          <div className=\"legend\">Statistics</div>\n\n          <div className=\"fields\">\n\n            <div className=\"__left\">\n              <div className=\"field\">\n                <span>Users:</span>\n                <input type=\"text\" disabled={true} defaultValue={accountData.account.users} onChange={({target: {value}}) => setNewAccountData({...newAccountData, users: value})} />\n              </div>\n            </div>\n\n            <div className=\"__right\">\n              <div className=\"field\">\n                <span>Phone Numbers:</span>\n                <input type=\"text\" disabled={true} defaultValue={accountData.account.phone_numbers} onChange={({target: {value}}) => setNewAccountData({...newAccountData, phone_numbers: value})} />\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"fieldset\">\n          \n          <div className=\"legend\">Twilio</div>\n\n          <div className=\"fields\">\n\n            <div className=\"__left\">\n              <div className=\"field\">\n                <span>Account SID:</span>\n                <div className=\"form-field _iconed\">\n                  <input disabled={!editing} type={inputTypes.twilio_account_sid} readOnly={inputTypes.twilio_account_sid !== 'text'} defaultValue={newAccountData.twilio_account_sid} onChange={({target: {value}}) => setNewAccountData({...newAccountData, twilio_account_sid: value})} />\n                  <button className=\"_zeroed _iconed\" onClick={() => setInputTypes({...inputTypes, twilio_account_sid: inputTypes.twilio_account_sid === 'text' ? 'password' : 'text'})}>\n                    <Icon icon=\"eye-4\"/>\n                  </button>\n                </div>\n              </div>\n\n              <div className=\"field\">\n                <span>Call Token:</span>\n                <div className=\"form-field _iconed\">\n                  <input disabled={!editing} type={inputTypes.twilio_call_token} readOnly={inputTypes.twilio_call_token !== 'text'} defaultValue={newAccountData.twilio_call_token} onChange={({target: {value}}) => setNewAccountData({...newAccountData, twilio_call_token: value})} />\n                  <button className=\"_zeroed _iconed\" onClick={() => setInputTypes({...inputTypes, twilio_call_token: inputTypes.twilio_call_token === 'text' ? 'password' : 'text'})}>\n                    <Icon icon=\"eye-4\"/>\n                  </button>\n                </div>\n              </div>\n            </div>\n\n            \n            <div className=\"__right\">\n\n              <div className=\"field\">\n                <span>Token:</span>\n                <div className=\"form-field _iconed\">\n                  <input disabled={!editing} type={inputTypes.twilio_token} readOnly={inputTypes.twilio_token !== 'text'} defaultValue={newAccountData.twilio_token} onChange={({target: {value}}) => setNewAccountData({...newAccountData, twilio_token: value})} />\n                  <button className=\"_zeroed _iconed\" onClick={() => setInputTypes({...inputTypes, twilio_token: inputTypes.twilio_token === 'text' ? 'password' : 'text'})}>\n                    <Icon icon=\"eye-4\"/>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"fieldset\">\n          \n          <div className=\"legend\">Settings</div>\n\n          <div className=\"fields\">\n\n            <div className=\"__left\">\n\n              <div className=\"field\">\n                <span>Permission:</span>\n                <Select disabled={!editing} options={editions.permissions.map((permission) => ({\n                  span: permission,\n                  value: permission\n                }))} selectedOption={newAccountData.permission as string} onChange={(value: string) => setNewAccountData({...newAccountData, permission: value})}/>\n              </div>\n\n              <div className=\"field\">\n                <span>Slack Url:</span>\n                <input type=\"text\" disabled={!editing} defaultValue={accountData.account.slack_url} onChange={({target: {value}}) => setNewAccountData({...newAccountData, slack_url: value})} />\n              </div>\n            </div>\n\n            <div className=\"__right\">\n\n              <div className=\"field\">\n                <span>Time Zone:</span>\n                <Select disabled={!editing} options={editions.time_zone.map((time_zone) => ({\n                  span: time_zone,\n                  value: time_zone\n                }))} selectedOption={newAccountData.time_zone as string} onChange={(value: string) => setNewAccountData({...newAccountData, time_zone: value})}/>\n              </div>\n\n              <div className=\"field\">\n                <span>Slack:</span>\n                <Switcher disabled={!editing} checked={newAccountData.slack_active} onChange={(value) => setNewAccountData({...newAccountData, slack_active: value})} />\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"fieldset\">\n          \n          <div className=\"legend\">Mailing Address</div>\n\n          <div className=\"fields\">\n\n            <div className=\"__left\">\n              <div className=\"field\">\n                <span>Street:</span>\n                <input type=\"text\" disabled={!editing} defaultValue={accountData.account.mailing_street} onChange={({target: {value}}) => setNewAccountData({...newAccountData, mailing_street: value})} />\n              </div>\n\n              <div className=\"field\">\n                <span>Unit/Apt:</span>\n                <input type=\"text\" disabled={!editing} defaultValue={accountData.account.mailing_unit} onChange={({target: {value}}) => setNewAccountData({...newAccountData, mailing_unit: value})} />\n              </div>\n\n              <div className=\"field\">\n                <span>City:</span>\n                <input type=\"text\" disabled={!editing} defaultValue={accountData.account.mailing_city} onChange={({target: {value}}) => setNewAccountData({...newAccountData, mailing_city: value})} />\n              </div>\n            </div>\n\n            <div className=\"__right\">\n              <div className=\"field\">\n                <span>State:</span>\n                <Select disabled={!editing} options={editions.state.map((option) => ({\n                  span: option,\n                  value: option\n                }))} selectedOption={newAccountData.mailing_state as string} onChange={(value: string) => setNewAccountData({...newAccountData, mailing_state: value})}/>\n              </div>\n\n              <div className=\"field\">\n                <span>Zip:</span>\n                <input type=\"text\" disabled={!editing} defaultValue={accountData.account.mailing_zip} onChange={({target: {value}}) => setNewAccountData({...newAccountData, mailing_zip: value})} />\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"fieldset\">\n          \n          <div className=\"flex-container sb wrap\">\n            <div className=\"legend\">Billing Address</div>\n\n            {editing ? (\n              <div className=\"legend-action-wrapper\">\n                <label>Same as Mailing Address:</label>\n\n                <div className=\"input-wrapper\">\n                  <Checkbox contents='' value={newAccountData.same_address} onChange={(value) => setNewAccountData({...newAccountData, same_address: value})} />\n                </div>\n              </div>\n            ) : null}\n          </div>\n\n          {!editing || !newAccountData.same_address ? (\n            <div className=\"fields\">\n\n              <div className=\"__left\">\n                <div className=\"field\">\n                  <span>Street:</span>\n                  <input type=\"text\" disabled={!editing} defaultValue={accountData.account.billing_street} onChange={({target: {value}}) => setNewAccountData({...newAccountData, billing_street: value})} />\n                </div>\n\n                <div className=\"field\">\n                  <span>Unit/Apt:</span>\n                  <input type=\"text\" disabled={!editing} defaultValue={accountData.account.billing_unit} onChange={({target: {value}}) => setNewAccountData({...newAccountData, billing_unit: value})} />\n                </div>\n\n                <div className=\"field\">\n                  <span>City:</span>\n                  <input type=\"text\" disabled={!editing} defaultValue={accountData.account.billing_city} onChange={({target: {value}}) => setNewAccountData({...newAccountData, billing_city: value})} />\n                </div>\n              </div>\n\n              <div className=\"__right\">\n                <div className=\"field\">\n                  <span>State:</span>\n                  <Select disabled={!editing} options={editions.state.map((option) => ({\n                    span: option,\n                    value: option\n                  }))} selectedOption={newAccountData.billing_state as string} onChange={(value: string) => setNewAccountData({...newAccountData, billing_state: value})}/>\n                </div>\n\n                <div className=\"field\">\n                  <span>Zip:</span>\n                  <input type=\"text\" disabled={!editing} defaultValue={accountData.account.billing_zip} onChange={({target: {value}}) => setNewAccountData({...newAccountData, billing_zip: value})} />\n                </div>\n              </div>\n            </div>\n          ) : null}\n        </div>\n\n        <div className=\"fieldset\">\n          \n          <div className=\"legend\">Info</div>\n\n          <div className=\"fields\">\n\n            <div className=\"__left\">\n              <div className=\"field\">\n                <span>Date Created:</span>\n                <input type=\"text\" defaultValue={newAccountData.created_at} disabled={ true } />\n              </div>\n\n              <div className=\"field\">\n                <span>Created by:</span>\n                <input type=\"text\" defaultValue={newAccountData.created_by} disabled={ true } />\n              </div>\n            </div>\n\n            \n            <div className=\"__right\">\n\n              <div className=\"field\">\n                <span>Last Edited:</span>\n                <input type=\"text\" defaultValue={newAccountData.last_edited_at} disabled={ true } />\n              </div>\n\n              <div className=\"field\">\n                <span>Last Edited By:</span>\n                <input type=\"text\" defaultValue={newAccountData.last_edited_by} disabled={ true } />\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {editing ? (\n          <div className=\"wrapper flex-container sb editing-buttons\">\n            <div>\n              <button className=\"_red\" onClick={() => setDeleting(true)}>Delete Account</button>\n            </div>\n            <div className=\"buttons\">\n              <button className=\"_bordered _red\" onClick={() => setEditing(false)}>\n                Cancel\n              </button>\n              <button disabled={!readyToSave} className=\"_bordered _green\">\n                Save\n              </button>\n            </div>\n          </div>\n        ) : null}\n\n        {avatarPopup ? (\n          <div className=\"popup imageCrop\" onClick={() => setAvatarPopup(false)}>\n\n            <div className=\"wrapper\" onClick={(e) => e.stopPropagation()}>\n              \n              <div>\n                <input type=\"file\" accept=\"image/*\" onChange={onSelectFile} id=\"file-uploader\" />\n                <button className=\"_wa _iconed _bordered _blue\" onClick={() => document.getElementById('file-uploader')?.click()}>\n                  <Icon icon=\"account-33\" />\n                  <span>Upload a File</span>\n                </button>\n              </div>\n\n              <div>\n                {avatarImageSrc && (\n                  <ReactCrop\n                    src={avatarImageSrc}\n                    crop={avatarCrop}\n                    onChange={(value) => setAvatarCrop(value)}\n                  />\n                )}\n              </div>\n            </div>\n          </div>\n        ) : null}\n\n        {/* Item delete popup */}\n        {deleting ? (\n          <div className=\"item-delete-popup\" onClick={() => setDeleting(false)}>\n\n            <div className=\"wrapper\" onClick={(e) => e.stopPropagation()}>\n            \n              <div className=\"title\">\n                Delete Account\n              </div>\n\n              <div className=\"checkbox-wrapper\">\n                <Checkbox contents=\"I understand that after deleting the account it will not be possible to recover.\" value={readyToDelete} onChange={(value) => setReadyToDelete(value)} />\n              </div>\n\n              <div className=\"buttons\">\n\n                <button className=\"_bordered _green\" onClick={() => setDeleting(false)}>\n                  Cancel\n                </button>\n\n                <button disabled={!readyToDelete} className=\"_bordered _red\">\n                  Delete\n                </button>\n              </div>\n            </div>\n          </div>\n        ) : null}\n      </div>\n    ) : null}\n  </>)\n})\nexport default AccountsPage_Item\n"]},"metadata":{},"sourceType":"module"}