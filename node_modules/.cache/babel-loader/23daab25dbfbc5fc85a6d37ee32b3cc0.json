{"ast":null,"code":"var _jsxFileName = \"/Users/nicole/rrrr/crm/src/pages/CallCenter/Settings.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport Icon from \"../../components/Icon\";\nimport { nError } from \"../../funcs\";\nimport { mapDispatchToProps, mapStateToProps } from \"../../store\";\nimport \"../../styles/pages/common/entity-edit.sass\";\nimport { BaseLink, useRoute } from \"react-router5\";\nimport Switcher from \"../../components/Switcher\";\nimport classNames from \"classnames\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CallCenter_SettingsPage_Item = connect(mapStateToProps, mapDispatchToProps)(_s(function (props) {\n  _s();\n\n  const [readyToSave, setReadyToSave] = useState(false);\n  const $router = useRoute();\n  const [settingsData, setSettingsData] = useState(null);\n  const [newSettingsData, setNewSettingsData] = useState({});\n  const [inputTypes, setInputTypes] = useState({\n    twilio_account_sid: 'password',\n    twilio_call_token: 'password',\n    twilio_token: 'password'\n  }); // Load info function\n\n  async function loadInfo() {\n    try {\n      const {\n        data: settingsData\n      } = await axios.get('/json/call_center_settings.json');\n      setSettingsData(settingsData);\n      setNewSettingsData({ ...newSettingsData,\n        ...settingsData.call_settings\n      });\n      setTimeout(() => setReadyToSave(false), 100);\n    } catch (error) {\n      nError(error);\n    }\n  } // Load setting data\n\n\n  useEffect(() => {\n    loadInfo();\n  }, []); // Watch changes\n\n  useEffect(() => {\n    setReadyToSave(true);\n  }, [newSettingsData]); // Render function\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: newSettingsData ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"CallCenter_SettingsPage_Item entity-edit\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top-nav\",\n        children: [/*#__PURE__*/_jsxDEV(BaseLink, {\n          router: $router.router,\n          routeName: \"call_center.phoneNumbers\",\n          className: classNames({\n            _active: $router.route.name === \"call_center.phoneNumbers\"\n          }),\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            icon: \"phone-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Phone Numbers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BaseLink, {\n          router: $router.router,\n          routeName: \"call_center.dispatchers\",\n          className: classNames({\n            _active: $router.route.name === \"call_center.dispatchers\"\n          }),\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            icon: \"user-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Dispatchers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BaseLink, {\n          router: $router.router,\n          routeName: \"call_center.groups\",\n          className: classNames({\n            _active: $router.route.name === \"call_center.groups\"\n          }),\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            icon: \"user-29\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Groups\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BaseLink, {\n          router: $router.router,\n          routeName: \"call_center.callFlows\",\n          className: classNames({\n            _active: $router.route.name === \"call_center.callFlows\"\n          }),\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            icon: \"share-7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Call Flows\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BaseLink, {\n          router: $router.router,\n          routeName: \"call_center.settings\",\n          className: classNames({\n            _active: $router.route.name === \"call_center.settings\"\n          }),\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            icon: \"gear-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fieldset\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend\",\n          children: \"Main\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fields\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"__left\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Call center:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Switcher, {\n                checked: newSettingsData.active,\n                onChange: value => setNewSettingsData({ ...newSettingsData,\n                  active: value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fieldset\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend\",\n          children: \"Twilio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fields\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"__left\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Account SID:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-field _iconed\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: inputTypes.twilio_account_sid,\n                  readOnly: inputTypes.twilio_account_sid !== 'text',\n                  defaultValue: newSettingsData.twilio_account_sid,\n                  onChange: _ref => {\n                    let {\n                      target: {\n                        value\n                      }\n                    } = _ref;\n                    return setNewSettingsData({ ...newSettingsData,\n                      twilio_account_sid: value\n                    });\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"_zeroed _iconed\",\n                  onClick: () => setInputTypes({ ...inputTypes,\n                    twilio_account_sid: inputTypes.twilio_account_sid === 'text' ? 'password' : 'text'\n                  }),\n                  children: /*#__PURE__*/_jsxDEV(Icon, {\n                    icon: \"eye-4\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 149,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Call Token:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-field _iconed\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: inputTypes.twilio_call_token,\n                  readOnly: inputTypes.twilio_call_token !== 'text',\n                  defaultValue: newSettingsData.twilio_call_token,\n                  onChange: _ref2 => {\n                    let {\n                      target: {\n                        value\n                      }\n                    } = _ref2;\n                    return setNewSettingsData({ ...newSettingsData,\n                      twilio_call_token: value\n                    });\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"_zeroed _iconed\",\n                  onClick: () => setInputTypes({ ...inputTypes,\n                    twilio_call_token: inputTypes.twilio_call_token === 'text' ? 'password' : 'text'\n                  }),\n                  children: /*#__PURE__*/_jsxDEV(Icon, {\n                    icon: \"eye-4\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 159,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"__right\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Token:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-field _iconed\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: inputTypes.twilio_token,\n                  readOnly: inputTypes.twilio_token !== 'text',\n                  defaultValue: newSettingsData.twilio_token,\n                  onChange: _ref3 => {\n                    let {\n                      target: {\n                        value\n                      }\n                    } = _ref3;\n                    return setNewSettingsData({ ...newSettingsData,\n                      twilio_token: value\n                    });\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"_zeroed _iconed\",\n                  onClick: () => setInputTypes({ ...inputTypes,\n                    twilio_token: inputTypes.twilio_token === 'text' ? 'password' : 'text'\n                  }),\n                  children: /*#__PURE__*/_jsxDEV(Icon, {\n                    icon: \"eye-4\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 173,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fieldset\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend\",\n          children: \"Info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fields\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"__left\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Last Edited:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                defaultValue: newSettingsData.last_edited_at,\n                disabled: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"__right\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Last Edited By:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                defaultValue: newSettingsData.last_edited_by,\n                disabled: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrapper flex-container sb editing-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"_bordered _red\",\n            onClick: () => $router.router.navigate('call_center', {}, {\n              reload: true\n            }),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: !readyToSave,\n            className: \"_bordered _green\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this) : null\n  }, void 0, false);\n}, \"vIAPKRfo9jmyu7SqqnyjpcIcdtA=\", false, function () {\n  return [useRoute];\n}));\nexport default CallCenter_SettingsPage_Item;","map":{"version":3,"sources":["/Users/nicole/rrrr/crm/src/pages/CallCenter/Settings.tsx"],"names":["axios","React","useEffect","useState","connect","Icon","nError","mapDispatchToProps","mapStateToProps","BaseLink","useRoute","Switcher","classNames","CallCenter_SettingsPage_Item","props","readyToSave","setReadyToSave","$router","settingsData","setSettingsData","newSettingsData","setNewSettingsData","inputTypes","setInputTypes","twilio_account_sid","twilio_call_token","twilio_token","loadInfo","data","get","call_settings","setTimeout","error","router","_active","route","name","active","value","target","last_edited_at","last_edited_by","navigate","reload"],"mappings":"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","sourcesContent":["import axios from \"axios\"\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport Icon from \"../../components/Icon\"\nimport { nError } from \"../../funcs\"\nimport { StoreDispatch, StoreState, mapDispatchToProps, mapStateToProps } from \"../../store\";\nimport Datetime from 'react-datetime'\n\nimport \"../../styles/pages/common/entity-edit.sass\"\nimport moment from \"moment\"\nimport Select from \"../../components/Select\"\nimport Checkbox from \"../../components/Checkbox\"\nimport { BaseLink, useRoute } from \"react-router5\"\nimport Switcher from \"../../components/Switcher\"\nimport classNames from \"classnames\"\n\ninterface Props {\n  store: StoreState,\n  dispatcher: StoreDispatch\n}\n\ninterface SettingsData {\n\tpermissions: {\n\t\tedit_call_settings: boolean\n\t},\n  call_settings: {\n    \n    active: boolean,\n    twilio_account_sid: string,\n    twilio_call_token: string,\n    twilio_token: string,\n\n    created_at: string,\n    created_by: string,\n    last_edited_at: string,\n    last_edited_by: string\n  }\n}\n\nconst CallCenter_SettingsPage_Item = connect(mapStateToProps, mapDispatchToProps)(function(props: Props) {\n\n  const [readyToSave, setReadyToSave] = useState(false)\n\n  const $router = useRoute()\n  \n  const [settingsData, setSettingsData] = useState<SettingsData | null>(null)\n\n  const [newSettingsData, setNewSettingsData] = useState<{[key: string]: any}>({\n    \n  })\n\n  const [inputTypes, setInputTypes] = useState({\n\n    twilio_account_sid: 'password' as 'text' | 'password',\n    twilio_call_token: 'password' as 'text' | 'password',\n    twilio_token: 'password' as 'text' | 'password',\n  })\n\n  // Load info function\n  async function loadInfo() {\n    try {\n      const { data: settingsData } = (await axios.get('/json/call_center_settings.json')) as {data: SettingsData}\n\n      setSettingsData(settingsData)\n      setNewSettingsData({\n        ...newSettingsData,\n        ...settingsData.call_settings\n      })\n\n      setTimeout(() => setReadyToSave(false), 100)\n    }\n    catch (error) {\n      nError(error)\n    }\n  }\n\n  // Load setting data\n  useEffect(() => {\n    loadInfo()\n  }, [])\n\n  // Watch changes\n  useEffect(() => {\n    setReadyToSave(true)\n  }, [\n    newSettingsData\n  ])\n  \n  // Render function\n  return (<>\n    {newSettingsData ? (\n      <div className=\"CallCenter_SettingsPage_Item entity-edit\">\n\n        {/* Top navigation */}\n        <div className=\"top-nav\">\n          <BaseLink router={$router.router} routeName=\"call_center.phoneNumbers\" className={classNames({_active: $router.route.name === \"call_center.phoneNumbers\"})}>\n            <Icon icon=\"phone-1\" />\n            <span>Phone Numbers</span>\n          </BaseLink>\n\n          <BaseLink router={$router.router} routeName=\"call_center.dispatchers\" className={classNames({_active: $router.route.name === \"call_center.dispatchers\"})}>\n            <Icon icon=\"user-1\" />\n            <span>Dispatchers</span>\n          </BaseLink>\n\n          <BaseLink router={$router.router} routeName=\"call_center.groups\" className={classNames({_active: $router.route.name === \"call_center.groups\"})}>\n            <Icon icon=\"user-29\" />\n            <span>Groups</span>\n          </BaseLink>\n\n          <BaseLink router={$router.router} routeName=\"call_center.callFlows\" className={classNames({_active: $router.route.name === \"call_center.callFlows\"})}>\n            <Icon icon=\"share-7\" />\n            <span>Call Flows</span>\n          </BaseLink>\n\n          <BaseLink router={$router.router} routeName=\"call_center.settings\" className={classNames({_active: $router.route.name === \"call_center.settings\"})}>\n            <Icon icon=\"gear-1\" />\n            <span>Settings</span>\n          </BaseLink>\n        </div>\n        \n        <div className=\"fieldset\">\n          \n          <div className=\"legend\">Main</div>\n\n          <div className=\"fields\">\n\n            <div className=\"__left\">\n              <div className=\"field\">\n                <span>Call center:</span>\n                <Switcher checked={newSettingsData.active} onChange={(value) => setNewSettingsData({...newSettingsData, active: value})} />\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"fieldset\">\n          \n          <div className=\"legend\">Twilio</div>\n\n          <div className=\"fields\">\n\n            <div className=\"__left\">\n              <div className=\"field\">\n                <span>Account SID:</span>\n                <div className=\"form-field _iconed\">\n                  <input type={inputTypes.twilio_account_sid} readOnly={inputTypes.twilio_account_sid !== 'text'} defaultValue={newSettingsData.twilio_account_sid} onChange={({target: {value}}) => setNewSettingsData({...newSettingsData, twilio_account_sid: value})} />\n                  <button className=\"_zeroed _iconed\" onClick={() => setInputTypes({...inputTypes, twilio_account_sid: inputTypes.twilio_account_sid === 'text' ? 'password' : 'text'})}>\n                    <Icon icon=\"eye-4\"/>\n                  </button>\n                </div>\n              </div>\n\n              <div className=\"field\">\n                <span>Call Token:</span>\n                <div className=\"form-field _iconed\">\n                  <input type={inputTypes.twilio_call_token} readOnly={inputTypes.twilio_call_token !== 'text'} defaultValue={newSettingsData.twilio_call_token} onChange={({target: {value}}) => setNewSettingsData({...newSettingsData, twilio_call_token: value})} />\n                  <button className=\"_zeroed _iconed\" onClick={() => setInputTypes({...inputTypes, twilio_call_token: inputTypes.twilio_call_token === 'text' ? 'password' : 'text'})}>\n                    <Icon icon=\"eye-4\"/>\n                  </button>\n                </div>\n              </div>\n            </div>\n\n            \n            <div className=\"__right\">\n\n              <div className=\"field\">\n                <span>Token:</span>\n                <div className=\"form-field _iconed\">\n                  <input type={inputTypes.twilio_token} readOnly={inputTypes.twilio_token !== 'text'} defaultValue={newSettingsData.twilio_token} onChange={({target: {value}}) => setNewSettingsData({...newSettingsData, twilio_token: value})} />\n                  <button className=\"_zeroed _iconed\" onClick={() => setInputTypes({...inputTypes, twilio_token: inputTypes.twilio_token === 'text' ? 'password' : 'text'})}>\n                    <Icon icon=\"eye-4\"/>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"fieldset\">\n          \n          <div className=\"legend\">Info</div>\n\n          <div className=\"fields\">\n\n            <div className=\"__left\">\n\n              <div className=\"field\">\n                <span>Last Edited:</span>\n                <input type=\"text\" defaultValue={newSettingsData.last_edited_at} disabled={ true } />\n              </div>\n            </div>\n\n            \n            <div className=\"__right\">\n\n              <div className=\"field\">\n                <span>Last Edited By:</span>\n                <input type=\"text\" defaultValue={newSettingsData.last_edited_by} disabled={ true } />\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"wrapper flex-container sb editing-buttons\">\n          <div />\n          <div className=\"buttons\">\n            <button className=\"_bordered _red\" onClick={() => $router.router.navigate('call_center', {}, {\n              reload: true\n            })}>\n              Cancel\n            </button>\n            <button disabled={!readyToSave} className=\"_bordered _green\">\n              Save\n            </button>\n          </div>\n        </div>\n      </div>\n    ) : null}\n  </>)\n})\nexport default CallCenter_SettingsPage_Item\n"]},"metadata":{},"sourceType":"module"}