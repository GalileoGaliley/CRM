{"ast":null,"code":"import { DateTime } from \"luxon\";\nimport { store } from \"../store\";\nexport function getDateRangeByPreset(preset, min_date, max_date) {\n  let user = store.getState().user;\n  let timeZone = user === null || user === void 0 ? void 0 : user.time_zone;\n  const now = DateTime.now().setZone(timeZone).startOf('day');\n  min_date = DateTime.fromJSDate(min_date).setZone(timeZone).startOf('day').toJSDate();\n  max_date = DateTime.fromJSDate(max_date).setZone(timeZone).endOf('day').toJSDate();\n  if (preset === 'last_7_days') return {\n    min_date: now.minus({\n      days: 6\n    }).toJSDate(),\n    max_date: now.endOf('day').toJSDate()\n  };\n  if (preset === 'last_14_days') return {\n    min_date: now.minus({\n      days: 13\n    }).toJSDate(),\n    max_date: now.endOf('day').toJSDate()\n  };\n  if (preset === 'last_30_days') return {\n    min_date: now.minus({\n      days: 29\n    }).toJSDate(),\n    max_date: now.endOf('day').toJSDate()\n  };\n  if (preset === 'last_business_week') return {\n    min_date: now.minus({\n      weeks: 1\n    }).set({\n      weekday: 1\n    }).toJSDate(),\n    max_date: now.minus({\n      weeks: 1\n    }).set({\n      weekday: 5\n    }).endOf('day').toJSDate()\n  };\n  if (preset === 'last_month') return {\n    min_date: now.minus({\n      months: 1\n    }).startOf('month').toJSDate(),\n    max_date: now.minus({\n      months: 1\n    }).endOf('month').endOf('day').toJSDate()\n  };\n  if (preset === 'this_month') return {\n    min_date: now.startOf('month').toJSDate(),\n    max_date: now.endOf('month').toJSDate()\n  };\n  if (preset === 'this_week_mon_today') return {\n    min_date: now.minus({\n      weeks: 1\n    }).set({\n      weekday: 1\n    }).toJSDate(),\n    max_date: now.endOf('day').toJSDate()\n  };\n  if (preset === 'this_week_sun_today') return {\n    min_date: now.set({\n      weekday: 0\n    }).toJSDate(),\n    max_date: now.endOf('day').toJSDate()\n  };\n  if (preset === 'today') return {\n    min_date: now.startOf('day').toJSDate(),\n    max_date: now.endOf('day').toJSDate()\n  };\n  if (preset === 'tomorrow') return {\n    min_date: now.plus({\n      days: 1\n    }).startOf('day').toJSDate(),\n    max_date: now.plus({\n      days: 1\n    }).endOf('day').toJSDate()\n  };\n  if (preset === 'tomorrow_and_next') return {\n    min_date: now.plus({\n      days: 1\n    }).toJSDate(),\n    max_date: (() => {\n      if (DateTime.fromJSDate(max_date) < now.plus({\n        days: 1\n      })) return now.plus({\n        days: 1\n      }).endOf('day').toJSDate();\n      return max_date;\n    })()\n  };\n  if (preset === 'yesterday') return {\n    min_date: now.minus({\n      days: 1\n    }).startOf('day').toJSDate(),\n    max_date: now.minus({\n      days: 1\n    }).endOf('day').toJSDate()\n  };\n  if (preset === 'last_week_sun_sat') return {\n    min_date: now.minus({\n      weeks: 1\n    }).set({\n      weekday: 0\n    }).toJSDate(),\n    max_date: now.minus({\n      weeks: 1\n    }).set({\n      weekday: 6\n    }).endOf('day').toJSDate()\n  };\n  if (preset === 'last_week_mon_sun') return {\n    min_date: now.minus({\n      weeks: 1\n    }).set({\n      weekday: 1\n    }).toJSDate(),\n    max_date: now.set({\n      weekday: 0\n    }).endOf('day').toJSDate()\n  };\n  return {\n    min_date,\n    max_date\n  };\n}","map":{"version":3,"sources":["/Users/nicole/rrrr/crm/src/funcs/reports.ts"],"names":["DateTime","store","getDateRangeByPreset","preset","min_date","max_date","user","getState","timeZone","time_zone","now","setZone","startOf","fromJSDate","toJSDate","endOf","minus","days","weeks","set","weekday","months","plus"],"mappings":"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","sourcesContent":["import {DateTime} from \"luxon\"\nimport { DateRangePreset } from \"../models/Misc\"\nimport {store} from \"../store\";\n\nexport function getDateRangeByPreset(preset: DateRangePreset, min_date: Date, max_date: Date): {\n  min_date: Date,\n  max_date: Date,\n\n} {\n  let user = store.getState().user;\n  let timeZone = user?.time_zone;\n\n  const now = DateTime.now().setZone(timeZone).startOf('day')\n\n  min_date = DateTime.fromJSDate(min_date).setZone(timeZone).startOf('day').toJSDate()\n  max_date = DateTime.fromJSDate(max_date).setZone(timeZone).endOf('day').toJSDate();\n\n  if (preset === 'last_7_days')\n    return {\n      min_date: now.minus({days: 6}).toJSDate(),\n      max_date: now.endOf('day').toJSDate(),\n    }\n  \n  if (preset === 'last_14_days')\n    return {\n      min_date: now.minus({days: 13}).toJSDate(),\n      max_date: now.endOf('day').toJSDate(),\n    }\n  \n  if (preset === 'last_30_days')\n    return {\n      min_date: now.minus({days: 29}).toJSDate(),\n      max_date: now.endOf('day').toJSDate(),\n    }\n  \n  if (preset === 'last_business_week')\n    return {\n      min_date: now.minus({weeks: 1}).set({weekday: 1}).toJSDate(),\n      max_date: now.minus({weeks: 1}).set({weekday: 5}).endOf('day').toJSDate(),\n    }\n  \n  if (preset === 'last_month')\n    return {\n      min_date: now.minus({months: 1}).startOf('month').toJSDate(),\n      max_date: now.minus({months: 1}).endOf('month').endOf('day').toJSDate(),\n    }\n  \n  if (preset === 'this_month')\n    return {\n      min_date: now.startOf('month').toJSDate(),\n      max_date: now.endOf('month').toJSDate(),\n    }\n  \n  if (preset === 'this_week_mon_today')\n    return {\n      min_date: now.minus({weeks: 1}).set({weekday: 1}).toJSDate(),\n      max_date: now.endOf('day').toJSDate(),\n    }\n  \n  if (preset === 'this_week_sun_today')\n    return {\n      min_date: now.set({weekday: 0}).toJSDate(),\n      max_date: now.endOf('day').toJSDate(),\n    }\n  \n  if (preset === 'today')\n    return {\n      min_date: now.startOf('day').toJSDate(),\n      max_date: now.endOf('day').toJSDate(),\n    }\n  \n  if (preset === 'tomorrow')\n    return {\n      min_date: now.plus({days: 1}).startOf('day').toJSDate(),\n      max_date: now.plus({days: 1}).endOf('day').toJSDate(),\n    }\n  \n  if (preset === 'tomorrow_and_next')\n    return {\n      min_date: now.plus({days: 1}).toJSDate(),\n      max_date: (() => {\n\n        if (DateTime.fromJSDate(max_date) < now.plus({days: 1}))\n          return now.plus({ days: 1 }).endOf('day').toJSDate()\n        \n        return max_date\n      })(),\n    }\n  \n  if (preset === 'yesterday')\n    return {\n      min_date: now.minus({days: 1}).startOf('day').toJSDate(),\n      max_date: now.minus({days: 1}).endOf('day').toJSDate(),\n    }\n  \n  if (preset === 'last_week_sun_sat')\n    return {\n      min_date: now.minus({weeks: 1}).set({weekday: 0}).toJSDate(),\n      max_date: now.minus({weeks: 1}).set({weekday: 6}).endOf('day').toJSDate(),\n    }\n  \n  if (preset === 'last_week_mon_sun')\n    return {\n      min_date: now.minus({weeks: 1}).set({weekday: 1}).toJSDate(),\n      max_date: now.set({weekday: 0}).endOf('day').toJSDate(),\n    }\n  \n  return {min_date, max_date}\n}\n"]},"metadata":{},"sourceType":"module"}