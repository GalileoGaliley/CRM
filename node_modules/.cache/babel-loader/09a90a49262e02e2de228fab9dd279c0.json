{"ast":null,"code":"import _slicedToArray from\"/Users/nicole/rrrr/crm/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useRef,useState}from\"react\";import{connect}from\"react-redux\";import{calculateFromPercent,calculatePercent,formatTime}from\"../funcs\";import{mapDispatchToProps,mapStateToProps}from\"../store\";import\"../styles/components/audio-player.sass\";import Icon from\"./Icon\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var AudioPlayer=connect(mapStateToProps,mapDispatchToProps)(function(props){var _$player$current7,_$player$current8;var _useState=useState(0),_useState2=_slicedToArray(_useState,2),rerender=_useState2[0],setRerender=_useState2[1];var $player=useRef(null);var $playerSeeker=useRef(null);var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),progress=_useState4[0],setProgress=_useState4[1];var _useState5=useState(!!props.playing),_useState6=_slicedToArray(_useState5,2),playing=_useState6[0],setPlaying=_useState6[1];// Set progress from prop\nuseEffect(function(){setProgress(props.progress||0);},[props.progress]);// Start or stop\nuseEffect(function(){var _$player$current,_$player$current2;if(props.playing===undefined)return;if(props.playing)(_$player$current=$player.current)===null||_$player$current===void 0?void 0:_$player$current.play();else(_$player$current2=$player.current)===null||_$player$current2===void 0?void 0:_$player$current2.pause();setPlaying(props.playing);},[props.playing]);// On progress change\nfunction onProgressChange(event){var _$player$current3,_$player$current4;setProgress(calculatePercent(((_$player$current3=$player.current)===null||_$player$current3===void 0?void 0:_$player$current3.currentTime)||0,((_$player$current4=$player.current)===null||_$player$current4===void 0?void 0:_$player$current4.duration)||0));}// Seek function\nfunction seek(event){var w100=parseFloat(window.getComputedStyle($playerSeeker.current).width);var w=event.nativeEvent.offsetX;var p=calculatePercent(w,w100);$player.current.currentTime=calculateFromPercent(p,$player.current.currentTime,$player.current.duration);}// Render function\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"AudioPlayer\",children:[/*#__PURE__*/_jsx(\"audio\",{ref:$player,onTimeUpdate:onProgressChange,onPlay:function onPlay(){return setPlaying(true);},onPause:function onPause(){return setPlaying(false);},onDurationChange:function onDurationChange(){return setRerender(Math.random());},onTimeUpdateCapture:function onTimeUpdateCapture(){return setRerender(Math.random());},children:/*#__PURE__*/_jsx(\"source\",{src:props.audioSrc})}),!playing?/*#__PURE__*/_jsx(\"button\",{className:\"_zeroed _iconed play-switcher\",onClick:function onClick(){var _$player$current5;return(_$player$current5=$player.current)===null||_$player$current5===void 0?void 0:_$player$current5.play();},children:/*#__PURE__*/_jsx(Icon,{icon:\"video-15\"})}):/*#__PURE__*/_jsx(\"button\",{className:\"_zeroed _iconed play-switcher\",onClick:function onClick(){var _$player$current6;return(_$player$current6=$player.current)===null||_$player$current6===void 0?void 0:_$player$current6.pause();},children:/*#__PURE__*/_jsx(Icon,{icon:\"media-control-49\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"time\",children:formatTime(((_$player$current7=$player.current)===null||_$player$current7===void 0?void 0:_$player$current7.currentTime)||0)}),/*#__PURE__*/_jsxs(\"div\",{className:\"player-seeker\",onClick:seek,ref:$playerSeeker,children:[/*#__PURE__*/_jsx(\"div\",{className:\"seeker-progress\",style:{width:\"\".concat(progress,\"%\")}}),/*#__PURE__*/_jsx(\"div\",{className:\"seeker-notch\",style:{left:\"\".concat(progress,\"%\")}})]}),/*#__PURE__*/_jsx(\"div\",{className:\"time\",children:formatTime(((_$player$current8=$player.current)===null||_$player$current8===void 0?void 0:_$player$current8.duration)||0)})]});});export default AudioPlayer;","map":{"version":3,"sources":["/Users/nicole/rrrr/crm/src/components/AudioPlayer.tsx"],"names":["React","useEffect","useRef","useState","connect","calculateFromPercent","calculatePercent","formatTime","mapDispatchToProps","mapStateToProps","Icon","AudioPlayer","props","rerender","setRerender","$player","$playerSeeker","progress","setProgress","playing","setPlaying","undefined","current","play","pause","onProgressChange","event","currentTime","duration","seek","w100","parseFloat","window","getComputedStyle","width","w","nativeEvent","offsetX","p","Math","random","audioSrc","left"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { calculateFromPercent, calculatePercent, formatTime } from \"../funcs\"\nimport { StoreDispatch, StoreState, mapDispatchToProps, mapStateToProps } from \"../store\";\n\nimport \"../styles/components/audio-player.sass\"\nimport Icon from \"./Icon\"\n\ninterface Props {\n  store: StoreState,\n  dispatcher: StoreDispatch,\n\n  audioSrc: string,\n  progress?: number,\n  playing?: boolean\n}\n\nconst AudioPlayer = connect(mapStateToProps, mapDispatchToProps)(function(props: Props) {\n\n  const [rerender, setRerender] = useState(0)\n\n  const $player = useRef<HTMLAudioElement>(null)\n  const $playerSeeker = useRef<HTMLDivElement>(null)\n  \n  const [progress, setProgress] = useState(0)\n\n  const [playing, setPlaying] = useState<boolean>(!!props.playing)\n\n  // Set progress from prop\n  useEffect(() => {\n    setProgress(props.progress || 0)\n  }, [props.progress])\n\n  // Start or stop\n  useEffect(() => {\n\n    if (props.playing === undefined) return\n    \n    if(props.playing) $player.current?.play()\n    else $player.current?.pause()\n\n    setPlaying(props.playing)\n  }, [props.playing])\n\n  // On progress change\n  function onProgressChange(event: React.SyntheticEvent<HTMLAudioElement, Event>) {\n    setProgress(calculatePercent($player.current?.currentTime || 0, $player.current?.duration || 0))\n  }\n\n  // Seek function\n  function seek(event: any) {\n\n    let w100 = parseFloat(window.getComputedStyle($playerSeeker.current as any).width)\n    let w = event.nativeEvent.offsetX\n\n    let p = calculatePercent(w, w100);\n\n    ($player.current as any).currentTime = calculateFromPercent(p, ($player.current as any).currentTime, ($player.current as any).duration)\n\n  }\n\n  // Render function\n  return (\n    <div className=\"AudioPlayer\">\n\n      <audio\n        ref={$player}\n        onTimeUpdate={onProgressChange}\n        onPlay={() => setPlaying(true)}\n        onPause={() => setPlaying(false)}\n        onDurationChange={() => setRerender(Math.random())}\n        onTimeUpdateCapture={() => setRerender(Math.random())}\n      >\n        <source src={props.audioSrc}/>\n      </audio>\n      \n      {!playing ? (\n        <button className=\"_zeroed _iconed play-switcher\" onClick={() => $player.current?.play()}>\n          <Icon icon=\"video-15\" />\n        </button>\n      ) : (\n        <button className=\"_zeroed _iconed play-switcher\" onClick={() => $player.current?.pause()}>\n          <Icon icon=\"media-control-49\" />\n        </button>\n      )}\n\n      <div className=\"time\">{formatTime($player.current?.currentTime || 0)}</div>\n\n      <div className=\"player-seeker\" onClick={seek} ref={$playerSeeker}>\n        <div className=\"seeker-progress\" style={{width: `${progress}%`}}></div>\n        <div className=\"seeker-notch\" style={{left: `${progress}%`}}></div>\n      </div>\n\n      <div className=\"time\">{formatTime($player.current?.duration || 0)}</div>\n    </div>\n  )\n})\nexport default AudioPlayer\n"]},"metadata":{},"sourceType":"module"}