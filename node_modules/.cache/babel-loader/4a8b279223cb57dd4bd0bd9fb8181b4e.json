{"ast":null,"code":"var _jsxFileName = \"/Users/nicole/rrrr/crm/src/pages/Accounts/New.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport Icon from \"../../components/Icon\";\nimport { httpClient, nError } from \"../../funcs\";\nimport { mapDispatchToProps, mapStateToProps } from \"../../store\";\nimport \"../../styles/pages/common/entity-edit.sass\";\nimport Select from \"../../components/Select\";\nimport Checkbox from \"../../components/Checkbox\";\nimport { useRoute } from \"react-router5\";\nimport Switcher from \"../../components/Switcher\";\nimport ReactCrop from \"react-image-crop\";\nimport ReactInputMask from \"react-input-mask\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AccountsPage_New = connect(mapStateToProps, mapDispatchToProps)(_s(function (props) {\n  _s();\n\n  const [readyToSave, setReadyToSave] = useState(false);\n  const $router = useRoute();\n  const [avatarPopup, setAvatarPopup] = useState(false);\n  const [avatarImageSrc, setAvatarImageSrc] = useState('');\n  const [avatarCrop, setAvatarCrop] = useState({\n    unit: '%',\n    width: 30,\n    aspect: 1\n  });\n  const [inputTypes, setInputTypes] = useState({\n    twilio_account_sid: 'password',\n    twilio_call_token: 'password',\n    twilio_token: 'password'\n  });\n  const [editions, setEditions] = useState(null);\n  const [newAccountData, setNewAccountData] = useState({}); // Load info function\n\n  async function loadInfo() {\n    try {\n      const {\n        data: accountsData\n      } = await httpClient.get('/accounts');\n      setEditions(accountsData.edit);\n      setNewAccountData({\n        name: '',\n        owner: '',\n        phone: '',\n        status: '',\n        email: '',\n        source: '',\n        users: '',\n        phone_numbers: '',\n        twilio_account_sid: '',\n        twilio_call_token: '',\n        twilio_token: '',\n        slack_url: '',\n        slack_active: true,\n        mailing_street: '',\n        mailing_unit: '',\n        mailing_city: '',\n        mailing_zip: '',\n        mailing_state: accountsData.edit.state[0],\n        billing_street: '',\n        billing_unit: '',\n        billing_city: '',\n        billing_zip: '',\n        billing_state: accountsData.edit.state[0]\n      });\n      setTimeout(() => setReadyToSave(false), 100);\n    } catch (error) {\n      nError(error);\n    }\n  } // Load account data\n\n\n  useEffect(() => {\n    loadInfo();\n  }, []); // On select file function\n\n  function onSelectFile(e) {\n    if (e.target.files && e.target.files.length > 0) {\n      const reader = new FileReader();\n      reader.addEventListener('load', () => setAvatarImageSrc(reader.result));\n      reader.readAsDataURL(e.target.files[0]);\n    }\n  }\n\n  useEffect(() => setReadyToSave(true), [newAccountData]); // Render function\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: editions ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"AccountsPage_New entity-edit\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrapper flex-container sb\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"New account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fieldset\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend\",\n          children: \"Main\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fields\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"__left\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                defaultValue: newAccountData.name,\n                onChange: _ref => {\n                  let {\n                    target: {\n                      value\n                    }\n                  } = _ref;\n                  return setNewAccountData({ ...newAccountData,\n                    name: value\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Owner:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                options: editions.owners.map(owner => ({\n                  span: owner.user,\n                  value: owner.user_id\n                })),\n                selectedOption: newAccountData.owner,\n                onChange: value => setNewAccountData({ ...newAccountData,\n                  owner: value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Phone:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ReactInputMask, {\n                type: \"text\",\n                mask: \"+1 (999) 999-9999\",\n                defaultValue: newAccountData.phone,\n                onChange: _ref2 => {\n                  let {\n                    target: {\n                      value\n                    }\n                  } = _ref2;\n                  return setNewAccountData({ ...newAccountData,\n                    phone: value\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"__right\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              style: {\n                zIndex: 5\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Status:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                options: editions.status.map(status => ({\n                  span: status,\n                  value: status\n                })),\n                selectedOption: newAccountData.status,\n                onChange: value => setNewAccountData({ ...newAccountData,\n                  status: value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Email:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                defaultValue: newAccountData.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Source:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                options: editions.source.map(source => ({\n                  span: source,\n                  value: source\n                })),\n                selectedOption: newAccountData.source,\n                onChange: value => setNewAccountData({ ...newAccountData,\n                  source: value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"avatar-editing\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"_zeroed _iconed\",\n              onClick: () => setAvatarPopup(true),\n              children: /*#__PURE__*/_jsxDEV(Icon, {\n                icon: \"user-20\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fieldset\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend\",\n          children: \"Twilio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fields\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"__left\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Account SID:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-field _iconed\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: inputTypes.twilio_account_sid,\n                  readOnly: inputTypes.twilio_account_sid !== 'text',\n                  defaultValue: newAccountData.twilio_account_sid,\n                  onChange: _ref3 => {\n                    let {\n                      target: {\n                        value\n                      }\n                    } = _ref3;\n                    return setNewAccountData({ ...newAccountData,\n                      twilio_account_sid: value\n                    });\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"_zeroed _iconed\",\n                  onClick: () => setInputTypes({ ...inputTypes,\n                    twilio_account_sid: inputTypes.twilio_account_sid === 'text' ? 'password' : 'text'\n                  }),\n                  children: /*#__PURE__*/_jsxDEV(Icon, {\n                    icon: \"eye-4\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 199,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Call Token:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-field _iconed\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: inputTypes.twilio_call_token,\n                  readOnly: inputTypes.twilio_call_token !== 'text',\n                  defaultValue: newAccountData.twilio_call_token,\n                  onChange: _ref4 => {\n                    let {\n                      target: {\n                        value\n                      }\n                    } = _ref4;\n                    return setNewAccountData({ ...newAccountData,\n                      twilio_call_token: value\n                    });\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"_zeroed _iconed\",\n                  onClick: () => setInputTypes({ ...inputTypes,\n                    twilio_call_token: inputTypes.twilio_call_token === 'text' ? 'password' : 'text'\n                  }),\n                  children: /*#__PURE__*/_jsxDEV(Icon, {\n                    icon: \"eye-4\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 209,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"__right\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Token:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-field _iconed\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: inputTypes.twilio_token,\n                  readOnly: inputTypes.twilio_token !== 'text',\n                  defaultValue: newAccountData.twilio_token,\n                  onChange: _ref5 => {\n                    let {\n                      target: {\n                        value\n                      }\n                    } = _ref5;\n                    return setNewAccountData({ ...newAccountData,\n                      twilio_token: value\n                    });\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"_zeroed _iconed\",\n                  onClick: () => setInputTypes({ ...inputTypes,\n                    twilio_token: inputTypes.twilio_token === 'text' ? 'password' : 'text'\n                  }),\n                  children: /*#__PURE__*/_jsxDEV(Icon, {\n                    icon: \"eye-4\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 223,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fieldset\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend\",\n          children: \"Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fields\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"__left\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Permission:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                options: editions.permissions.map(permission => ({\n                  span: permission,\n                  value: permission\n                })),\n                selectedOption: newAccountData.permission,\n                onChange: value => setNewAccountData({ ...newAccountData,\n                  permission: value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Slack Url:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                defaultValue: newAccountData.slack_url,\n                onChange: _ref6 => {\n                  let {\n                    target: {\n                      value\n                    }\n                  } = _ref6;\n                  return setNewAccountData({ ...newAccountData,\n                    slack_url: value\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"__right\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Time Zone:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                options: editions.time_zone.map(time_zone => ({\n                  span: time_zone,\n                  value: time_zone\n                })),\n                selectedOption: newAccountData.time_zone,\n                onChange: value => setNewAccountData({ ...newAccountData,\n                  time_zone: value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Slack:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Switcher, {\n                checked: newAccountData.slack_active,\n                onChange: value => setNewAccountData({ ...newAccountData,\n                  slack_active: value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fieldset\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend\",\n          children: \"Mailing Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fields\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"__left\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Street:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                defaultValue: newAccountData.mailing_street,\n                onChange: _ref7 => {\n                  let {\n                    target: {\n                      value\n                    }\n                  } = _ref7;\n                  return setNewAccountData({ ...newAccountData,\n                    mailing_street: value\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Unit/Apt:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                defaultValue: newAccountData.mailing_unit,\n                onChange: _ref8 => {\n                  let {\n                    target: {\n                      value\n                    }\n                  } = _ref8;\n                  return setNewAccountData({ ...newAccountData,\n                    mailing_unit: value\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"City:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                defaultValue: newAccountData.mailing_city,\n                onChange: _ref9 => {\n                  let {\n                    target: {\n                      value\n                    }\n                  } = _ref9;\n                  return setNewAccountData({ ...newAccountData,\n                    mailing_city: value\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"__right\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"State:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                options: editions.state.map(option => ({\n                  span: option,\n                  value: option\n                })),\n                selectedOption: newAccountData.mailing_state,\n                onChange: value => setNewAccountData({ ...newAccountData,\n                  mailing_state: value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Zip:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                defaultValue: newAccountData.mailing_zip,\n                onChange: _ref10 => {\n                  let {\n                    target: {\n                      value\n                    }\n                  } = _ref10;\n                  return setNewAccountData({ ...newAccountData,\n                    mailing_zip: value\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fieldset\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-container sb wrap\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend\",\n            children: \"Billing Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-action-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Same as Mailing Address:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-wrapper\",\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                contents: \"\",\n                value: newAccountData.same_address,\n                onChange: value => setNewAccountData({ ...newAccountData,\n                  same_address: value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this), !newAccountData.same_address ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fields\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"__left\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Street:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                defaultValue: newAccountData.billing_street,\n                onChange: _ref11 => {\n                  let {\n                    target: {\n                      value\n                    }\n                  } = _ref11;\n                  return setNewAccountData({ ...newAccountData,\n                    billing_street: value\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Unit/Apt:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                defaultValue: newAccountData.billing_unit,\n                onChange: _ref12 => {\n                  let {\n                    target: {\n                      value\n                    }\n                  } = _ref12;\n                  return setNewAccountData({ ...newAccountData,\n                    billing_unit: value\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"City:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                defaultValue: newAccountData.billing_city,\n                onChange: _ref13 => {\n                  let {\n                    target: {\n                      value\n                    }\n                  } = _ref13;\n                  return setNewAccountData({ ...newAccountData,\n                    billing_city: value\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"__right\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"State:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                options: editions.state.map(option => ({\n                  span: option,\n                  value: option\n                })),\n                selectedOption: newAccountData.billing_state,\n                onChange: value => setNewAccountData({ ...newAccountData,\n                  billing_state: value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Zip:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                defaultValue: newAccountData.billing_zip,\n                onChange: _ref14 => {\n                  let {\n                    target: {\n                      value\n                    }\n                  } = _ref14;\n                  return setNewAccountData({ ...newAccountData,\n                    billing_zip: value\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrapper flex-container sb editing-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"_bordered _red\",\n            onClick: () => $router.router.navigate('accounts', {}, {\n              reload: true\n            }),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: !readyToSave,\n            className: \"_bordered _green\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }, this), avatarPopup ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup imageCrop\",\n        onClick: () => setAvatarPopup(false),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wrapper\",\n          onClick: e => e.stopPropagation(),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \"image/*\",\n              onChange: onSelectFile,\n              id: \"file-uploader\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"_wa _iconed _bordered _blue\",\n              onClick: () => {\n                var _document$getElementB;\n\n                return (_document$getElementB = document.getElementById('file-uploader')) === null || _document$getElementB === void 0 ? void 0 : _document$getElementB.click();\n              },\n              children: [/*#__PURE__*/_jsxDEV(Icon, {\n                icon: \"account-33\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 385,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Upload a File\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: avatarImageSrc && /*#__PURE__*/_jsxDEV(ReactCrop, {\n              src: avatarImageSrc,\n              crop: avatarCrop,\n              onChange: value => setAvatarCrop(value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this) : null\n  }, void 0, false);\n}, \"X8+fQoy1C6GpV7jKUBDOkN6zkvI=\", false, function () {\n  return [useRoute];\n}));\nexport default AccountsPage_New;","map":{"version":3,"sources":["/Users/nicole/rrrr/crm/src/pages/Accounts/New.tsx"],"names":["React","useEffect","useState","connect","Icon","httpClient","nError","mapDispatchToProps","mapStateToProps","Select","Checkbox","useRoute","Switcher","ReactCrop","ReactInputMask","AccountsPage_New","props","readyToSave","setReadyToSave","$router","avatarPopup","setAvatarPopup","avatarImageSrc","setAvatarImageSrc","avatarCrop","setAvatarCrop","unit","width","aspect","inputTypes","setInputTypes","twilio_account_sid","twilio_call_token","twilio_token","editions","setEditions","newAccountData","setNewAccountData","loadInfo","data","accountsData","get","edit","name","owner","phone","status","email","source","users","phone_numbers","slack_url","slack_active","mailing_street","mailing_unit","mailing_city","mailing_zip","mailing_state","state","billing_street","billing_unit","billing_city","billing_zip","billing_state","setTimeout","error","onSelectFile","e","target","files","length","reader","FileReader","addEventListener","result","readAsDataURL","value","owners","map","span","user","user_id","zIndex","permissions","permission","time_zone","option","same_address","router","navigate","reload","stopPropagation","document","getElementById","click"],"mappings":"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","sourcesContent":["import axios from \"axios\"\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport Icon from \"../../components/Icon\"\nimport {httpClient, nError} from \"../../funcs\"\nimport Account from \"../../models/Account\"\nimport { StoreDispatch, StoreState, mapDispatchToProps, mapStateToProps } from \"../../store\";\nimport Datetime from 'react-datetime'\n\nimport \"../../styles/pages/common/entity-edit.sass\"\nimport moment from \"moment\"\nimport Select from \"../../components/Select\"\nimport Checkbox from \"../../components/Checkbox\"\nimport { useRoute } from \"react-router5\"\nimport Switcher from \"../../components/Switcher\"\nimport ReactCrop, { Crop } from \"react-image-crop\"\nimport AccountCustom from \"../../models/AccountCustom\"\nimport ReactInputMask from \"react-input-mask\"\n\ninterface Props {\n  store: StoreState,\n  dispatcher: StoreDispatch\n}\n\nconst AccountsPage_New = connect(mapStateToProps, mapDispatchToProps)(function(props: Props) {\n\n  const [readyToSave, setReadyToSave] = useState(false)\n\n  const $router = useRoute()\n\n  const [avatarPopup, setAvatarPopup] = useState(false)\n  const [avatarImageSrc, setAvatarImageSrc] = useState('')\n  const [avatarCrop, setAvatarCrop] = useState<Partial<Crop>>({\n    unit: '%',\n    width: 30,\n    aspect: 1\n  })\n\n  const [inputTypes, setInputTypes] = useState({\n\n    twilio_account_sid: 'password' as 'text' | 'password',\n    twilio_call_token: 'password' as 'text' | 'password',\n    twilio_token: 'password' as 'text' | 'password',\n  })\n\n  const [editions, setEditions] = useState<{\n    time_zone: string[],\n    source: string[],\n    status: string[],\n    owners: {\n      user: string,\n      user_id: string\n    }[],\n    permissions: string[],\n    state: string[]\n  } | null>(null)\n\n  const [newAccountData, setNewAccountData] = useState<Partial<AccountCustom>>({\n    \n  })\n  \n  // Load info function\n  async function loadInfo() {\n    try {\n      const { data: accountsData } = await httpClient.get('/accounts')\n\n      setEditions(accountsData.edit)\n      setNewAccountData({\n        name: '',\n        owner: '',\n        phone: '',\n        status: '',\n        email: '',\n        source: '',\n        users: '',\n        phone_numbers: '',\n        twilio_account_sid: '',\n        twilio_call_token: '',\n        twilio_token: '',\n        slack_url: '',\n        slack_active: true,\n        mailing_street: '',\n        mailing_unit: '',\n        mailing_city: '',\n        mailing_zip: '',\n        mailing_state: accountsData.edit.state[0],\n        billing_street: '',\n        billing_unit: '',\n        billing_city: '',\n        billing_zip: '',\n        billing_state: accountsData.edit.state[0],\n      })\n\n      setTimeout(() => setReadyToSave(false), 100)\n    }\n    catch (error) {\n      nError(error)\n    }\n  }\n\n  // Load account data\n  useEffect(() => {\n    loadInfo()\n  }, [])\n\n  // On select file function\n  function onSelectFile(e: any) {\n    if (e.target.files && e.target.files.length > 0) {\n      const reader = new FileReader();\n      reader.addEventListener('load', () =>\n        setAvatarImageSrc(reader.result as string)\n      );\n      reader.readAsDataURL(e.target.files[0]);\n    }\n  }\n\n  useEffect(() => setReadyToSave(true), [\n    newAccountData\n  ])\n  \n  // Render function\n  return (<>\n    {editions ? (\n      <div className=\"AccountsPage_New entity-edit\">\n\n        <div className=\"wrapper flex-container sb\">\n          <h1>New account</h1>\n        </div>\n        \n        <div className=\"fieldset\">\n          \n          <div className=\"legend\">Main</div>\n\n          <div className=\"fields\">\n\n            <div className=\"__left\">\n              <div className=\"field\">\n                <span>Name:</span>\n                <input type=\"text\" defaultValue={newAccountData.name} onChange={({target: {value}}) => setNewAccountData({...newAccountData, name: value})} />\n              </div>\n\n              <div className=\"field\">\n                <span>Owner:</span>\n                <Select options={editions.owners.map((owner) => ({\n                  span: owner.user,\n                  value: owner.user_id\n                }))} selectedOption={newAccountData.owner as string} onChange={(value: string) => setNewAccountData({...newAccountData, owner: value})}/>\n              </div>\n\n              <div className=\"field\">\n                <span>Phone:</span>\n                <ReactInputMask type=\"text\" mask=\"+1 (999) 999-9999\" defaultValue={newAccountData.phone} onChange={({target: {value}}) => setNewAccountData({...newAccountData, phone: value})} />\n              </div>\n            </div>\n\n            <div className=\"__right\">\n              <div className=\"field\" style={{zIndex: 5}}>\n                <span>Status:</span>\n                <Select options={editions.status.map((status) => ({\n                  span: status,\n                  value: status\n                }))} selectedOption={newAccountData.status as string} onChange={(value: string) => setNewAccountData({...newAccountData, status: value})}/>\n              </div>\n\n              <div className=\"field\">\n                <span>Email:</span>\n                <input type=\"text\" defaultValue={newAccountData.email} />\n              </div>\n\n              <div className=\"field\">\n                <span>Source:</span>\n                <Select options={editions.source.map((source) => ({\n                  span: source,\n                  value: source\n                }))} selectedOption={newAccountData.source as string} onChange={(value: string) => setNewAccountData({...newAccountData, source: value})}/>\n              </div>\n            </div>\n\n            <div className=\"avatar-editing\">\n              <button className=\"_zeroed _iconed\" onClick={() => setAvatarPopup(true)}>\n                <Icon icon=\"user-20\" />\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"fieldset\">\n          \n          <div className=\"legend\">Twilio</div>\n\n          <div className=\"fields\">\n\n            <div className=\"__left\">\n              <div className=\"field\">\n                <span>Account SID:</span>\n                <div className=\"form-field _iconed\">\n                  <input type={inputTypes.twilio_account_sid} readOnly={inputTypes.twilio_account_sid !== 'text'} defaultValue={newAccountData.twilio_account_sid} onChange={({target: {value}}) => setNewAccountData({...newAccountData, twilio_account_sid: value})} />\n                  <button className=\"_zeroed _iconed\" onClick={() => setInputTypes({...inputTypes, twilio_account_sid: inputTypes.twilio_account_sid === 'text' ? 'password' : 'text'})}>\n                    <Icon icon=\"eye-4\"/>\n                  </button>\n                </div>\n              </div>\n\n              <div className=\"field\">\n                <span>Call Token:</span>\n                <div className=\"form-field _iconed\">\n                  <input type={inputTypes.twilio_call_token} readOnly={inputTypes.twilio_call_token !== 'text'} defaultValue={newAccountData.twilio_call_token} onChange={({target: {value}}) => setNewAccountData({...newAccountData, twilio_call_token: value})} />\n                  <button className=\"_zeroed _iconed\" onClick={() => setInputTypes({...inputTypes, twilio_call_token: inputTypes.twilio_call_token === 'text' ? 'password' : 'text'})}>\n                    <Icon icon=\"eye-4\"/>\n                  </button>\n                </div>\n              </div>\n            </div>\n\n            \n            <div className=\"__right\">\n\n              <div className=\"field\">\n                <span>Token:</span>\n                <div className=\"form-field _iconed\">\n                  <input type={inputTypes.twilio_token} readOnly={inputTypes.twilio_token !== 'text'} defaultValue={newAccountData.twilio_token} onChange={({target: {value}}) => setNewAccountData({...newAccountData, twilio_token: value})} />\n                  <button className=\"_zeroed _iconed\" onClick={() => setInputTypes({...inputTypes, twilio_token: inputTypes.twilio_token === 'text' ? 'password' : 'text'})}>\n                    <Icon icon=\"eye-4\"/>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"fieldset\">\n          \n          <div className=\"legend\">Settings</div>\n\n          <div className=\"fields\">\n\n            <div className=\"__left\">\n\n              <div className=\"field\">\n                <span>Permission:</span>\n                <Select options={editions.permissions.map((permission) => ({\n                  span: permission,\n                  value: permission\n                }))} selectedOption={newAccountData.permission as string} onChange={(value: string) => setNewAccountData({...newAccountData, permission: value})}/>\n              </div>\n              \n              <div className=\"field\">\n                <span>Slack Url:</span>\n                <input type=\"text\" defaultValue={newAccountData.slack_url} onChange={({target: {value}}) => setNewAccountData({...newAccountData, slack_url: value})} />\n              </div>\n            </div>\n\n            <div className=\"__right\">\n\n              <div className=\"field\">\n                <span>Time Zone:</span>\n                <Select options={editions.time_zone.map((time_zone) => ({\n                  span: time_zone,\n                  value: time_zone\n                }))} selectedOption={newAccountData.time_zone as string} onChange={(value: string) => setNewAccountData({...newAccountData, time_zone: value})}/>\n              </div>\n              \n              <div className=\"field\">\n                <span>Slack:</span>\n                <Switcher checked={newAccountData.slack_active} onChange={(value) => setNewAccountData({...newAccountData, slack_active: value})} />\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"fieldset\">\n          \n          <div className=\"legend\">Mailing Address</div>\n\n          <div className=\"fields\">\n\n            <div className=\"__left\">\n              <div className=\"field\">\n                <span>Street:</span>\n                <input type=\"text\" defaultValue={newAccountData.mailing_street} onChange={({target: {value}}) => setNewAccountData({...newAccountData, mailing_street: value})} />\n              </div>\n\n              <div className=\"field\">\n                <span>Unit/Apt:</span>\n                <input type=\"text\" defaultValue={newAccountData.mailing_unit} onChange={({target: {value}}) => setNewAccountData({...newAccountData, mailing_unit: value})} />\n              </div>\n\n              <div className=\"field\">\n                <span>City:</span>\n                <input type=\"text\" defaultValue={newAccountData.mailing_city} onChange={({target: {value}}) => setNewAccountData({...newAccountData, mailing_city: value})} />\n              </div>\n            </div>\n\n            <div className=\"__right\">\n              <div className=\"field\">\n                <span>State:</span>\n                <Select options={editions.state.map((option) => ({\n                  span: option,\n                  value: option\n                }))} selectedOption={newAccountData.mailing_state as string} onChange={(value: string) => setNewAccountData({...newAccountData, mailing_state: value})}/>\n              </div>\n\n              <div className=\"field\">\n                <span>Zip:</span>\n                <input type=\"text\" defaultValue={newAccountData.mailing_zip} onChange={({target: {value}}) => setNewAccountData({...newAccountData, mailing_zip: value})} />\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"fieldset\">\n          \n          <div className=\"flex-container sb wrap\">\n            <div className=\"legend\">Billing Address</div>\n\n            <div className=\"legend-action-wrapper\">\n              <label>Same as Mailing Address:</label>\n\n              <div className=\"input-wrapper\">\n                <Checkbox contents='' value={newAccountData.same_address} onChange={(value) => setNewAccountData({...newAccountData, same_address: value})} />\n              </div>\n            </div>\n          </div>\n\n          {!newAccountData.same_address ? (\n            <div className=\"fields\">\n\n              <div className=\"__left\">\n                <div className=\"field\">\n                  <span>Street:</span>\n                  <input type=\"text\" defaultValue={newAccountData.billing_street} onChange={({target: {value}}) => setNewAccountData({...newAccountData, billing_street: value})} />\n                </div>\n\n                <div className=\"field\">\n                  <span>Unit/Apt:</span>\n                  <input type=\"text\" defaultValue={newAccountData.billing_unit} onChange={({target: {value}}) => setNewAccountData({...newAccountData, billing_unit: value})} />\n                </div>\n\n                <div className=\"field\">\n                  <span>City:</span>\n                  <input type=\"text\" defaultValue={newAccountData.billing_city} onChange={({target: {value}}) => setNewAccountData({...newAccountData, billing_city: value})} />\n                </div>\n              </div>\n\n              <div className=\"__right\">\n                <div className=\"field\">\n                  <span>State:</span>\n                  <Select options={editions.state.map((option) => ({\n                    span: option,\n                    value: option\n                  }))} selectedOption={newAccountData.billing_state as string} onChange={(value: string) => setNewAccountData({...newAccountData, billing_state: value})}/>\n                </div>\n\n                <div className=\"field\">\n                  <span>Zip:</span>\n                  <input type=\"text\" defaultValue={newAccountData.billing_zip} onChange={({target: {value}}) => setNewAccountData({...newAccountData, billing_zip: value})} />\n                </div>\n              </div>\n            </div>\n          ) : null}\n        </div>\n\n        <div className=\"wrapper flex-container sb editing-buttons\">\n          <div />\n          <div className=\"buttons\">\n            <button className=\"_bordered _red\" onClick={() => $router.router.navigate('accounts', {}, {\n              reload: true\n            })}>\n              Cancel\n            </button>\n            <button disabled={!readyToSave} className=\"_bordered _green\">\n              Save\n            </button>\n          </div>\n        </div>\n\n        {avatarPopup ? (\n          <div className=\"popup imageCrop\" onClick={() => setAvatarPopup(false)}>\n\n            <div className=\"wrapper\" onClick={(e) => e.stopPropagation()}>\n              \n              <div>\n                <input type=\"file\" accept=\"image/*\" onChange={onSelectFile} id=\"file-uploader\" />\n                <button className=\"_wa _iconed _bordered _blue\" onClick={() => document.getElementById('file-uploader')?.click()}>\n                  <Icon icon=\"account-33\" />\n                  <span>Upload a File</span>\n                </button>\n              </div>\n\n              <div>\n                {avatarImageSrc && (\n                  <ReactCrop\n                    src={avatarImageSrc}\n                    crop={avatarCrop}\n                    onChange={(value) => setAvatarCrop(value)}\n                  />\n                )}\n              </div>\n            </div>\n          </div>\n        ) : null}\n      </div>\n    ) : null}\n  </>)\n})\nexport default AccountsPage_New\n"]},"metadata":{},"sourceType":"module"}