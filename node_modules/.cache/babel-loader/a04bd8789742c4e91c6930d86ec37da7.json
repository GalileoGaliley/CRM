{"ast":null,"code":"var _jsxFileName = \"/Users/nicole/rrrr/crm/src/pages/Clients/New.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { nError } from \"../../funcs\";\nimport { mapDispatchToProps, mapStateToProps } from \"../../store\";\nimport \"../../styles/pages/common/entity-edit.sass\";\nimport Select from \"../../components/Select\";\nimport { useRoute } from \"react-router5\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ClientsPage_New = connect(mapStateToProps, mapDispatchToProps)(_s(function (props) {\n  _s();\n\n  const $router = useRoute();\n  const [readyToSave, setReadyToSave] = useState(false);\n  const [newClientData, setNewClientData] = useState({\n    firstname: '',\n    lastname: '',\n    company_name: '',\n    source: ''\n  });\n  const [clientDataEdit, setNewClientDataEdit] = useState(null); // Load info function\n\n  async function loadInfo() {\n    try {\n      const {\n        data: clientData\n      } = await axios.get('/json/client.json');\n      setNewClientDataEdit(clientData.edit);\n      setTimeout(() => setReadyToSave(false), 100);\n    } catch (error) {\n      nError(error);\n    }\n  } // Load client data\n\n\n  useEffect(() => {\n    loadInfo();\n  }, []);\n  useEffect(() => setReadyToSave(true), [newClientData]); // Render function\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: clientDataEdit ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ClientsPage_Item ClientPage_New entity-edit\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrapper flex-container sb\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"New Client\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fieldset\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend\",\n          children: \"Main\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fields\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"__left\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"First Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                defaultValue: newClientData.firstname,\n                onChange: _ref => {\n                  let {\n                    target: {\n                      value\n                    }\n                  } = _ref;\n                  return setNewClientData({ ...newClientData,\n                    firstname: value\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Last Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                defaultValue: newClientData.lastname,\n                onChange: _ref2 => {\n                  let {\n                    target: {\n                      value\n                    }\n                  } = _ref2;\n                  return setNewClientData({ ...newClientData,\n                    lastname: value\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"__right\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Company:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                defaultValue: newClientData.company_name,\n                onChange: _ref3 => {\n                  let {\n                    target: {\n                      value\n                    }\n                  } = _ref3;\n                  return setNewClientData({ ...newClientData,\n                    company_name: value\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Source:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                options: clientDataEdit.source.map(option => ({\n                  span: option,\n                  value: option\n                })),\n                selectedOption: newClientData.source,\n                onChange: value => setNewClientData({ ...newClientData,\n                  source: value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrapper flex-container sb editing-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"_bordered _red\",\n            onClick: () => $router.router.navigate('clients', {}, {\n              reload: true\n            }),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: !readyToSave,\n            className: \"_bordered _green\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this) : null\n  }, void 0, false);\n}, \"7tL/WGT02p++XcY/W0iSwdE3MW0=\", false, function () {\n  return [useRoute];\n}));\nexport default ClientsPage_New;","map":{"version":3,"sources":["/Users/nicole/rrrr/crm/src/pages/Clients/New.tsx"],"names":["axios","React","useEffect","useState","connect","nError","mapDispatchToProps","mapStateToProps","Select","useRoute","ClientsPage_New","props","$router","readyToSave","setReadyToSave","newClientData","setNewClientData","firstname","lastname","company_name","source","clientDataEdit","setNewClientDataEdit","loadInfo","data","clientData","get","edit","setTimeout","error","target","value","map","option","span","router","navigate","reload"],"mappings":"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","sourcesContent":["import axios from \"axios\"\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport Icon from \"../../components/Icon\"\nimport { nError } from \"../../funcs\"\nimport Client from \"../../models/Client\"\nimport { StoreDispatch, StoreState, mapDispatchToProps, mapStateToProps } from \"../../store\";\n\nimport \"../../styles/pages/common/entity-edit.sass\"\nimport moment from \"moment\"\nimport Select from \"../../components/Select\"\nimport Checkbox from \"../../components/Checkbox\"\nimport { useRoute } from \"react-router5\"\nimport { DateTime } from \"luxon\"\n\nimport DateTimeComponent from \"react-datetime\"\n\ninterface Props {\n  store: StoreState,\n  dispatcher: StoreDispatch\n}\n\nconst ClientsPage_New = connect(mapStateToProps, mapDispatchToProps)(function(props: Props) {\n\n  const $router = useRoute()\n\n  const [readyToSave, setReadyToSave] = useState(false)\n  \n  const [newClientData, setNewClientData] = useState<Partial<Client>>({\n    firstname: '',\n    lastname: '',\n    company_name: '',\n    source: ''\n  })\n\n  const [clientDataEdit, setNewClientDataEdit] = useState<{\n    source: string[],\n  } | null>(null)\n  \n  // Load info function\n  async function loadInfo() {\n    try {\n      const { data: clientData } = (await axios.get('/json/client.json'))\n\n      setNewClientDataEdit(clientData.edit)\n\n      setTimeout(() => setReadyToSave(false), 100)\n    }\n    catch (error) {\n      nError(error)\n    }\n  }\n\n  // Load client data\n  useEffect(() => {\n    loadInfo()\n  }, [])\n\n  useEffect(() => setReadyToSave(true), [\n    newClientData\n  ])\n  \n  // Render function\n  return (<>\n    {clientDataEdit ? (\n      <div className=\"ClientsPage_Item ClientPage_New entity-edit\">\n\n        <div className=\"wrapper flex-container sb\">\n          <h1>New Client</h1>\n        </div>\n        \n        <div className=\"fieldset\">\n          \n          <div className=\"legend\">Main</div>\n\n          <div className=\"fields\">\n\n            <div className=\"__left\">\n              <div className=\"field\">\n                <span>First Name:</span>\n                <input type=\"text\" defaultValue={newClientData.firstname} onChange={({target: {value}}) => setNewClientData({...newClientData, firstname: value})} />\n              </div>\n\n              <div className=\"field\">\n                <span>Last Name:</span>\n                <input type=\"text\" defaultValue={newClientData.lastname} onChange={({target: {value}}) => setNewClientData({...newClientData, lastname: value})} />\n              </div>\n            </div>\n\n            <div className=\"__right\">\n              <div className=\"field\">\n                <span>Company:</span>\n                <input type=\"text\" defaultValue={newClientData.company_name} onChange={({target: {value}}) => setNewClientData({...newClientData, company_name: value})} />\n              </div>\n\n              <div className=\"field\">\n                <span>Source:</span>\n                <Select options={clientDataEdit.source.map((option) => ({\n                  span: option,\n                  value: option\n                }))} selectedOption={newClientData.source as string} onChange={(value) => setNewClientData({...newClientData, source: value as string})}/>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"wrapper flex-container sb editing-buttons\">\n          <div></div>\n          <div className=\"buttons\">\n            <button className=\"_bordered _red\" onClick={() => $router.router.navigate('clients', {}, {reload: true})}>\n              Cancel\n            </button>\n            <button disabled={!readyToSave} className=\"_bordered _green\">\n              Save\n            </button>\n          </div>\n        </div>\n      </div>\n    ) : null}\n  </>)\n})\nexport default ClientsPage_New\n"]},"metadata":{},"sourceType":"module"}