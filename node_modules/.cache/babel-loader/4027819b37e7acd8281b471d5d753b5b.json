{"ast":null,"code":"import _toConsumableArray from\"/Users/nicole/rrrr/crm/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/nicole/rrrr/crm/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import classNames from\"classnames\";import moment from\"moment\";import React,{useEffect,useState}from\"react\";import{connect}from\"react-redux\";import{mapDispatchToProps,mapStateToProps}from\"../store\";import\"../styles/components/date-range-calendar.sass\";import Icon from\"./Icon\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var DateRangeCalendar=connect(mapStateToProps,mapDispatchToProps)(function(props){var _useState=useState(moment().startOf('day').toDate()),_useState2=_slicedToArray(_useState,2),activeDate=_useState2[0],setActiveDate=_useState2[1];var _useState3=useState(props.startDate||null),_useState4=_slicedToArray(_useState3,2),startDate=_useState4[0],setStartDate=_useState4[1];var _useState5=useState(props.endDate||null),_useState6=_slicedToArray(_useState5,2),endDate=_useState6[0],setEndDate=_useState6[1];// onDayClick function\nfunction onDayClick(day){if(!startDate||startDate&&endDate){var _date=moment(activeDate).date(day).toDate();// setStartDate(date)\nprops.onStartDateUpdate&&props.onStartDateUpdate(_date);setEndDate(null);return;}if(!endDate){var _date2=moment(activeDate).date(day).endOf('day').toDate();// setEndDate(date)\nprops.onEndDateUpdate&&props.onEndDateUpdate(_date2);return;}}// Add or take a month from activeDate function\nfunction updateActiveMonth(x){setActiveDate(moment(activeDate).add(x,'M').toDate());}// Get start date from props\nuseEffect(function(){setStartDate(props.startDate||null);},[props.startDate]);useEffect(function(){setEndDate(props.endDate||null);},[props.endDate]);// Render function\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"DateRangeCalendar\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"header\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"_zeroed _iconed\",onClick:function onClick(){return updateActiveMonth(-1);},children:/*#__PURE__*/_jsx(Icon,{className:\"_rotated-180\",icon:\"arrow-25\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"current-month\",children:moment(activeDate).format('MMMM YYYY')}),/*#__PURE__*/_jsx(\"button\",{className:\"_zeroed _iconed\",onClick:function onClick(){return updateActiveMonth(1);},children:/*#__PURE__*/_jsx(Icon,{icon:\"arrow-25\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"calendar\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"days-grid week-days\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"day\",children:\"S\"}),/*#__PURE__*/_jsx(\"div\",{className:\"day\",children:\"M\"}),/*#__PURE__*/_jsx(\"div\",{className:\"day\",children:\"T\"}),/*#__PURE__*/_jsx(\"div\",{className:\"day\",children:\"W\"}),/*#__PURE__*/_jsx(\"div\",{className:\"day\",children:\"T\"}),/*#__PURE__*/_jsx(\"div\",{className:\"day\",children:\"F\"}),/*#__PURE__*/_jsx(\"div\",{className:\"day\",children:\"S\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"days-grid calendar-days\",children:[_toConsumableArray(Array(moment(activeDate).startOf('month').day())).map(function(day,i){return/*#__PURE__*/_jsx(\"div\",{className:\"day\"},\"\".concat(i));}),_toConsumableArray(Array(moment(activeDate).daysInMonth())).map(function(day,i){return/*#__PURE__*/_jsx(\"div\",{className:classNames('day',{_selected:i+1===moment(startDate).date()&&activeDate.getMonth()===(startDate===null||startDate===void 0?void 0:startDate.getMonth())&&activeDate.getFullYear()===(startDate===null||startDate===void 0?void 0:startDate.getFullYear())||i+1===moment(endDate).date()&&activeDate.getMonth()===(endDate===null||endDate===void 0?void 0:endDate.getMonth())&&activeDate.getFullYear()===(endDate===null||endDate===void 0?void 0:endDate.getFullYear()),_inRange:startDate&&endDate&&moment(activeDate).date(i+1).isAfter(moment(startDate))&&moment(activeDate).date(i+2).isBefore(moment(endDate)),_rangeStart:moment(activeDate).date(i+1).isSame(moment(startDate)),_rangeEnd:moment(activeDate).endOf('day').date(i+1).isSame(moment(endDate))}),onClick:function onClick(){return onDayClick(i+1);},children:i+1},i);})]})]}),props.debug?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{children:moment(startDate).format()}),/*#__PURE__*/_jsx(\"div\",{children:moment(activeDate).format()}),/*#__PURE__*/_jsx(\"div\",{children:moment(endDate).format()}),/*#__PURE__*/_jsx(\"div\",{children:String(moment(startDate).format()===moment(activeDate).format())})]}):null]});});export default DateRangeCalendar;","map":{"version":3,"sources":["/Users/nicole/rrrr/crm/src/components/DateRangeCalendar.tsx"],"names":["classNames","moment","React","useEffect","useState","connect","mapDispatchToProps","mapStateToProps","Icon","DateRangeCalendar","props","startOf","toDate","activeDate","setActiveDate","startDate","setStartDate","endDate","setEndDate","onDayClick","day","date","onStartDateUpdate","endOf","onEndDateUpdate","updateActiveMonth","x","add","format","Array","map","i","daysInMonth","_selected","getMonth","getFullYear","_inRange","isAfter","isBefore","_rangeStart","isSame","_rangeEnd","debug","String"],"mappings":"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","sourcesContent":["import classNames from \"classnames\"\nimport moment from \"moment\"\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { StoreDispatch, StoreState, mapDispatchToProps, mapStateToProps } from \"../store\";\n\nimport \"../styles/components/date-range-calendar.sass\"\nimport Icon from \"./Icon\"\n\ninterface Props {\n  store: StoreState,\n  dispatcher: StoreDispatch,\n\n  startDate?: Date,\n  endDate?: Date,\n\n  onStartDateUpdate?(date: Date): void,\n  onEndDateUpdate?(date: Date): void,\n\n  debug?: any\n}\n\nconst DateRangeCalendar = connect(mapStateToProps, mapDispatchToProps)(function(props: Props) {\n\n  const [activeDate, setActiveDate] = useState(moment().startOf('day').toDate())\n  const [startDate, setStartDate] = useState<Date | null>(props.startDate || null)\n  const [endDate, setEndDate] = useState<Date | null>(props.endDate || null)\n\n  // onDayClick function\n  function onDayClick(day: number) {\n\n    if (!startDate || (startDate && endDate)) {\n      const date = moment(activeDate).date(day).toDate()\n\n      // setStartDate(date)\n      props.onStartDateUpdate && props.onStartDateUpdate(date)\n\n      setEndDate(null)\n      \n      return\n    }\n\n    if (!endDate) {\n      const date = moment(activeDate).date(day).endOf('day').toDate()\n\n      // setEndDate(date)\n      props.onEndDateUpdate && props.onEndDateUpdate(date)\n\n      return\n    }\n  }\n\n  // Add or take a month from activeDate function\n  function updateActiveMonth(x: number) {\n\n    setActiveDate(moment(activeDate).add(x, 'M').toDate())\n  }\n\n  // Get start date from props\n  useEffect(() => {\n    setStartDate(props.startDate || null)\n  }, [props.startDate])\n\n  useEffect(() => {\n    setEndDate(props.endDate || null)\n  }, [props.endDate])\n  \n  // Render function\n  return (\n    <div className=\"DateRangeCalendar\">\n\n      <div className=\"header\">\n\n        <button className=\"_zeroed _iconed\" onClick={() => updateActiveMonth(-1)}>\n          <Icon className=\"_rotated-180\" icon=\"arrow-25\" />\n        </button>\n\n        <div className=\"current-month\">\n          {moment(activeDate).format('MMMM YYYY')}\n        </div>\n\n        <button className=\"_zeroed _iconed\" onClick={() => updateActiveMonth(1)}>\n          <Icon icon=\"arrow-25\" />\n        </button>\n      </div>\n\n      <div className=\"calendar\">\n\n        <div className=\"days-grid week-days\">\n\n          <div className=\"day\">S</div>\n          <div className=\"day\">M</div>\n          <div className=\"day\">T</div>\n          <div className=\"day\">W</div>\n          <div className=\"day\">T</div>\n          <div className=\"day\">F</div>\n          <div className=\"day\">S</div>\n        </div>\n\n        <div className=\"days-grid calendar-days\">\n\n          {[...Array(moment(activeDate).startOf('month').day())].map((day, i) => (\n            <div className=\"day\" key={`${i}`}></div>\n          ))}\n\n        \n          {[...Array(moment(activeDate).daysInMonth())].map((day, i) => (\n            <div\n              className={classNames('day', {\n                _selected: (\n                  i + 1 === moment(startDate).date() &&\n                  activeDate.getMonth() === startDate?.getMonth() &&\n                  activeDate.getFullYear() === startDate?.getFullYear() ||\n                  i + 1 === moment(endDate).date() &&\n                  activeDate.getMonth() === endDate?.getMonth() &&\n                  activeDate.getFullYear() === endDate?.getFullYear()\n                ),\n                _inRange: (\n                  startDate && endDate &&\n                  moment(activeDate).date(i+1).isAfter(moment(startDate)) &&\n                  moment(activeDate).date(i+2).isBefore(moment(endDate))\n                ),\n                _rangeStart: moment(activeDate).date(i + 1).isSame(moment(startDate)),\n                _rangeEnd: moment(activeDate).endOf('day').date(i+1).isSame(moment(endDate))\n              })}\n              key={i}\n              onClick={() => onDayClick(i + 1)}\n            >{i + 1}</div>\n          ))}\n        </div>\n      </div>\n\n      {props.debug ? (<>\n        <div>{moment(startDate).format()}</div>\n        <div>{moment(activeDate).format()}</div>\n        <div>{moment(endDate).format()}</div>\n        <div>{String(moment(startDate).format() === moment(activeDate).format())}</div>\n      </>) : null}\n    </div>\n  )\n})\nexport default DateRangeCalendar\n"]},"metadata":{},"sourceType":"module"}