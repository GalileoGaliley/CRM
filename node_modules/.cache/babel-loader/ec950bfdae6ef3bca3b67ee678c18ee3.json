{"ast":null,"code":"var _jsxFileName = \"/Users/nicole/rrrr/crm/src/components/Select.tsx\",\n    _s = $RefreshSig$();\n\nimport classNames from \"classnames\";\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport Icon from \"./Icon\";\nimport { mapDispatchToProps, mapStateToProps } from \"../store\";\nimport { Transition } from 'react-transition-group';\nimport \"../styles/components/select.sass\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SelectComponent = connect(mapStateToProps, mapDispatchToProps)(_s(function SelectComponent(props) {\n  _s();\n\n  const [active, setActive] = useState(false); // Get selected option function\n\n  function getSelectedOption() {\n    return props.options.find(option => option.value === props.selectedOption) || {\n      span: '',\n      value: ''\n    };\n  } // Render function\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"SelectComponent\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: props.disabled,\n      className: classNames({\n        _zeroed: props.zeroed\n      }, '_iconed', 'sb'),\n      onFocus: () => setActive(true),\n      onBlur: () => setActive(false),\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: getSelectedOption().span\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Icon, {\n        className: classNames({\n          _flipped: active\n        }),\n        icon: \"arrow-65\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Transition, {\n      in: active,\n      mountOnEnter: true,\n      unmountOnExit: true,\n      timeout: 210,\n      children: state => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classNames(\"options-list-wrapper\", `transition-fade-${state}`),\n        children: props.options.map((option, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: classNames(\"_zeroed\", \"option\", {\n            _active: option.value === getSelectedOption().value\n          }),\n          onClick: () => {\n            setActive(false);\n            props.onChange(option.value);\n          },\n          children: option.span || /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\xA0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 34\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}, \"1cfVChV6gA1Fk8+xDnwTj3gmgZo=\"));\nexport default SelectComponent;","map":{"version":3,"sources":["/Users/nicole/rrrr/crm/src/components/Select.tsx"],"names":["classNames","React","useState","connect","Icon","mapDispatchToProps","mapStateToProps","Transition","SelectComponent","props","active","setActive","getSelectedOption","options","find","option","value","selectedOption","span","disabled","_zeroed","zeroed","_flipped","state","map","i","_active","onChange"],"mappings":";;;AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAAoCC,kBAApC,EAAwDC,eAAxD,QAA+E,UAA/E;AACA,SAASC,UAAT,QAA2B,wBAA3B;AAEA,OAAO,kCAAP;;AAoBA,MAAMC,eAAe,GAAGL,OAAO,CAACG,eAAD,EAAkBD,kBAAlB,CAAP,IAA6C,SAASG,eAAT,CAAyBC,KAAzB,EAAuC;AAAA;;AAE1G,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,KAAD,CAApC,CAF0G,CAI1G;;AACA,WAASU,iBAAT,GAA6B;AAC3B,WAAOH,KAAK,CAACI,OAAN,CAAcC,IAAd,CAAoBC,MAAD,IAAYA,MAAM,CAACC,KAAP,KAAiBP,KAAK,CAACQ,cAAtD,KAAyE;AAC9EC,MAAAA,IAAI,EAAE,EADwE;AAE9EF,MAAAA,KAAK,EAAE;AAFuE,KAAhF;AAID,GAVyG,CAY1G;;;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BACE;AAAQ,MAAA,QAAQ,EAAEP,KAAK,CAACU,QAAxB;AAAkC,MAAA,SAAS,EAAEnB,UAAU,CAAC;AAACoB,QAAAA,OAAO,EAAEX,KAAK,CAACY;AAAhB,OAAD,EAA0B,SAA1B,EAAqC,IAArC,CAAvD;AAAmG,MAAA,OAAO,EAAG,MAAMV,SAAS,CAAC,IAAD,CAA5H;AAAqI,MAAA,MAAM,EAAG,MAAMA,SAAS,CAAC,KAAD,CAA7J;AAAA,8BACE;AAAA,kBAAQC,iBAAiB,GAAGM;AAA5B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AAAM,QAAA,SAAS,EAAGlB,UAAU,CAAC;AAAEsB,UAAAA,QAAQ,EAAEZ;AAAZ,SAAD,CAA5B;AAAqD,QAAA,IAAI,EAAC;AAA1D;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAME,QAAC,UAAD;AAAY,MAAA,EAAE,EAAEA,MAAhB;AAAwB,MAAA,YAAY,EAAE,IAAtC;AAA4C,MAAA,aAAa,EAAE,IAA3D;AAAiE,MAAA,OAAO,EAAE,GAA1E;AAAA,gBACIa,KAAD,iBACC;AAAK,QAAA,SAAS,EAAGvB,UAAU,CAAC,sBAAD,EAA0B,mBAAkBuB,KAAM,EAAlD,CAA3B;AAAA,kBAEId,KAAK,CAACI,OAAN,CAAcW,GAAd,CAAkB,CAACT,MAAD,EAASU,CAAT,kBAClB;AACE,UAAA,SAAS,EAAGzB,UAAU,CAAC,SAAD,EAAY,QAAZ,EAAsB;AAAE0B,YAAAA,OAAO,EAAEX,MAAM,CAACC,KAAP,KAAiBJ,iBAAiB,GAAGI;AAAhD,WAAtB,CADxB;AAGE,UAAA,OAAO,EAAG,MAAM;AAAEL,YAAAA,SAAS,CAAC,KAAD,CAAT;AAAkBF,YAAAA,KAAK,CAACkB,QAAN,CAAeZ,MAAM,CAACC,KAAtB;AAA8B,WAHpE;AAAA,oBAKID,MAAM,CAACG,IAAP,iBAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALnB,WAEQO,CAFR;AAAA;AAAA;AAAA;AAAA,gBADA;AAFJ;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CAtCuB,kCAAxB;AAwCA,eAAejB,eAAf","sourcesContent":["import classNames from \"classnames\"\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport Icon from \"./Icon\"\nimport { StoreDispatch, StoreState, mapDispatchToProps, mapStateToProps } from \"../store\";\nimport { Transition } from 'react-transition-group'\n\nimport \"../styles/components/select.sass\"\n\nexport interface Option {\n  span: string,\n  value: any\n}\n\ninterface Props {\n  store: StoreState,\n  dispatcher: StoreDispatch,\n\n  options: Option[],\n\n  selectedOption: string | number | boolean,\n  onChange(value: string | number | boolean): void,\n\n  zeroed?: boolean,\n  disabled?: boolean\n}\n\nconst SelectComponent = connect(mapStateToProps, mapDispatchToProps)(function SelectComponent(props: Props) {\n\n  const [active, setActive] = useState(false)\n\n  // Get selected option function\n  function getSelectedOption() {\n    return props.options.find((option) => option.value === props.selectedOption) || {\n      span: '',\n      value: ''\n    }\n  }\n  \n  // Render function\n  return (\n    <div className=\"SelectComponent\">\n      <button disabled={props.disabled} className={classNames({_zeroed: props.zeroed}, '_iconed', 'sb')} onFocus={ () => setActive(true) } onBlur={ () => setActive(false) }>\n        <span>{ getSelectedOption().span }</span>\n        <Icon className={ classNames({ _flipped: active }) } icon=\"arrow-65\" />\n      </button>\n\n      <Transition in={active} mountOnEnter={true} unmountOnExit={true} timeout={210}>\n        {(state) => (\n          <div className={ classNames(\"options-list-wrapper\", `transition-fade-${state}`) }>\n\n            { props.options.map((option, i) => (\n              <button\n                className={ classNames(\"_zeroed\", \"option\", { _active: option.value === getSelectedOption().value }) }\n                key={ i }\n                onClick={ () => { setActive(false); props.onChange(option.value) } }\n              >\n                { option.span || <span>&nbsp;</span> }\n              </button>\n            )) }\n          </div>\n        )}\n      </Transition>\n    </div>\n  )\n})\n\nexport default SelectComponent\n"]},"metadata":{},"sourceType":"module"}