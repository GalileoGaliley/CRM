{"ast":null,"code":"import _objectSpread from\"/Users/nicole/rrrr/crm/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _asyncToGenerator from\"/Users/nicole/rrrr/crm/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/nicole/rrrr/crm/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/Users/nicole/rrrr/crm/node_modules/@babel/runtime/regenerator/index.js\";import React,{useEffect,useState}from\"react\";import{connect}from\"react-redux\";import Icon from\"../components/Icon\";import{httpClient,nError}from\"../funcs\";import businessAccountIconImg from\"../images/business-account_icon.svg\";import logoImg from\"../images/logo.svg\";import{mapDispatchToProps,mapStateToProps}from\"../store\";import\"../styles/pages/auth.sass\";import qs from\"qs\";import{useRoute}from\"react-router5\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var AuthPage=connect(mapStateToProps,mapDispatchToProps)(function AuthPage(props){var _authData$accounts;var $router=useRoute();var _useState=useState($router.route.params.mode),_useState2=_slicedToArray(_useState,2),mode=_useState2[0],setMode=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),errorText=_useState4[0],setErrorText=_useState4[1];var _useState5=useState({accessToken:null,accounts:[],selectedAccount:null,user:null}),_useState6=_slicedToArray(_useState5,2),authData=_useState6[0],setAuthData=_useState6[1];var _useState7=useState({$disabled:false,email:\"\",password:\"\"}),_useState8=_slicedToArray(_useState7,2),authForm=_useState8[0],setAuthForm=_useState8[1];// Auth function\nfunction auth(){return _auth.apply(this,arguments);}// Select account function\nfunction _auth(){_auth=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var email,password,validationErrors,_yield$httpClient$pos,accessToken,_yield$httpClient$get,accounts;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:// Reset error text\nsetErrorText(null);// Prevent from sending form again\nsetAuthForm(_objectSpread(_objectSpread({},authForm),{},{$disabled:false}));// Fetch form data\nemail=authForm.email,password=authForm.password;_context.prev=3;// Validate input data\nvalidationErrors=[{displayFieldText:\"E-Mail\",entity:email,rule:\"email\"},{displayFieldText:\"Password\",entity:password,rule:\"password\"}];// if (validationErrors.length)\n//   throw new Error(validationErrors.join(\"\\n\"))\n// Perform autorization\n_context.next=7;return httpClient.post('/login',qs.stringify({email:email,password:password}),{headers:{'Accept':'application/jsons','Content-Type':'application/x-www-form-urlencoded'}});case 7:_yield$httpClient$pos=_context.sent;accessToken=_yield$httpClient$pos.data.token;console.log('token');console.log(accessToken);console.log('token');httpClient.defaults.headers['Authorization']=\"Bearer \".concat(accessToken);// Get accounts list\n_context.next=15;return httpClient.get('/accounts',{headers:{'Accept':'application/jsons','Token':\"Bearer \".concat(accessToken)}});case 15:_yield$httpClient$get=_context.sent;accounts=_yield$httpClient$get.data.accounts;console.log('acc');console.log(accounts);console.log('acc');// Save info\nsetAuthData({accessToken:accessToken,accounts:accounts});// Show select account menu\n$router.router.navigate('auth',{mode:\"account-select\"},{reload:true});_context.next=27;break;case 24:_context.prev=24;_context.t0=_context[\"catch\"](3);setErrorText(nError(_context.t0).content.errorText);case 27:_context.prev=27;setAuthForm(_objectSpread(_objectSpread({},authForm),{},{$disabled:false}));return _context.finish(27);case 30:case\"end\":return _context.stop();}}},_callee,null,[[3,24,27,30]]);}));return _auth.apply(this,arguments);}function selectAccount(_x){return _selectAccount.apply(this,arguments);}// Handle mode\nfunction _selectAccount(){_selectAccount=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(i){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:props.dispatcher.setAccessToken(authData.accessToken);props.dispatcher.setAccounts(authData.accounts);props.dispatcher.setSelectedAccount(i);httpClient.defaults.headers['Authorization']=\"Bearer \".concat(props.store.accessToken);case 4:case\"end\":return _context2.stop();}}},_callee2);}));return _selectAccount.apply(this,arguments);}useEffect(function(){setMode($router.route.params.mode);},[$router.route.params.mode]);// Handle account select on page mount\nuseEffect(function(){if(props.store.accessToken){httpClient.get('/accounts').then(function(_ref){var accounts=_ref.data.accounts;setAuthData(_objectSpread(_objectSpread({},authData),{},{accessToken:props.store.accessToken,accounts:accounts}));});}},[]);// Render function\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"AuthPage\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"ProjectHeaders\",onClick:function onClick(){return mode!='account-select'&&$router.router.navigate('auth',{mode:'auth'},{reload:true});},children:[/*#__PURE__*/_jsx(\"img\",{src:logoImg,alt:\"\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"headers\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Expert @ FS\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"Manage your business!\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"auth-wrapper\",children:[mode===\"auth\"?/*#__PURE__*/_jsxs(\"form\",{onSubmit:function onSubmit(e){e.preventDefault();auth();},children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Sign In\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"__form-field\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"label\",children:\"E-Mail:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",onChange:function onChange(_ref2){var value=_ref2.target.value;return setAuthForm(_objectSpread(_objectSpread({},authForm),{},{email:value}));}})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"__form-field\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"label\",children:\"Password:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",onChange:function onChange(_ref3){var value=_ref3.target.value;return setAuthForm(_objectSpread(_objectSpread({},authForm),{},{password:value}));}})]}),errorText?/*#__PURE__*/_jsx(\"div\",{className:\"errorText\",children:errorText}):null,/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"_zeroed password-reset-link\",onClick:function onClick(){return $router.router.navigate('auth',{mode:'password-reset'},{reload:true});},children:\"Forgot password?\"}),/*#__PURE__*/_jsx(\"button\",{className:\"_wa __submit\",children:\"Sign In\"})]}):null,mode===\"password-reset\"?/*#__PURE__*/_jsxs(\"form\",{onSubmit:function onSubmit(e){return e.preventDefault();},children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Reset Password\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Enter your E-Mail and we will send the link:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"__form-field\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Your E-Mail...\"})}),/*#__PURE__*/_jsx(\"button\",{className:\"_wa __submit\",children:\"Submit\"})]}):null,mode===\"account-select\"?/*#__PURE__*/_jsx(\"form\",{onSubmit:function onSubmit(e){return e.preventDefault();},children:/*#__PURE__*/_jsx(\"div\",{className:\"account-select\",children:(_authData$accounts=authData.accounts)===null||_authData$accounts===void 0?void 0:_authData$accounts.map(function(account,i){return/*#__PURE__*/_jsxs(\"div\",{className:\"account\",onClick:function onClick(){return selectAccount(i);},\"aria-hidden\":\"true\",children:[/*#__PURE__*/_jsx(\"img\",{src:businessAccountIconImg,alt:\"\"}),/*#__PURE__*/_jsx(\"span\",{children:account.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"stats-signs\",children:[/*#__PURE__*/_jsx(Icon,{icon:\"bell-1\"}),/*#__PURE__*/_jsx(Icon,{icon:\"help-1\"})]})]},i);})})}):null]})]});});export default AuthPage;","map":{"version":3,"sources":["/Users/nicole/rrrr/crm/src/pages/Auth.tsx"],"names":["React","useEffect","useState","connect","Icon","httpClient","nError","mapDispatchToProps","mapStateToProps","qs","useRoute","AuthPage","props","$router","route","params","mode","setMode","errorText","setErrorText","accessToken","accounts","selectedAccount","user","authData","setAuthData","$disabled","email","password","authForm","setAuthForm","auth","validationErrors","displayFieldText","entity","rule","post","stringify","headers","data","token","console","log","defaults","get","router","navigate","reload","content","selectAccount","i","dispatcher","setAccessToken","setAccounts","setSelectedAccount","store","then","logoImg","e","preventDefault","value","target","map","account","businessAccountIconImg","name"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport Icon from \"../components/Icon\"\nimport { httpClient, nError } from \"../funcs\"\nimport businessAccountIconImg from \"../images/business-account_icon.svg\"\n\nimport logoImg from \"../images/logo.svg\"\n\nimport Account from \"../models/Account\"\nimport { StoreDispatch, StoreState, mapDispatchToProps, mapStateToProps } from \"../store\";\n\nimport \"../styles/pages/auth.sass\"\nimport { validateMany } from \"../validate\"\n\nimport qs from \"qs\"\nimport { useRoute } from \"react-router5\"\nimport User from \"../models/User\"\nimport Menus from \"../models/Menus\"\n\n\ninterface Props {\n  store: StoreState,\n  dispatcher: StoreDispatch\n}\n\nconst AuthPage = connect(mapStateToProps, mapDispatchToProps)(function AuthPage(props: Props) {\n\n  const $router = useRoute()\n\n  const [mode, setMode] = useState<\"auth\" | \"password-reset\" | \"account-select\">($router.route.params.mode)\n  const [errorText, setErrorText] = useState<string | null>(null)\n  const [authData, setAuthData] = useState<Partial<StoreState>>({\n    accessToken: null,\n    accounts: [],\n    selectedAccount: null,\n    user: null\n  })\n  const [authForm, setAuthForm] = useState({\n    $disabled: false,\n\n    email: \"\",\n    password: \"\"\n  })\n\n  // Auth function\n  async function auth() {\n\n    // Reset error text\n    setErrorText(null)\n\n    // Prevent from sending form again\n    setAuthForm({ ...authForm, $disabled: false })\n\n    // Fetch form data\n    const { email, password } = authForm\n\n    try {\n\n      // Validate input data\n      const validationErrors = ([\n        { displayFieldText: \"E-Mail\", entity: email, rule: \"email\" },\n        { displayFieldText: \"Password\", entity: password, rule: \"password\" }\n      ])\n      // if (validationErrors.length)\n      //   throw new Error(validationErrors.join(\"\\n\"))\n\n      // Perform autorization\n      const { data: { token: accessToken } } = await httpClient.post('/login', qs.stringify({ email, password }), {\n        headers: {\n          'Accept': 'application/jsons',\n          'Content-Type': 'application/x-www-form-urlencoded'\n        }\n      })\n      console.log('token');\n      console.log(accessToken);\n      console.log('token');\n\n      httpClient.defaults.headers['Authorization'] = `Bearer ${accessToken}`\n\n      // Get accounts list\n\n      const { data: { accounts }} = await httpClient.get('/accounts',{\n        headers: {\n          'Accept': 'application/jsons',\n          'Token':`Bearer ${accessToken}`\n        }\n      })\n      console.log('acc');\n      console.log(accounts);\n      console.log('acc');\n\n      // Save info\n      setAuthData({\n        accessToken: accessToken,\n        accounts\n      })\n\n      // Show select account menu\n      $router.router.navigate('auth', {\n        mode: \"account-select\"\n      }, {reload: true})\n    }\n    catch (error) {\n\n      setErrorText(nError(error).content.errorText)\n    }\n    finally {\n      setAuthForm({ ...authForm, $disabled: false })\n    }\n  }\n\n  // Select account function\n  async function selectAccount(i: number) {\n    props.dispatcher.setAccessToken(authData.accessToken as string | null);\n    props.dispatcher.setAccounts(authData.accounts as Account[])\n    props.dispatcher.setSelectedAccount(i)\n    httpClient.defaults.headers['Authorization'] = `Bearer ${props.store.accessToken}`;\n  }\n\n  // Handle mode\n  useEffect(() => {\n    setMode($router.route.params.mode)\n  }, [$router.route.params.mode])\n\n  // Handle account select on page mount\n  useEffect(() => {\n    \n    if (props.store.accessToken) {\n      httpClient.get('/accounts').then(({ data: { accounts }}) => {\n        setAuthData({\n          ...authData,\n          accessToken: props.store.accessToken,\n          accounts\n        })\n      })\n    }\n  }, [])\n\n  // Render function\n  return (\n    <div className=\"AuthPage\">\n      \n      { /* Project about */ }\n      <div className=\"ProjectHeaders\" onClick={ () => mode != 'account-select' && $router.router.navigate('auth', {mode: 'auth'}, {reload: true}) }>\n        <img src={ logoImg } alt=\"\" />\n\n        <div className=\"headers\">\n          <h1>Expert @ FS</h1>\n          <h2>Manage your business!</h2>\n        </div>\n      </div>\n\n      { /* Auth wrapper */ }\n      <div className=\"auth-wrapper\">\n\n        { /* Auth form */ }\n        { mode === \"auth\" ? (\n          <form onSubmit={ (e) => {e.preventDefault(); auth()} }>\n            <h2>Sign In</h2>\n\n            <div className=\"__form-field\">\n              <div className=\"label\">E-Mail:</div>\n              <input type=\"text\" onChange={ ({ target: { value } }) => setAuthForm({ ...authForm, email: value }) } />\n            </div>\n            <div className=\"__form-field\">\n              <div className=\"label\">Password:</div>\n              <input\n                type=\"password\"\n                onChange={ ({ target: { value } }) => setAuthForm({ ...authForm, password: value }) }\n              />\n            </div>\n\n            { errorText ? (\n              <div className=\"errorText\">{ errorText }</div>\n            ) : null }\n\n            <button\n              type=\"button\"\n              className=\"_zeroed password-reset-link\"\n              onClick={ () => $router.router.navigate('auth', {mode: 'password-reset'}, {reload: true}) }\n            >\n              Forgot password?\n            </button>\n\n            <button className=\"_wa __submit\" >\n              Sign In\n            </button>\n          </form>\n        ) : null }\n        \n        { /* Password reset form */ }\n        { mode === \"password-reset\" ? (\n          <form onSubmit={ (e) => e.preventDefault() }>\n            <h2>Reset Password</h2>\n\n            <p>\n              Enter your E-Mail and we will send the link:\n            </p>\n\n            <div className=\"__form-field\">\n              <input type=\"text\" placeholder=\"Your E-Mail...\" />\n            </div>\n\n            <button className=\"_wa __submit\">\n              Submit\n            </button>\n          </form>\n        ) : null }\n        \n        { /* Select account form */ }\n        { mode === \"account-select\" ? (\n          <form onSubmit={ (e) => e.preventDefault() }>\n\n            <div className=\"account-select\">\n\n              { authData.accounts?.map((account, i) => (\n                <div className=\"account\" key={ i } onClick={ () => selectAccount(i) } aria-hidden=\"true\">\n                  <img src={ businessAccountIconImg } alt=\"\" />\n                  <span>{ account.name }</span>\n\n                  <div className=\"stats-signs\">\n                    <Icon icon=\"bell-1\"/>\n                    <Icon icon=\"help-1\"/>\n                  </div>\n                </div>\n              )) }\n            </div>\n          </form>\n        ) : null }\n      </div>\n    </div>\n  )\n})\nexport default AuthPage\n"]},"metadata":{},"sourceType":"module"}