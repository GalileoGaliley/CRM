{"ast":null,"code":"var _jsxFileName = \"/Users/nicole/rrrr/crm/src/pages/Jobs/List.tsx\",\n    _s = $RefreshSig$();\n\nimport classNames from \"classnames\";\nimport { DateTime } from \"luxon\";\nimport moment from \"moment\";\nimport qs from \"qs\";\nimport { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useRoute } from \"react-router5\";\nimport ReportFilters from \"../../components/reports/Filters\";\nimport ReportTableControls from \"../../components/reports/TableControls\";\nimport ReportTableField from \"../../components/reports/TableField\";\nimport { httpClient, nError } from \"../../funcs/base\";\nimport { getDateRangeByPreset } from \"../../funcs/reports\";\nimport { mapDispatchToProps, mapStateToProps } from \"../../store\";\nimport \"../../styles/pages/common/report-list.sass\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst JobsPage_List = connect(mapStateToProps, mapDispatchToProps)(_s(function (props) {\n  _s();\n\n  const $router = useRoute();\n  const [$updater, $setUpdater] = useState(Math.random());\n  const [reportIsDeprecated, setReportIsDeprecated] = useState(false);\n  const [reportData, setReportData] = useState(null);\n  const [localInterface, setLocalInterface] = useState({\n    search: '',\n    jobSharePopup: false,\n    dateRangeCalendarShown: false,\n    dateRangePreset: \"custom\",\n    min_date: DateTime.now().startOf('day').toJSDate(),\n    max_date: DateTime.now().endOf('day').toJSDate(),\n    page: 1,\n    filter_words: {\n      source: [],\n      status: [],\n      property_type: [],\n      area: [],\n      created_by: [],\n      service_resources: []\n    },\n    sort: {\n      field: 'created_at',\n      direction: 'up'\n    },\n    sortFields: [{\n      span: 'Date',\n      value: 'created_at'\n    }, {\n      span: 'Name',\n      value: 'name'\n    }, {\n      span: 'Status',\n      value: 'name'\n    }, {\n      span: 'Property type',\n      value: 'property_type'\n    }, {\n      span: 'Area',\n      value: 'area'\n    }, {\n      span: 'Source',\n      value: 'source'\n    }, {\n      span: 'Status',\n      value: 'status'\n    }, {\n      span: 'Created by',\n      value: 'created_by'\n    }, {\n      span: 'Appointments',\n      value: 'appointments'\n    }, {\n      span: 'Service Resource',\n      value: 'service_resources'\n    }, {\n      span: 'Total',\n      value: 'total'\n    }, {\n      span: 'Paid',\n      value: 'paid'\n    }]\n  }); // Watch date range preset\n\n  useEffect(() => {\n    if (!reportData) return;\n    if (localInterface.dateRangePreset === 'custom') return;\n    setLocalInterface({ ...localInterface,\n      ...getDateRangeByPreset(localInterface.dateRangePreset, reportData === null || reportData === void 0 ? void 0 : reportData.interface.min_date, reportData === null || reportData === void 0 ? void 0 : reportData.interface.max_date)\n    });\n  }, [localInterface.dateRangePreset]); // Load jobs function\n\n  async function loadJobs() {\n    httpClient.defaults.headers['Authorization'] = `Bearer ${props.store.accessToken}`;\n    let activeFilters = { ...localInterface.filter_words\n    };\n    Object.keys(localInterface.filter_words).forEach(key => !activeFilters[key].length && delete activeFilters[key]);\n\n    try {\n      const {\n        data: jobs\n      } = await httpClient.post('/jobs/report', qs.stringify({\n        limit_rows: props.store.reportsMaxRows,\n        page: localInterface.page,\n        date_start: localInterface.min_date.toISOString(),\n        date_end: localInterface.max_date.toISOString(),\n        sort_field: localInterface.sort.field,\n        sort_type: localInterface.sort.direction === 'up' ? 'asc' : 'desc',\n        filter_field: JSON.stringify(activeFilters),\n        ...(localInterface.search ? {\n          search: localInterface.search\n        } : {})\n      }), {\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        }\n      });\n      setReportData({ ...jobs,\n        interface: { ...jobs.interface,\n          min_date: moment(jobs.interface.min_date).startOf('day').toDate(),\n          max_date: moment(jobs.interface.max_date).endOf('day').toDate()\n        }\n      });\n      setTimeout(() => {\n        setReportIsDeprecated(false);\n      }, 100);\n    } catch (error) {\n      nError(error);\n    }\n  } // Load jobs on page mount\n\n\n  useEffect(() => {\n    loadJobs();\n  }, [$updater, localInterface.page]); // Watch for deprecated\n\n  useEffect(() => {\n    if (!reportData) return;\n    setReportIsDeprecated(true);\n  }, [localInterface.min_date, localInterface.max_date]); // Is filter selected function\n\n  function isFilterSelected(field, value) {\n    return localInterface.filter_words[field].includes(value);\n  } // Is all filters selected function\n\n\n  function isAllFiltersSelected(field) {\n    return localInterface.filter_words[field].length === 0;\n  } // Filter switch function\n\n\n  function switchFilter(field, value, toggle) {\n    let _arr = [...localInterface.filter_words[field]];\n\n    if (toggle && value === \"All\") {\n      _arr = [];\n    } else if (!toggle) {\n      while (true) {\n        let i = _arr.findIndex(filter => filter === value);\n\n        if (i === -1) break;\n\n        _arr.splice(i, 1);\n      }\n    } else {\n      if (reportData !== null && reportData !== void 0 && reportData.interface.filter_words[field].every(option => _arr.concat([value]).includes(option))) _arr = [];else if (_arr.findIndex(filter => filter === value) === -1) _arr.push(value);\n    }\n\n    setLocalInterface({ ...localInterface,\n      filter_words: { ...localInterface.filter_words,\n        [field]: _arr\n      }\n    });\n  } // Render function\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: reportData ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"JobsPage_List\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reports-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cell\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"amount\",\n            children: reportData.dashboard.all\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend\",\n            children: \"All Jobs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cell\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"amount\",\n            children: reportData.dashboard.closed\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend\",\n            children: \"Closed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cell\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"amount\",\n            children: reportData.dashboard.in_progress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend\",\n            children: \"In progress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cell\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"amount\",\n            children: reportData.dashboard.canceled\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend\",\n            children: \"Canceled\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Jobs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReportFilters, {\n        onSearchInputChange: value => setLocalInterface({ ...localInterface,\n          search: value\n        }),\n        dateRangePreset: localInterface.dateRangePreset,\n        onDateRangePresetChange: value => setLocalInterface({ ...localInterface,\n          dateRangePreset: value\n        }),\n        minDate: localInterface.min_date,\n        onMinDateChange: value => setLocalInterface({ ...localInterface,\n          min_date: value,\n          dateRangePreset: 'custom'\n        }),\n        maxDate: localInterface.max_date,\n        onMaxDateChange: value => setLocalInterface({ ...localInterface,\n          max_date: value,\n          dateRangePreset: 'custom'\n        }),\n        updateButtonActive: reportIsDeprecated,\n        onUpdate: () => loadJobs()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReportTableControls, {\n        zIndex: 5,\n        onMaxRowsChange: () => $setUpdater(Math.random()),\n        amount: {\n          total: reportData.interface.rows_all,\n          start: reportData.interface.rows_start,\n          end: reportData.interface.rows_end\n        },\n        page: localInterface.page,\n        maxPages: reportData.interface.max_pages,\n        onPagesStart: () => setLocalInterface({ ...localInterface,\n          page: 1\n        }),\n        onPrevPage: () => setLocalInterface({ ...localInterface,\n          page: localInterface.page - 1\n        }),\n        onNextPage: () => setLocalInterface({ ...localInterface,\n          page: localInterface.page + 1\n        }),\n        onPagesEnd: () => setLocalInterface({ ...localInterface,\n          page: reportData.interface.max_pages\n        }),\n        sort: localInterface.sort,\n        sortFields: localInterface.sortFields,\n        onSortFieldChange: value => setLocalInterface({ ...localInterface,\n          sort: { ...localInterface.sort,\n            field: value\n          }\n        }),\n        onSortDirectionChange: value => setLocalInterface({ ...localInterface,\n          sort: { ...localInterface.sort,\n            direction: value\n          }\n        }),\n        onSortFire: () => $setUpdater(Math.random())\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contents\",\n        children: [/*#__PURE__*/_jsxDEV(\"table\", {\n          className: classNames('table', '__show-on-wide', {\n            __respectAsidePanel: props.store.navActive.is\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(ReportTableField, {\n              contents: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 28\n              }, this),\n              sortDirection: localInterface.sort.field === 'created_at' ? localInterface.sort.direction : undefined,\n              onSortDirectionChange: value => setLocalInterface({ ...localInterface,\n                sort: {\n                  field: 'created_at',\n                  direction: value\n                }\n              }),\n              onFilterFire: () => $setUpdater(Math.random())\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ReportTableField, {\n              contents: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 28\n              }, this),\n              sortDirection: localInterface.sort.field === 'name' ? localInterface.sort.direction : undefined,\n              onSortDirectionChange: value => setLocalInterface({ ...localInterface,\n                sort: {\n                  field: 'name',\n                  direction: value\n                }\n              }),\n              onFilterFire: () => $setUpdater(Math.random())\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ReportTableField, {\n              contents: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 28\n              }, this),\n              allFiltersSelected: isAllFiltersSelected(\"status\"),\n              onAllFiltersChange: value => switchFilter(\"status\", \"All\", value),\n              filterWords: reportData.interface.filter_words.status.map(filterWord => ({\n                word: filterWord,\n                selected: isFilterSelected(\"status\", filterWord)\n              })),\n              onFilterChange: value => switchFilter(\"status\", value.word, value.selected),\n              onFilterFire: () => $setUpdater(Math.random()),\n              sortDirection: localInterface.sort.field === 'status' ? localInterface.sort.direction : undefined,\n              onSortDirectionChange: value => setLocalInterface({ ...localInterface,\n                sort: {\n                  field: 'status',\n                  direction: value\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ReportTableField, {\n              contents: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Property type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 28\n              }, this),\n              allFiltersSelected: isAllFiltersSelected(\"property_type\"),\n              onAllFiltersChange: value => switchFilter(\"property_type\", \"All\", value),\n              filterWords: reportData.interface.filter_words.property_type.map(filterWord => ({\n                word: filterWord,\n                selected: isFilterSelected(\"property_type\", filterWord)\n              })),\n              onFilterChange: value => switchFilter(\"property_type\", value.word, value.selected),\n              onFilterFire: () => $setUpdater(Math.random()),\n              sortDirection: localInterface.sort.field === 'property_type' ? localInterface.sort.direction : undefined,\n              onSortDirectionChange: value => setLocalInterface({ ...localInterface,\n                sort: {\n                  field: 'property_type',\n                  direction: value\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ReportTableField, {\n              contents: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Area\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 28\n              }, this),\n              allFiltersSelected: isAllFiltersSelected(\"area\"),\n              onAllFiltersChange: value => switchFilter(\"area\", \"All\", value),\n              onFilterFire: () => $setUpdater(Math.random()),\n              filterWords: reportData.interface.filter_words.area.map(filterWord => ({\n                word: filterWord,\n                selected: isFilterSelected(\"area\", filterWord)\n              })),\n              onFilterChange: value => switchFilter(\"area\", value.word, value.selected),\n              sortDirection: localInterface.sort.field === 'area' ? localInterface.sort.direction : undefined,\n              onSortDirectionChange: value => setLocalInterface({ ...localInterface,\n                sort: {\n                  field: 'area',\n                  direction: value\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ReportTableField, {\n              contents: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Source\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 406,\n                columnNumber: 28\n              }, this),\n              allFiltersSelected: isAllFiltersSelected(\"source\"),\n              onAllFiltersChange: value => switchFilter(\"source\", \"All\", value),\n              filterWords: reportData.interface.filter_words.source.map(filterWord => ({\n                word: filterWord,\n                selected: isFilterSelected(\"source\", filterWord)\n              })),\n              onFilterChange: value => switchFilter(\"source\", value.word, value.selected),\n              onFilterFire: () => $setUpdater(Math.random()),\n              sortDirection: localInterface.sort.field === 'source' ? localInterface.sort.direction : undefined,\n              onSortDirectionChange: value => setLocalInterface({ ...localInterface,\n                sort: {\n                  field: 'source',\n                  direction: value\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ReportTableField, {\n              contents: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Created by\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 422,\n                columnNumber: 28\n              }, this),\n              allFiltersSelected: isAllFiltersSelected(\"created_by\"),\n              onAllFiltersChange: value => switchFilter(\"created_by\", \"All\", value),\n              filterWords: reportData.interface.filter_words.created_by.map(filterWord => ({\n                word: filterWord,\n                selected: isFilterSelected(\"created_by\", filterWord)\n              })),\n              onFilterChange: value => switchFilter(\"created_by\", value.word, value.selected),\n              onFilterFire: () => $setUpdater(Math.random()),\n              sortDirection: localInterface.sort.field === 'created_by' ? localInterface.sort.direction : undefined,\n              onSortDirectionChange: value => setLocalInterface({ ...localInterface,\n                sort: {\n                  field: 'created_by',\n                  direction: value\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ReportTableField, {\n              contents: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Appointments\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 438,\n                columnNumber: 28\n              }, this),\n              sortDirection: localInterface.sort.field === 'appointments' ? localInterface.sort.direction : undefined,\n              onSortDirectionChange: value => setLocalInterface({ ...localInterface,\n                sort: {\n                  field: 'appointments',\n                  direction: value\n                }\n              }),\n              onFilterFire: () => $setUpdater(Math.random())\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ReportTableField, {\n              contents: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Service resource\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 446,\n                columnNumber: 28\n              }, this),\n              allFiltersSelected: isAllFiltersSelected(\"service_resources\"),\n              onAllFiltersChange: value => switchFilter(\"service_resources\", \"All\", value),\n              filterWords: reportData.interface.filter_words.service_resources.map(filterWord => ({\n                word: filterWord,\n                selected: isFilterSelected(\"service_resources\", filterWord)\n              })),\n              onFilterChange: value => {\n                console.log(value);\n                switchFilter(\"service_resources\", value.word, value.selected);\n              },\n              onFilterFire: () => $setUpdater(Math.random()),\n              sortDirection: localInterface.sort.field === 'service_resources' ? localInterface.sort.direction : undefined,\n              onSortDirectionChange: value => setLocalInterface({ ...localInterface,\n                sort: {\n                  field: 'service_resources',\n                  direction: value\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ReportTableField, {\n              contents: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Total\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 462,\n                columnNumber: 28\n              }, this),\n              sortDirection: localInterface.sort.field === 'total' ? localInterface.sort.direction : undefined,\n              onSortDirectionChange: value => setLocalInterface({ ...localInterface,\n                sort: {\n                  field: 'total',\n                  direction: value\n                }\n              }),\n              onFilterFire: () => $setUpdater(Math.random())\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ReportTableField, {\n              contents: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Paid\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 470,\n                columnNumber: 28\n              }, this),\n              sortDirection: localInterface.sort.field === 'paid' ? localInterface.sort.direction : undefined,\n              onSortDirectionChange: value => setLocalInterface({ ...localInterface,\n                sort: {\n                  field: 'paid',\n                  direction: value\n                }\n              }),\n              onFilterFire: () => $setUpdater(Math.random())\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 13\n          }, this), reportData.jobs.map((job, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            onClick: () => $router.router.navigate('jobs.item', {\n              jobId: job.job_id\n            }, {\n              reload: true\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: job.created_at\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: job.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: job.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: job.property_type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: job.area\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 486,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: job.source\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 487,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: job.created_by\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 488,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: job.appointments\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 489,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: job.service_resources\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 490,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: job.total\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 491,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: job.paid\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 17\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: classNames('table', '__hide-on-wide', '__hide-on-mobile', {\n            __respectAsidePanel: props.store.navActive.is\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 13\n          }, this), reportData.jobs.map((job, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            onClick: () => $router.router.navigate('jobs.item', {\n              jobId: job.job_id\n            }, {\n              reload: true\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: job.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 507,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: job.created_at\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 508,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 506,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: job.created_by\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 511,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: job.service_resources\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 512,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 510,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: job.area\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 515,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: job.source\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 516,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 514,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: job.property_type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 519,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: job.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 520,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 518,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Appointments: \", job.appointments]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 523,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"\\xA0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 524,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 522,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Total: \", job.total]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 527,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Paid: \", job.paid]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 528,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 526,\n              columnNumber: 17\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classNames('mobile-table-items', '__show-on-mobile', {\n            __respectAsidePanel: props.store.navActive.is\n          }),\n          children: reportData.jobs.map((job, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item\",\n            onClick: () => $router.router.navigate('jobs.item', {\n              jobId: job.job_id\n            }, {\n              reload: true\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"__top\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"__left\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: job.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 548,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 547,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"Appointments: \", job.appointments]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 550,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 546,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"__right\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"Paid: \", /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: job.paid\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 557,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 556,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"Total: \", /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: job.total\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 560,\n                    columnNumber: 30\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 559,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: job.property_type\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 562,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: job.status\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 566,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 565,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 555,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 544,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"__bottom\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"__left\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"gray\",\n                    children: \"Area:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 575,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\" \", job.area]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 576,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 574,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"gray\",\n                    children: \"Source:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 579,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\" \", job.source]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 580,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 578,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"gray\",\n                    children: \"Service Resourse:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 583,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\" \", job.service_resources]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 584,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 582,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 573,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"__right small\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: job.created_at\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 589,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"Created by \", job.created_by]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 592,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 588,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 571,\n              columnNumber: 17\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 540,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReportTableControls, {\n        isUnder: true,\n        onMaxRowsChange: () => $setUpdater(Math.random()),\n        amount: {\n          total: reportData.interface.rows_all,\n          start: reportData.interface.rows_start,\n          end: reportData.interface.rows_end\n        },\n        page: localInterface.page,\n        maxPages: reportData.interface.max_pages,\n        onPagesStart: () => setLocalInterface({ ...localInterface,\n          page: 1\n        }),\n        onPrevPage: () => setLocalInterface({ ...localInterface,\n          page: localInterface.page - 1\n        }),\n        onNextPage: () => setLocalInterface({ ...localInterface,\n          page: localInterface.page + 1\n        }),\n        onPagesEnd: () => setLocalInterface({ ...localInterface,\n          page: reportData.interface.max_pages\n        }),\n        sort: localInterface.sort,\n        sortFields: localInterface.sortFields,\n        onSortFieldChange: value => setLocalInterface({ ...localInterface,\n          sort: { ...localInterface.sort,\n            field: value\n          }\n        }),\n        onSortDirectionChange: value => setLocalInterface({ ...localInterface,\n          sort: { ...localInterface.sort,\n            direction: value\n          }\n        }),\n        onSortFire: () => $setUpdater(Math.random())\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 603,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this) : null\n  }, void 0, false);\n}, \"6rfZTN7mH8klT2vYhOlwf9DJzcE=\", false, function () {\n  return [useRoute];\n}));\nexport default JobsPage_List;","map":{"version":3,"sources":["/Users/nicole/rrrr/crm/src/pages/Jobs/List.tsx"],"names":["classNames","DateTime","moment","qs","useEffect","useState","connect","useRoute","ReportFilters","ReportTableControls","ReportTableField","httpClient","nError","getDateRangeByPreset","mapDispatchToProps","mapStateToProps","JobsPage_List","props","$router","$updater","$setUpdater","Math","random","reportIsDeprecated","setReportIsDeprecated","reportData","setReportData","localInterface","setLocalInterface","search","jobSharePopup","dateRangeCalendarShown","dateRangePreset","min_date","now","startOf","toJSDate","max_date","endOf","page","filter_words","source","status","property_type","area","created_by","service_resources","sort","field","direction","sortFields","span","value","interface","loadJobs","defaults","headers","store","accessToken","activeFilters","Object","keys","forEach","key","length","data","jobs","post","stringify","limit_rows","reportsMaxRows","date_start","toISOString","date_end","sort_field","sort_type","filter_field","JSON","toDate","setTimeout","error","isFilterSelected","includes","isAllFiltersSelected","switchFilter","toggle","_arr","i","findIndex","filter","splice","every","option","concat","push","dashboard","all","closed","in_progress","canceled","total","rows_all","start","rows_start","end","rows_end","max_pages","__respectAsidePanel","navActive","is","undefined","map","filterWord","word","selected","console","log","job","router","navigate","jobId","job_id","reload","created_at","name","appointments","paid"],"mappings":"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","sourcesContent":["import axios from \"axios\"\nimport classNames from \"classnames\"\nimport { DateTime } from \"luxon\"\nimport moment from \"moment\"\nimport qs from \"qs\"\nimport { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useRoute } from \"react-router5\"\nimport ReportFilters from \"../../components/reports/Filters\"\nimport ReportTableControls from \"../../components/reports/TableControls\"\nimport ReportTableField from \"../../components/reports/TableField\"\nimport { httpClient, nError } from \"../../funcs/base\"\nimport {getDateRangeByPreset} from \"../../funcs/reports\"\nimport Job from \"../../models/Job\"\nimport { DateRangePreset } from \"../../models/Misc\"\nimport { StoreDispatch, StoreState, mapDispatchToProps, mapStateToProps } from \"../../store\";\n\nimport \"../../styles/pages/common/report-list.sass\"\n\ninterface Props {\n  store: StoreState,\n  dispatcher: StoreDispatch\n}\n\ntype FilterWord = 'status' | 'property_type' | 'area' | 'source' | 'created_by' | 'service_resources'\n\ninterface JobsReport {\n\n  interface: {\n\n    filter_words: {\n\n      status: string[],\n      property_type: string[],\n      area: string[],\n      source: string[],\n      created_by: string[],\n      service_resources: string[]\n    },\n\n    max_pages: number,\n    rows_start: number,\n    rows_end: number,\n    rows_all: number,\n    \n    min_date: Date,\n    max_date: Date\n  },\n\n  permissions: {\n    show_job: boolean\n  },\n\n  dashboard: {\n\n    all: string,\n    closed: string,\n    in_progress: string,\n    canceled: string\n  },\n\n  jobs: Job[]\n}\n\nconst JobsPage_List = connect(mapStateToProps, mapDispatchToProps)(function(props: Props) {\n\n  const $router = useRoute()\n\n  const [$updater, $setUpdater] = useState<any>(Math.random())\n\n  const [reportIsDeprecated, setReportIsDeprecated] = useState(false)\n\n  const [reportData, setReportData] = useState<JobsReport | null>(null)\n  const [localInterface, setLocalInterface] = useState({\n\n    search: '',\n\n    jobSharePopup: false,\n    \n    dateRangeCalendarShown: false,\n    dateRangePreset: \"custom\" as DateRangePreset,\n\n    min_date: DateTime.now().startOf('day').toJSDate(),\n    max_date: DateTime.now().endOf('day').toJSDate(),\n\n    page: 1,\n\n    filter_words: {\n\n      source: [] as string[],\n      status: [] as string[],\n      property_type: [] as string[],\n      area: [] as string[],\n      created_by: [] as string[],\n      service_resources: [] as string[]\n    },\n\n    sort: {\n      field: 'created_at',\n      direction: 'up' as 'up' | 'down'\n    },\n    sortFields: [{\n      span: 'Date',\n      value: 'created_at'\n    },{\n      span: 'Name',\n      value: 'name'\n    },{\n      span: 'Status',\n      value: 'name'\n    },{\n      span: 'Property type',\n      value: 'property_type'\n    },{\n      span: 'Area',\n      value: 'area'\n    },{\n      span: 'Source',\n      value: 'source'\n    },{\n      span: 'Status',\n      value: 'status'\n    },{\n      span: 'Created by',\n      value: 'created_by'\n    },{\n      span: 'Appointments',\n      value: 'appointments'\n    },{\n      span: 'Service Resource',\n      value: 'service_resources'\n    },{\n      span: 'Total',\n      value: 'total'\n    },{\n      span: 'Paid',\n      value: 'paid'\n    }]\n\n  })\n\n  // Watch date range preset\n  useEffect(() => {\n\n    if (!reportData) return\n    \n    if(localInterface.dateRangePreset === 'custom') return\n\n    setLocalInterface({\n      ...localInterface,\n      ...(getDateRangeByPreset(localInterface.dateRangePreset, reportData?.interface.min_date, reportData?.interface.max_date))\n    })\n\n  }, [localInterface.dateRangePreset])\n\n  // Load jobs function\n  async function loadJobs() {\n\n    httpClient.defaults.headers['Authorization'] = `Bearer ${props.store.accessToken}`\n\n    let activeFilters: any = {...localInterface.filter_words}\n    Object.keys(localInterface.filter_words).forEach((key: any) => !activeFilters[key].length && delete activeFilters[key])\n\n    try {\n      const { data: jobs } = (await httpClient.post('/jobs/report', qs.stringify({\n        limit_rows: props.store.reportsMaxRows,\n        page: localInterface.page,\n        date_start: localInterface.min_date.toISOString(),\n        date_end: localInterface.max_date.toISOString(),\n        sort_field: localInterface.sort.field,\n        sort_type: localInterface.sort.direction === 'up' ? 'asc' : 'desc',\n        filter_field: JSON.stringify(activeFilters),\n        ...(localInterface.search ? {search: localInterface.search} : {})\n      }), {\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        }\n      })) as { data: JobsReport }\n\n      setReportData({\n        ...jobs,\n\n        interface: {\n\n          ...jobs.interface,\n          min_date: moment(jobs.interface.min_date).startOf('day').toDate(),\n          max_date: moment(jobs.interface.max_date).endOf('day').toDate(),\n        }\n      })\n\n      setTimeout(() => {\n        setReportIsDeprecated(false)\n      }, 100)\n    }\n    catch (error) {\n      nError(error)\n    }\n  }\n\n  // Load jobs on page mount\n  useEffect(() => { loadJobs() }, [\n    $updater,\n    localInterface.page,\n  ])\n\n  // Watch for deprecated\n  useEffect(() => {\n    if(!reportData) return\n    setReportIsDeprecated(true)\n  }, [\n    localInterface.min_date,\n    localInterface.max_date\n  ])\n\n  // Is filter selected function\n  function isFilterSelected(field: FilterWord, value: string) {\n    return localInterface.filter_words[field].includes(value)\n  }\n\n  // Is all filters selected function\n  function isAllFiltersSelected(field: FilterWord) {\n    return localInterface.filter_words[field].length === 0\n  }\n\n  // Filter switch function\n  function switchFilter(field: FilterWord, value: string, toggle: boolean) {\n\n    let _arr = [...localInterface.filter_words[field]]\n\n    if (toggle && value === \"All\") { _arr = [] }\n    \n    else if (!toggle) {\n\n      while (true) {\n        let i = _arr.findIndex((filter) => filter === value)\n        if(i === -1) break\n        _arr.splice(i, 1)\n      }\n    }\n      \n    else {\n\n      if (reportData?.interface.filter_words[field].every((option) => _arr.concat([value]).includes(option)))\n        _arr = []\n\n      else if(_arr.findIndex((filter) => filter === value) === -1)\n        _arr.push(value)\n    }\n\n    setLocalInterface({...localInterface, filter_words: {...localInterface.filter_words, [field]: _arr}})\n  }\n\n  // Render function\n  return (<>\n    {reportData ? (\n      <div className=\"JobsPage_List\" >\n      \n        { /* Reports grid */}\n        <div className=\"reports-grid\">\n        \n          <div className=\"cell\">\n\n            <div className=\"amount\">{reportData.dashboard.all}</div>\n            <div className=\"legend\">All Jobs</div>\n          </div>\n\n          <div className=\"cell\">\n\n            <div className=\"amount\">{reportData.dashboard.closed}</div>\n            <div className=\"legend\">Closed</div>\n          </div>\n\n          <div className=\"cell\">\n\n            <div className=\"amount\">{reportData.dashboard.in_progress}</div>\n            <div className=\"legend\">In progress</div>\n          </div>\n\n          <div className=\"cell\">\n\n            <div className=\"amount\">{reportData.dashboard.canceled}</div>\n            <div className=\"legend\">Canceled</div>\n          </div>\n        </div>\n\n        { /* Page header */}\n        <div className=\"page-header\">\n          <h1>Jobs</h1>\n        </div>\n\n        { /* List filters */}\n        <ReportFilters\n          onSearchInputChange={(value) => setLocalInterface({...localInterface, search: value})}\n\n          dateRangePreset={localInterface.dateRangePreset}\n          onDateRangePresetChange={(value) => setLocalInterface({ ...localInterface, dateRangePreset: value })}\n\n          minDate={localInterface.min_date}\n          onMinDateChange={(value) => setLocalInterface({...localInterface, min_date: value, dateRangePreset: 'custom'})}\n\n          maxDate={localInterface.max_date}\n          onMaxDateChange={(value) => setLocalInterface({...localInterface, max_date: value, dateRangePreset: 'custom'})}\n\n          updateButtonActive={reportIsDeprecated}\n          onUpdate={() => loadJobs()}\n        />\n\n        {/* Table controls */}\n        <ReportTableControls\n          zIndex={5}\n\n          onMaxRowsChange={() => $setUpdater(Math.random())}\n\n          amount={{\n            total: reportData.interface.rows_all,\n            start: reportData.interface.rows_start,\n            end: reportData.interface.rows_end\n          }}\n\n          page={localInterface.page}\n          maxPages={reportData.interface.max_pages}\n          onPagesStart={() => setLocalInterface({...localInterface, page: 1})}\n          onPrevPage={() => setLocalInterface({...localInterface, page: localInterface.page-1})}\n          onNextPage={() => setLocalInterface({...localInterface, page: localInterface.page+1})}\n          onPagesEnd={() => setLocalInterface({...localInterface, page: reportData.interface.max_pages})}\n          \n          sort={localInterface.sort}\n          sortFields={localInterface.sortFields}\n          onSortFieldChange={(value) => setLocalInterface({...localInterface, sort: {...localInterface.sort, field: value}})}\n          onSortDirectionChange={(value) => setLocalInterface({...localInterface, sort: {...localInterface.sort, direction: value}})}\n          onSortFire={() => $setUpdater(Math.random())}\n        />\n\n        <div className=\"contents\">\n\n          {/* Wide desktop table */}\n          <table className={classNames('table', '__show-on-wide', {\n            __respectAsidePanel: props.store.navActive.is\n          })}>\n            <tr>\n              <ReportTableField\n                contents={(<span>Date</span>)}\n\n                sortDirection={localInterface.sort.field === 'created_at' ? localInterface.sort.direction : undefined}\n                onSortDirectionChange={(value) => setLocalInterface({...localInterface, sort: {field: 'created_at', direction: value}})}\n\n                onFilterFire={() => $setUpdater(Math.random())}\n              />\n              <ReportTableField\n                contents={(<span>Name</span>)}\n                \n                sortDirection={localInterface.sort.field === 'name' ? localInterface.sort.direction : undefined}\n                onSortDirectionChange={(value) => setLocalInterface({...localInterface, sort: {field: 'name', direction: value}})}\n\n                onFilterFire={() => $setUpdater(Math.random())}\n              />\n              <ReportTableField\n                contents={(<span>Status</span>)}\n\n                allFiltersSelected={isAllFiltersSelected(\"status\")}\n                onAllFiltersChange={(value) => switchFilter(\"status\", \"All\", value)}\n\n                filterWords={reportData.interface.filter_words.status.map((filterWord) => ({\n                  word: filterWord,\n                  selected: isFilterSelected(\"status\", filterWord)\n                }))}\n                onFilterChange={(value) => switchFilter(\"status\", value.word, value.selected)}\n                onFilterFire={() => $setUpdater(Math.random())}\n\n                sortDirection={localInterface.sort.field === 'status' ? localInterface.sort.direction : undefined}\n                onSortDirectionChange={(value) => setLocalInterface({...localInterface, sort: {field: 'status', direction: value}})}\n              />\n              <ReportTableField\n                contents={(<span>Property type</span>)}\n\n                allFiltersSelected={isAllFiltersSelected(\"property_type\")}\n                onAllFiltersChange={(value) => switchFilter(\"property_type\", \"All\", value)}\n\n                filterWords={reportData.interface.filter_words.property_type.map((filterWord) => ({\n                  word: filterWord,\n                  selected: isFilterSelected(\"property_type\", filterWord)\n                }))}\n                onFilterChange={(value) => switchFilter(\"property_type\", value.word, value.selected)}\n                onFilterFire={() => $setUpdater(Math.random())}\n\n                sortDirection={localInterface.sort.field === 'property_type' ? localInterface.sort.direction : undefined}\n                onSortDirectionChange={(value) => setLocalInterface({...localInterface, sort: {field: 'property_type', direction: value}})}\n              />\n              <ReportTableField\n                contents={(<span>Area</span>)}\n\n                allFiltersSelected={isAllFiltersSelected(\"area\")}\n                onAllFiltersChange={(value) => switchFilter(\"area\", \"All\", value)}\n                onFilterFire={() => $setUpdater(Math.random())}\n\n                filterWords={reportData.interface.filter_words.area.map((filterWord) => ({\n                  word: filterWord,\n                  selected: isFilterSelected(\"area\", filterWord)\n                }))}\n                onFilterChange={(value) => switchFilter(\"area\", value.word, value.selected)}\n\n                sortDirection={localInterface.sort.field === 'area' ? localInterface.sort.direction : undefined}\n                onSortDirectionChange={(value) => setLocalInterface({...localInterface, sort: {field: 'area', direction: value}})}\n              />\n              <ReportTableField\n                contents={(<span>Source</span>)}\n\n                allFiltersSelected={isAllFiltersSelected(\"source\")}\n                onAllFiltersChange={(value) => switchFilter(\"source\", \"All\", value)}\n\n                filterWords={reportData.interface.filter_words.source.map((filterWord) => ({\n                  word: filterWord,\n                  selected: isFilterSelected(\"source\", filterWord)\n                }))}\n                onFilterChange={(value) => switchFilter(\"source\", value.word, value.selected)}\n                onFilterFire={() => $setUpdater(Math.random())}\n\n                sortDirection={localInterface.sort.field === 'source' ? localInterface.sort.direction : undefined}\n                onSortDirectionChange={(value) => setLocalInterface({...localInterface, sort: {field: 'source', direction: value}})}\n              />\n              <ReportTableField\n                contents={(<span>Created by</span>)}\n\n                allFiltersSelected={isAllFiltersSelected(\"created_by\")}\n                onAllFiltersChange={(value) => switchFilter(\"created_by\", \"All\", value)}\n\n                filterWords={reportData.interface.filter_words.created_by.map((filterWord) => ({\n                  word: filterWord,\n                  selected: isFilterSelected(\"created_by\", filterWord)\n                }))}\n                onFilterChange={(value) => switchFilter(\"created_by\", value.word, value.selected)}\n                onFilterFire={() => $setUpdater(Math.random())}\n\n                sortDirection={localInterface.sort.field === 'created_by' ? localInterface.sort.direction : undefined}\n                onSortDirectionChange={(value) => setLocalInterface({...localInterface, sort: {field: 'created_by', direction: value}})}\n              />\n              <ReportTableField\n                contents={(<span>Appointments</span>)}\n\n                sortDirection={localInterface.sort.field === 'appointments' ? localInterface.sort.direction : undefined}\n                onSortDirectionChange={(value) => setLocalInterface({...localInterface, sort: {field: 'appointments', direction: value}})}\n\n                onFilterFire={() => $setUpdater(Math.random())}\n              />\n              <ReportTableField\n                contents={(<span>Service resource</span>)}\n\n                allFiltersSelected={isAllFiltersSelected(\"service_resources\")}\n                onAllFiltersChange={(value) => switchFilter(\"service_resources\", \"All\", value)}\n\n                filterWords={reportData.interface.filter_words.service_resources.map((filterWord) => ({\n                  word: filterWord,\n                  selected: isFilterSelected(\"service_resources\", filterWord)\n                }))}\n                onFilterChange={(value) => { console.log(value); switchFilter(\"service_resources\", value.word, value.selected) }}\n                onFilterFire={() => $setUpdater(Math.random())}\n\n                sortDirection={localInterface.sort.field === 'service_resources' ? localInterface.sort.direction : undefined}\n                onSortDirectionChange={(value) => setLocalInterface({...localInterface, sort: {field: 'service_resources', direction: value}})}\n              />\n              <ReportTableField\n                contents={(<span>Total</span>)}\n\n                sortDirection={localInterface.sort.field === 'total' ? localInterface.sort.direction : undefined}\n                onSortDirectionChange={(value) => setLocalInterface({...localInterface, sort: {field: 'total', direction: value}})}\n\n                onFilterFire={() => $setUpdater(Math.random())}\n              />\n              <ReportTableField\n                contents={(<span>Paid</span>)}\n\n                sortDirection={localInterface.sort.field === 'paid' ? localInterface.sort.direction : undefined}\n                onSortDirectionChange={(value) => setLocalInterface({...localInterface, sort: {field: 'paid', direction: value}})}\n\n                onFilterFire={() => $setUpdater(Math.random())}\n              />\n            </tr>\n            {reportData.jobs.map((job, i) => (\n              <tr key={i} onClick={() => $router.router.navigate('jobs.item', {\n                jobId: job.job_id\n              }, {reload: true})}>\n                <td>{job.created_at}</td>\n                <td>{job.name}</td>\n                <td>{job.status}</td>\n                <td>{job.property_type}</td>\n                <td>{job.area}</td>\n                <td>{job.source}</td>\n                <td>{job.created_by}</td>\n                <td>{job.appointments}</td>\n                <td>{job.service_resources}</td>\n                <td>{job.total}</td>\n                <td>{job.paid}</td>\n              </tr>\n            ))}\n          </table>\n\n          {/* Medum screen table */}\n          <table className={classNames('table', '__hide-on-wide', '__hide-on-mobile', {\n            __respectAsidePanel: props.store.navActive.is\n          })}>\n            <tr></tr>\n            {reportData.jobs.map((job, i) => (\n              <tr key={i} onClick={() => $router.router.navigate('jobs.item', {\n                jobId: job.job_id\n              }, {reload: true})}>\n                <td>\n                  <div>{job.name}</div>\n                  <div>{job.created_at}</div>\n                </td>\n                <td>\n                  <div>{job.created_by}</div>\n                  <div>{job.service_resources}</div>\n                </td>\n                <td>\n                  <div>{job.area}</div>\n                  <div>{job.source}</div>\n                </td>\n                <td>\n                  <div>{job.property_type}</div>\n                  <div>{job.status}</div>\n                </td>\n                <td>\n                  <div>Appointments: {job.appointments}</div>\n                  <div>&nbsp;</div>\n                </td>\n                <td>\n                  <div>Total: {job.total}</div>\n                  <div>Paid: {job.paid}</div>\n                </td>\n              </tr>\n            ))}\n          </table>\n\n          {/* Mobile table items */}\n          <div className={classNames('mobile-table-items', '__show-on-mobile', {\n            __respectAsidePanel: props.store.navActive.is\n          })}>\n\n            {reportData.jobs.map((job, i: number) => (\n              <div className=\"item\" key={i} onClick={() => $router.router.navigate('jobs.item', {\n                jobId: job.job_id\n              }, {reload: true})}>\n\n                <div className=\"__top\">\n\n                  <div className=\"__left\">\n                    <div>\n                      <strong>{job.name}</strong>\n                    </div>\n                    <div>\n                      Appointments: {job.appointments}\n                    </div>\n                  </div>\n\n                  <div className=\"__right\">\n                    <div>\n                      Paid: <b>{job.paid}</b>\n                    </div>\n                    <div>\n                      Total: <b>{job.total}</b>\n                    </div>\n                    <div>\n                      {job.property_type}\n                    </div>\n                    <div>\n                      <b>{job.status}</b>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"__bottom\">\n\n                  <div className=\"__left\">\n                    <div>\n                      <span className=\"gray\">Area:</span>\n                      <span> {job.area}</span>\n                    </div>\n                    <div>\n                      <span className=\"gray\">Source:</span>\n                      <span> {job.source}</span>\n                    </div>\n                    <div>\n                      <span className=\"gray\">Service Resourse:</span>\n                      <span> {job.service_resources}</span>\n                    </div>\n                  </div>\n\n                  <div className=\"__right small\">\n                    <div>\n                      {job.created_at}\n                    </div>\n                    <div>\n                      Created by {job.created_by}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Table controls */}\n        <ReportTableControls\n          isUnder={true}\n\n          onMaxRowsChange={() => $setUpdater(Math.random())}\n\n          amount={{\n            total: reportData.interface.rows_all,\n            start: reportData.interface.rows_start,\n            end: reportData.interface.rows_end\n          }}\n\n          page={localInterface.page}\n          maxPages={reportData.interface.max_pages}\n          onPagesStart={() => setLocalInterface({...localInterface, page: 1})}\n          onPrevPage={() => setLocalInterface({...localInterface, page: localInterface.page-1})}\n          onNextPage={() => setLocalInterface({...localInterface, page: localInterface.page+1})}\n          onPagesEnd={() => setLocalInterface({...localInterface, page: reportData.interface.max_pages})}\n          \n          sort={localInterface.sort}\n          sortFields={localInterface.sortFields}\n          onSortFieldChange={(value) => setLocalInterface({...localInterface, sort: {...localInterface.sort, field: value}})}\n          onSortDirectionChange={(value) => setLocalInterface({...localInterface, sort: {...localInterface.sort, direction: value}})}\n          onSortFire={() => $setUpdater(Math.random())}\n        />\n      </div>\n    ) : null}\n  </>)\n})\nexport default JobsPage_List\n"]},"metadata":{},"sourceType":"module"}