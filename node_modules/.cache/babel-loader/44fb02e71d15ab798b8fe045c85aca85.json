{"ast":null,"code":"var _jsxFileName = \"/Users/nicole/rrrr/crm/src/components/AudioPlayer.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { calculateFromPercent, calculatePercent, formatTime } from \"../funcs\";\nimport { mapDispatchToProps, mapStateToProps } from \"../store\";\nimport \"../styles/components/audio-player.sass\";\nimport Icon from \"./Icon\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioPlayer = connect(mapStateToProps, mapDispatchToProps)(_s(function (props) {\n  var _$player$current7, _$player$current8;\n\n  _s();\n\n  const [rerender, setRerender] = useState(0);\n  const $player = useRef(null);\n  const $playerSeeker = useRef(null);\n  const [progress, setProgress] = useState(0);\n  const [playing, setPlaying] = useState(!!props.playing); // Set progress from prop\n\n  useEffect(() => {\n    setProgress(props.progress || 0);\n  }, [props.progress]); // Start or stop\n\n  useEffect(() => {\n    var _$player$current, _$player$current2;\n\n    if (props.playing === undefined) return;\n    if (props.playing) (_$player$current = $player.current) === null || _$player$current === void 0 ? void 0 : _$player$current.play();else (_$player$current2 = $player.current) === null || _$player$current2 === void 0 ? void 0 : _$player$current2.pause();\n    setPlaying(props.playing);\n  }, [props.playing]); // On progress change\n\n  function onProgressChange(event) {\n    var _$player$current3, _$player$current4;\n\n    setProgress(calculatePercent(((_$player$current3 = $player.current) === null || _$player$current3 === void 0 ? void 0 : _$player$current3.currentTime) || 0, ((_$player$current4 = $player.current) === null || _$player$current4 === void 0 ? void 0 : _$player$current4.duration) || 0));\n  } // Seek function\n\n\n  function seek(event) {\n    let w100 = parseFloat(window.getComputedStyle($playerSeeker.current).width);\n    let w = event.nativeEvent.offsetX;\n    let p = calculatePercent(w, w100);\n    $player.current.currentTime = calculateFromPercent(p, $player.current.currentTime, $player.current.duration);\n  } // Render function\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"AudioPlayer\",\n    children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: $player,\n      onTimeUpdate: onProgressChange,\n      onPlay: () => setPlaying(true),\n      onPause: () => setPlaying(false),\n      onDurationChange: () => setRerender(Math.random()),\n      onTimeUpdateCapture: () => setRerender(Math.random()),\n      children: /*#__PURE__*/_jsxDEV(\"source\", {\n        src: props.audioSrc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), !playing ? /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"_zeroed _iconed play-switcher\",\n      onClick: () => {\n        var _$player$current5;\n\n        return (_$player$current5 = $player.current) === null || _$player$current5 === void 0 ? void 0 : _$player$current5.play();\n      },\n      children: /*#__PURE__*/_jsxDEV(Icon, {\n        icon: \"video-15\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"_zeroed _iconed play-switcher\",\n      onClick: () => {\n        var _$player$current6;\n\n        return (_$player$current6 = $player.current) === null || _$player$current6 === void 0 ? void 0 : _$player$current6.pause();\n      },\n      children: /*#__PURE__*/_jsxDEV(Icon, {\n        icon: \"media-control-49\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"time\",\n      children: formatTime(((_$player$current7 = $player.current) === null || _$player$current7 === void 0 ? void 0 : _$player$current7.currentTime) || 0)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-seeker\",\n      onClick: seek,\n      ref: $playerSeeker,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"seeker-progress\",\n        style: {\n          width: `${progress}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"seeker-notch\",\n        style: {\n          left: `${progress}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"time\",\n      children: formatTime(((_$player$current8 = $player.current) === null || _$player$current8 === void 0 ? void 0 : _$player$current8.duration) || 0)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}, \"IaZi14om+EeRYNlK7URMoOd96/I=\"));\nexport default AudioPlayer;","map":{"version":3,"sources":["/Users/nicole/rrrr/crm/src/components/AudioPlayer.tsx"],"names":["React","useEffect","useRef","useState","connect","calculateFromPercent","calculatePercent","formatTime","mapDispatchToProps","mapStateToProps","Icon","AudioPlayer","props","rerender","setRerender","$player","$playerSeeker","progress","setProgress","playing","setPlaying","undefined","current","play","pause","onProgressChange","event","currentTime","duration","seek","w100","parseFloat","window","getComputedStyle","width","w","nativeEvent","offsetX","p","Math","random","audioSrc","left"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { calculateFromPercent, calculatePercent, formatTime } from \"../funcs\"\nimport { StoreDispatch, StoreState, mapDispatchToProps, mapStateToProps } from \"../store\";\n\nimport \"../styles/components/audio-player.sass\"\nimport Icon from \"./Icon\"\n\ninterface Props {\n  store: StoreState,\n  dispatcher: StoreDispatch,\n\n  audioSrc: string,\n  progress?: number,\n  playing?: boolean\n}\n\nconst AudioPlayer = connect(mapStateToProps, mapDispatchToProps)(function(props: Props) {\n\n  const [rerender, setRerender] = useState(0)\n\n  const $player = useRef<HTMLAudioElement>(null)\n  const $playerSeeker = useRef<HTMLDivElement>(null)\n  \n  const [progress, setProgress] = useState(0)\n\n  const [playing, setPlaying] = useState<boolean>(!!props.playing)\n\n  // Set progress from prop\n  useEffect(() => {\n    setProgress(props.progress || 0)\n  }, [props.progress])\n\n  // Start or stop\n  useEffect(() => {\n\n    if (props.playing === undefined) return\n    \n    if(props.playing) $player.current?.play()\n    else $player.current?.pause()\n\n    setPlaying(props.playing)\n  }, [props.playing])\n\n  // On progress change\n  function onProgressChange(event: React.SyntheticEvent<HTMLAudioElement, Event>) {\n    setProgress(calculatePercent($player.current?.currentTime || 0, $player.current?.duration || 0))\n  }\n\n  // Seek function\n  function seek(event: any) {\n\n    let w100 = parseFloat(window.getComputedStyle($playerSeeker.current as any).width)\n    let w = event.nativeEvent.offsetX\n\n    let p = calculatePercent(w, w100);\n\n    ($player.current as any).currentTime = calculateFromPercent(p, ($player.current as any).currentTime, ($player.current as any).duration)\n\n  }\n\n  // Render function\n  return (\n    <div className=\"AudioPlayer\">\n\n      <audio\n        ref={$player}\n        onTimeUpdate={onProgressChange}\n        onPlay={() => setPlaying(true)}\n        onPause={() => setPlaying(false)}\n        onDurationChange={() => setRerender(Math.random())}\n        onTimeUpdateCapture={() => setRerender(Math.random())}\n      >\n        <source src={props.audioSrc}/>\n      </audio>\n      \n      {!playing ? (\n        <button className=\"_zeroed _iconed play-switcher\" onClick={() => $player.current?.play()}>\n          <Icon icon=\"video-15\" />\n        </button>\n      ) : (\n        <button className=\"_zeroed _iconed play-switcher\" onClick={() => $player.current?.pause()}>\n          <Icon icon=\"media-control-49\" />\n        </button>\n      )}\n\n      <div className=\"time\">{formatTime($player.current?.currentTime || 0)}</div>\n\n      <div className=\"player-seeker\" onClick={seek} ref={$playerSeeker}>\n        <div className=\"seeker-progress\" style={{width: `${progress}%`}}></div>\n        <div className=\"seeker-notch\" style={{left: `${progress}%`}}></div>\n      </div>\n\n      <div className=\"time\">{formatTime($player.current?.duration || 0)}</div>\n    </div>\n  )\n})\nexport default AudioPlayer\n"]},"metadata":{},"sourceType":"module"}