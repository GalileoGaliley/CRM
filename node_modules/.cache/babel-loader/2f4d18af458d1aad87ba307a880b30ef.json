{"ast":null,"code":"import _slicedToArray from\"/Users/nicole/rrrr/crm/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import classNames from\"classnames\";import{DateTime}from\"luxon\";import React,{useState}from\"react\";import{connect}from\"react-redux\";import{mapDispatchToProps,mapStateToProps}from\"../../store\";import DateRangeCalendar from\"../DateRangeCalendar\";import Icon from\"../Icon\";import Select from\"../Select\";import\"../../styles/components/reports/filters.sass\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ReportFilters=connect(mapStateToProps,mapDispatchToProps)(function(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),dateRangeCalendarShown=_useState2[0],setDateRangeCalendarShown=_useState2[1];// Render function\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"ReportFilters\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex-container __left __hide-on-mobile\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-field __search-form\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"_rounded\",onChange:function onChange(_ref){var value=_ref.target.value;return props.onSearchInputChange(value);}}),/*#__PURE__*/_jsx(\"button\",{className:\"_wa _white _iconed _rounded\",onClick:function onClick(){return props.onUpdate();},children:/*#__PURE__*/_jsx(Icon,{icon:\"magnifier-5\"})})]}),props.childrenAfterSearch]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex-container __right\",children:[props.childrenBeforeDateType,true&&props.dateRangeType&&props.onDateRangeTypeChange?/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Select,{zeroed:true,options:[{span:\"Schedule date\",value:\"schedule\"},{span:\"Created date\",value:\"created\"}],selectedOption:props.dateRangeType,onChange:function onChange(value){props.onDateRangeTypeChange(value);}})}):null,true&&props.dateRangePreset&&props.onDateRangePresetChange?/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Select,{zeroed:true,options:[{span:\"Custom\",value:\"custom\"},{span:\"Tomorrow & Next\",value:\"tomorrow_and_next\"},{span:\"Tomorrow\",value:\"tomorrow\"},{span:\"Today\",value:\"today\"},{span:\"Yesterday\",value:\"yesterday\"},{span:\"This week (Sun - today)\",value:\"this_week_sun_today\"},{span:\"This week (Mon - today)\",value:\"this_week_mon_today\"},{span:\"Last 7 days\",value:\"last_7_days\"},{span:\"Last week (Sun - Sat)\",value:\"last_week_sun_sat\"},{span:\"Last week (Mon - Sun)\",value:\"last_week_mon_sun\"},{span:\"Last business week\",value:\"last_business_week\"},{span:\"Last 14 days\",value:\"last_14_days\"},{span:\"Last 30 days\",value:\"last_30_days\"},{span:\"This month\",value:\"this_month\"},{span:\"Last month\",value:\"last_month\"},{span:\"All\",value:\"all\"}],selectedOption:props.dateRangePreset,onChange:function onChange(value){props.onDateRangePresetChange(value);}})}):null,true&&props.minDate&&props.maxDate&&props.onMinDateChange&&props.onMaxDateChange?/*#__PURE__*/_jsxs(\"div\",{onFocus:function onFocus(){return setDateRangeCalendarShown(true);},onBlur:function onBlur(){return setDateRangeCalendarShown(false);},tabIndex:-1,className:\"form-field date-range\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-field _iconed\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",readOnly:true,value:DateTime.fromJSDate(props.minDate).toLocaleString(DateTime.DATE_SHORT)}),/*#__PURE__*/_jsx(\"button\",{className:\"_zeroed _iconed __noclick\",children:/*#__PURE__*/_jsx(Icon,{icon:\"calendar-4\"})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"input-between-text\",children:\"to\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-field _iconed\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",readOnly:true,value:DateTime.fromJSDate(props.maxDate).toLocaleString(DateTime.DATE_SHORT)}),/*#__PURE__*/_jsx(\"button\",{className:\"_zeroed _iconed __noclick\",children:/*#__PURE__*/_jsx(Icon,{icon:\"calendar-4\"})})]}),/*#__PURE__*/_jsx(\"div\",{className:classNames(\"date-range-wrapper\",{_shown:dateRangeCalendarShown}),children:/*#__PURE__*/_jsx(DateRangeCalendar,{startDate:props.minDate,endDate:props.maxDate,onStartDateUpdate:function onStartDateUpdate(date){props.onMinDateChange(date);},onEndDateUpdate:function onEndDateUpdate(date){props.onMaxDateChange(date);}})})]}):null,true&&props.minDate&&props.maxDate?/*#__PURE__*/_jsx(\"button\",{className:classNames(['_wa','_rounded','_iconed','update-button','__hide-on-mobile',{_blue:props.updateButtonActive}]),onClick:function onClick(){return props.onUpdate();},children:/*#__PURE__*/_jsx(Icon,{className:\"_mirrored-y\",icon:\"refresh-2\"})}):null]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"__show-on-mobile flex-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-field __search-form\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"_rounded\",onChange:function onChange(_ref2){var value=_ref2.target.value;return props.onSearchInputChange(value);}}),/*#__PURE__*/_jsx(\"button\",{className:\"_wa _white _iconed _rounded\",onClick:function onClick(){return props.onUpdate();},children:/*#__PURE__*/_jsx(Icon,{icon:\"magnifier-5\"})})]}),props.childrenAfterSearch,true&&props.minDate&&props.maxDate?/*#__PURE__*/_jsx(\"button\",{className:classNames(['_wa','_rounded','_iconed','update-button',{_blue:props.updateButtonActive}]),onClick:function onClick(){return props.onUpdate();},children:/*#__PURE__*/_jsx(Icon,{className:\"_mirrored-y\",icon:\"refresh-2\"})}):null]})]});});export default ReportFilters;","map":{"version":3,"sources":["/Users/nicole/rrrr/crm/src/components/reports/Filters.tsx"],"names":["classNames","DateTime","React","useState","connect","mapDispatchToProps","mapStateToProps","DateRangeCalendar","Icon","Select","ReportFilters","props","dateRangeCalendarShown","setDateRangeCalendarShown","value","target","onSearchInputChange","onUpdate","childrenAfterSearch","childrenBeforeDateType","dateRangeType","onDateRangeTypeChange","span","dateRangePreset","onDateRangePresetChange","minDate","maxDate","onMinDateChange","onMaxDateChange","fromJSDate","toLocaleString","DATE_SHORT","_shown","date","_blue","updateButtonActive"],"mappings":"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","sourcesContent":["import classNames from \"classnames\"\nimport { DateTime } from \"luxon\"\nimport React, { ReactChildren, ReactElement, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { DateRangePreset } from \"../../models/Misc\"\nimport { StoreDispatch, StoreState, mapDispatchToProps, mapStateToProps } from \"../../store\";\nimport DateRangeCalendar from \"../DateRangeCalendar\"\nimport Icon from \"../Icon\"\nimport Select from \"../Select\"\n\nimport \"../../styles/components/reports/filters.sass\"\n\ninterface Props {\n  store: StoreState,\n  dispatcher: StoreDispatch,\n\n  onSearchInputChange(value: string): void,\n\n  dateRangeType?: string,\n  onDateRangeTypeChange?(value: string): void,\n\n  dateRangePreset?: DateRangePreset,\n  onDateRangePresetChange?(value: DateRangePreset): void,\n\n  minDate?: Date,\n  onMinDateChange?(value: Date): void,\n  \n  maxDate?: Date,\n  onMaxDateChange?(value: Date): void,\n\n  updateButtonActive?: boolean,\n  onUpdate(): void,\n\n  childrenAfterSearch?: ReactElement,\n  childrenBeforeDateType?: ReactElement\n}\n\nconst ReportFilters = connect(mapStateToProps, mapDispatchToProps)(function(props: Props) {\n\n  const [dateRangeCalendarShown, setDateRangeCalendarShown] = useState(false)\n  \n  // Render function\n  return (\n    <div className=\"ReportFilters\">\n      \n      <div className=\"flex-container\">\n\n        <div className=\"flex-container __left __hide-on-mobile\">\n          \n          { /* Search field */}\n          <div className=\"form-field __search-form\">\n            <input type=\"text\" className=\"_rounded\" onChange={({target: {value}}) => props.onSearchInputChange(value)} />\n            <button className=\"_wa _white _iconed _rounded\" onClick={() => props.onUpdate()}>\n              <Icon icon=\"magnifier-5\" />\n            </button>\n          </div>\n\n          {props.childrenAfterSearch}\n        </div>\n\n        <div className=\"flex-container __right\">\n\n          {props.childrenBeforeDateType}\n\n          { /* Date range type selection */}\n          {(\n            true\n            && props.dateRangeType\n            && props.onDateRangeTypeChange\n          ) ? (\n            <div>\n              <Select zeroed={true} options={[{\n                span: \"Schedule date\",\n                value: \"schedule\"\n              }, {\n                span: \"Created date\",\n                value: \"created\"\n              }]} selectedOption={props.dateRangeType} onChange={(value: string) => {\n                (props.onDateRangeTypeChange as any)(value)\n              }} />\n            </div>\n          ) : null}\n\n          { /* Date range type selection */}\n          {(true\n            && props.dateRangePreset\n            && props.onDateRangePresetChange\n          ) ? (\n            <div>\n              <Select zeroed={true} options={[{\n                span: \"Custom\",\n                value: \"custom\"\n              }, {\n                span: \"Tomorrow & Next\",\n                value: \"tomorrow_and_next\"\n              }, {\n                span: \"Tomorrow\",\n                value: \"tomorrow\"\n              }, {\n                span: \"Today\",\n                value: \"today\"\n              }, {\n                span: \"Yesterday\",\n                value: \"yesterday\"\n              }, {\n                span: \"This week (Sun - today)\",\n                value: \"this_week_sun_today\"\n              }, {\n                span: \"This week (Mon - today)\",\n                value: \"this_week_mon_today\"\n              }, {\n                span: \"Last 7 days\",\n                value: \"last_7_days\"\n              }, {\n                span: \"Last week (Sun - Sat)\",\n                value: \"last_week_sun_sat\"\n              }, {\n                span: \"Last week (Mon - Sun)\",\n                value: \"last_week_mon_sun\"\n              }, {\n                span: \"Last business week\",\n                value: \"last_business_week\"\n              }, {\n                span: \"Last 14 days\",\n                value: \"last_14_days\"\n              }, {\n                span: \"Last 30 days\",\n                value: \"last_30_days\"\n              }, {\n                span: \"This month\",\n                value: \"this_month\"\n              }, {\n                span: \"Last month\",\n                value: \"last_month\"\n              }, {\n                span: \"All\",\n                value: \"all\"\n              }]} selectedOption={props.dateRangePreset} onChange={(value: string) => {\n                (props.onDateRangePresetChange as any)(value as DateRangePreset)\n              }} />\n            </div>\n          ) : null}\n\n          { /* Date range */}\n          {(true\n            && props.minDate\n            && props.maxDate\n            && props.onMinDateChange\n            && props.onMaxDateChange\n          ) ? (\n            <div onFocus={() => setDateRangeCalendarShown(true)} onBlur={() => setDateRangeCalendarShown(false)} tabIndex={-1} className=\"form-field date-range\">\n              <div className=\"form-field _iconed\">\n                <input type=\"text\" readOnly value={DateTime.fromJSDate(props.minDate).toLocaleString(DateTime.DATE_SHORT)} />\n                <button className=\"_zeroed _iconed __noclick\">\n                  <Icon icon=\"calendar-4\" />\n                </button>\n              </div>\n              <div className=\"input-between-text\">to</div>\n              <div className=\"form-field _iconed\">\n                <input type=\"text\" readOnly value={DateTime.fromJSDate(props.maxDate).toLocaleString(DateTime.DATE_SHORT)} />\n                <button className=\"_zeroed _iconed __noclick\">\n                  <Icon icon=\"calendar-4\" />\n                </button>\n              </div>\n\n              <div className={classNames(\"date-range-wrapper\", {_shown: dateRangeCalendarShown})}>\n                <DateRangeCalendar\n                  startDate={props.minDate}\n                  endDate={props.maxDate}\n                    \n                  onStartDateUpdate={(date) => { (props.onMinDateChange as any)(date);}}\n                  onEndDateUpdate={(date) => { (props.onMaxDateChange as any)(date);}}\n                />\n              </div>\n            </div>\n          ) : null}\n\n          { /* Refresh button */}\n          {(true\n            && props.minDate\n            && props.maxDate\n          ) ? (\n            <button\n              className={classNames(['_wa', '_rounded', '_iconed', 'update-button', '__hide-on-mobile', { _blue: props.updateButtonActive }])}\n              onClick={() => props.onUpdate()}\n            >\n              <Icon className=\"_mirrored-y\" icon=\"refresh-2\" />\n            </button>\n          ) : null}\n        </div>\n      </div>\n\n      <div className=\"__show-on-mobile flex-container\">\n\n          { /* Search field */}\n          <div className=\"form-field __search-form\">\n            <input type=\"text\" className=\"_rounded\" onChange={({target: {value}}) => props.onSearchInputChange(value)} />\n            <button className=\"_wa _white _iconed _rounded\" onClick={() => props.onUpdate()}>\n              <Icon icon=\"magnifier-5\" />\n            </button>\n          </div>\n        \n          {props.childrenAfterSearch}\n\n          { /* Refresh button */}\n          {(true\n            && props.minDate\n            && props.maxDate\n          ) ? (\n            <button\n              className={classNames(['_wa', '_rounded', '_iconed', 'update-button', { _blue: props.updateButtonActive }])}\n              onClick={() => props.onUpdate()}\n            >\n              <Icon className=\"_mirrored-y\" icon=\"refresh-2\" />\n            </button>\n          ) : null}\n        </div>\n    </div>\n  )\n})\nexport default ReportFilters\n"]},"metadata":{},"sourceType":"module"}